package com.ufgov.zc.client.zc.formula;import java.awt.BorderLayout;import java.awt.Dimension;import java.awt.Toolkit;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.awt.event.KeyListener;import javax.swing.JPanel;import javax.swing.JSplitPane;import javax.swing.JTabbedPane;import javax.swing.tree.TreePath;import com.ufgov.zc.client.component.zc.tree.TreeNodeSelectionListener;import com.ufgov.zc.common.zc.model.ZcEbFormula;public class FormulaShowPanel extends JPanel {  private ZcEbFormula zcEbFormula;  private JSplitPane mainPanel;  private FormulaTreePanel treePanel;  private KeyListener keyListener;  private TreeNodeSelectionListener treeListener;  private JTabbedPane tabbedPane;  private FormulaItemShowPanel itemShowPanel;  private FormulaJTreeNode lastSelectedNode;  public FormulaShowPanel(ZcEbFormula zcEbFormula) {    this.zcEbFormula = zcEbFormula;    this.setLayout(new BorderLayout());    init();  }  private void init() {    initFormulaTree(zcEbFormula);    inintMainPanel();    this.add(mainPanel, BorderLayout.CENTER);  }  private void initFormulaTree(ZcEbFormula zcEbFormula) {    treePanel = new FormulaTreePanel(zcEbFormula);    treePanel.loadTreeNodes();    addListener();  }  private void inintMainPanel() {    mainPanel = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT);    mainPanel.setDividerSize(7);    int width = (int) ((double) (Toolkit.getDefaultToolkit().getScreenSize().width - mainPanel.getDividerSize()) * 0.25);    mainPanel.setDividerLocation(width);    mainPanel.setOneTouchExpandable(true);    mainPanel.setMinimumSize(new Dimension(0, 0));    mainPanel.setLeftComponent(treePanel);    itemShowPanel = new FormulaItemShowPanel(zcEbFormula);    mainPanel.setRightComponent(itemShowPanel);  }  private void addListener() {    treeListener = new TreeNodeSelectionListener(treePanel.getTree()) {      protected void doLeftMouseClick(TreePath path) {        if (path != null) {          FormulaJTreeNode node = (FormulaJTreeNode) path.getLastPathComponent();          doNodeSelected(node);        }      }    };    keyListener = new KeyAdapter() {      public void keyReleased(KeyEvent e) {        if (e.getKeyCode() == KeyEvent.VK_UP || e.getKeyCode() == KeyEvent.VK_DOWN) {          TreePath path = treePanel.getTree().getSelectionPath();          FormulaJTreeNode node = (FormulaJTreeNode) path.getLastPathComponent();          doNodeSelected(node);        }      }    };    treePanel.getTree().addMouseListener(treeListener);    treePanel.getTree().addKeyListener(keyListener);  }  private void doNodeSelected(FormulaJTreeNode node) {    reloadRightPanelEditData(node);    lastSelectedNode = node;  }  private void reloadRightPanelEditData(FormulaJTreeNode node) {    itemShowPanel.refreshData(node);    mainPanel.setRightComponent(itemShowPanel);    mainPanel.setDividerLocation(mainPanel.getDividerLocation());    mainPanel.setOneTouchExpandable(true);  }}
/**   * @(#) project: Gk* @(#) file: ZcEbFormulaTemplateListPanel.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.zc.formula.template;import java.awt.BorderLayout;import java.awt.Color;import java.awt.Dialog;import java.awt.Font;import java.awt.Window;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.util.ArrayList;import java.util.List;import javax.swing.BorderFactory;import javax.swing.JFrame;import javax.swing.JOptionPane;import javax.swing.JTabbedPane;import javax.swing.JTable;import javax.swing.SwingUtilities;import javax.swing.UIManager;import javax.swing.border.TitledBorder;import org.apache.log4j.Logger;import com.ufgov.smartclient.component.table.fixedtable.JPageableFixedTable;import com.ufgov.smartclient.plaf.BlueLookAndFeel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.ParentWindowAware;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.UIConstants;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.common.converter.zc.ZcEbFormulaTemplateToTableModelConverter;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.component.JFuncToolBar;import com.ufgov.zc.client.component.JTablePanel;import com.ufgov.zc.client.component.button.AddButton;import com.ufgov.zc.client.component.button.DeleteButton;import com.ufgov.zc.client.component.button.EditButton;import com.ufgov.zc.client.component.ui.AbstractEditListBill;import com.ufgov.zc.client.util.ListUtil;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.exception.BaseException;import com.ufgov.zc.common.system.exception.DataAlreadyDeletedException;import com.ufgov.zc.common.system.exception.OtherException;import com.ufgov.zc.common.system.util.ObjectUtil;import com.ufgov.zc.common.zc.model.ZcEbFormulaTemplate;import com.ufgov.zc.common.zc.publish.IZcEbFormulaTemplateServiceDelegate;public class ZcEbTemplateListPanel extends AbstractEditListBill implements ParentWindowAware {  private static final Logger logger = Logger.getLogger(ZcEbTemplateListPanel.class);  private Window parentWindow;  public Window getParentWindow() {    return parentWindow;  }  public void setParentWindow(Window parentWindow) {    this.parentWindow = parentWindow;  }  protected JFuncToolBar toolBar = new JFuncToolBar();  private String compoId = "ZC_EB_FORMULA_TEMPLATE";  /**   * 顶部按钮   */  private AddButton addButton = new AddButton();  private ZcEbTemplateListPanel self = this;  private EditButton editButton = new EditButton();  private DeleteButton deleteButton = new DeleteButton();  private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private ElementConditionDto elementConditionDto = new ElementConditionDto();  private JTablePanel tablePanel = new JTablePanel();  private JTabbedPane tabbedPane = new JTabbedPane();  private ZcEbFormulaTemplateToTableModelConverter modelConverter = new ZcEbFormulaTemplateToTableModelConverter();  private TemplateSetMainPanel panel;  public TemplateSetMainPanel getPanel() {    return panel;  }  public void setPanel(TemplateSetMainPanel panel) {    this.panel = panel;  }  private IZcEbFormulaTemplateServiceDelegate zcEbFormulaTemplateServiceDelegate = (IZcEbFormulaTemplateServiceDelegate) ServiceFactory.create(  IZcEbFormulaTemplateServiceDelegate.class, "zcEbFormulaTemplateServiceDelegate");  static {    LangTransMeta.init("ZC%");  }  /**   *   * <p>构造函数: </p>   */  public ZcEbTemplateListPanel() {    init();  }  private void init() {    tablePanel.init();    tabbedPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "评标模板管理", TitledBorder.CENTER, TitledBorder.TOP,    new Font("宋体", Font.BOLD, 15), Color.BLUE));    addMouseListener();    tablePanel.setTablePreferencesKey(this.getClass().getName() + "_table");    tabbedPane.add("评标模板列表", tablePanel);    this.setLayout(new BorderLayout());    addToolBarComponent(toolBar);    this.add(toolBar, BorderLayout.NORTH);    this.add(tabbedPane, BorderLayout.CENTER);    refreshData();  }  @SuppressWarnings("unchecked")  public void refreshData() {    List list = zcEbFormulaTemplateServiceDelegate.getZcEbFormulaTemplateList(elementConditionDto, requestMeta);    tablePanel.setTableModel(modelConverter.convertToTableModel(list));  }  @Override  protected void addToolBarComponent(JFuncToolBar toolBar) {    toolBar.setModuleCode("ZC");    toolBar.setCompoId(compoId);    toolBar.add(addButton);    toolBar.add(editButton);    toolBar.add(deleteButton);    // 初始化按钮的action事件    addButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        doAdd();        refreshData();      }    });    editButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        doEdit();        refreshData();      }    });    deleteButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        doDelete();        refreshData();      }    });  }  private void addMouseListener() {    final JTable table = tablePanel.getTable();    table.addMouseListener(new MouseAdapter() {      @Override      public void mouseClicked(MouseEvent e) {        if (e.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(e)) {          MyTableModel model = (MyTableModel) table.getModel();          int row = table.getSelectedRow();          List viewList = (List) ObjectUtil.deepCopy(ListUtil.convertToTableViewOrderList(model.getList(), table));          ZcEbFormulaTemplate zcEbFormulaTemplate = (ZcEbFormulaTemplate) viewList.get(row);          createEditItemDialog(zcEbFormulaTemplate);        }      }    });  }  private void createEditItemDialog(ZcEbFormulaTemplate ZcEbFormulaTemplate) {    panel = new TemplateSetMainPanel(ZcEbFormulaTemplate, this);    GkBaseDialog dialog = new GkBaseDialog(this.parentWindow, Dialog.ModalityType.APPLICATION_MODAL) {      @Override      public void closeDialog() {        panel.getTemplateEditPanel().doExit();      }    };    panel.setParentWindow(dialog);    dialog.setLayout(new BorderLayout());    dialog.add(panel);    dialog.setTitle("模板指标项编辑");    dialog.setSize(UIConstants.DIALOG_2_LEVEL_WIDTH, UIConstants.DIALOG_2_LEVEL_HEIGHT);    dialog.moveToScreenCenter();    dialog.setVisible(true);  }  private void doAdd() {    ZcEbFormulaTemplate zcEbFormulaTemplate = new ZcEbFormulaTemplate();    createEditItemDialog(zcEbFormulaTemplate);  }  private void doEdit() {    JPageableFixedTable table = tablePanel.getTable();    Integer[] selectedRow = table.getCheckedRows();    for (int i = 0; i < selectedRow.length; i++) {      selectedRow[i] = table.convertRowIndexToModel(selectedRow[i]);    }    if (selectedRow.length == 0) {      JOptionPane.showMessageDialog(this, "请选择需要修改的数据!", "提示", JOptionPane.INFORMATION_MESSAGE);      return;    }    if (selectedRow.length > 1) {      JOptionPane.showMessageDialog(this, "只能选择一条数据!", "提示", JOptionPane.INFORMATION_MESSAGE);      return;    }    List dataList = ((MyTableModel) table.getModel()).getList();    int index = table.convertRowIndexToModel(selectedRow[0]);    ZcEbFormulaTemplate zcEbFormulaTemplate = (ZcEbFormulaTemplate) dataList.get(index);    createEditItemDialog(zcEbFormulaTemplate);  }  private void doDelete() {    JPageableFixedTable table = tablePanel.getTable();    Integer[] selectedRows = table.getCheckedRows();    if (selectedRows.length == 0) {      JOptionPane.showMessageDialog(this, "请选择需要删除的数据!", "提示", JOptionPane.INFORMATION_MESSAGE);      return;    }    int result = JOptionPane.showConfirmDialog(self, "是否要删除选中的数据?", "删除确认", JOptionPane.YES_NO_OPTION);    if (result != JOptionPane.YES_OPTION) {      return;    }    List dataList = ((MyTableModel) table.getModel()).getList();    List chechedList = new ArrayList();        List otherList = new ArrayList();    for (Integer checkedRow : selectedRows) {      int accordDataRow = table.convertRowIndexToModel(checkedRow);            ZcEbFormulaTemplate temp = (ZcEbFormulaTemplate)dataList.get(accordDataRow);            if(!requestMeta.getSvUserName().equals(temp.getCreator())){    	      	  otherList.add(temp);    	        }      chechedList.add(temp);    }        if(otherList.size()>0){    	    	JOptionPane.showMessageDialog(this, "只能选择本人创建的模板执行删除!", "提示", JOptionPane.INFORMATION_MESSAGE);        return;    	    }    StringBuffer errorInfo = new StringBuffer("");    boolean success = true;    requestMeta.setFuncId(deleteButton.getFuncId());    try {      zcEbFormulaTemplateServiceDelegate.deleteListForZcEbFormulaTemplate(chechedList, requestMeta);    } catch (DataAlreadyDeletedException ex) {      errorInfo.append(ex.getMessage() + "\n");      logger.error(ex.getStackTraceMessage(), ex);      success = false;    } catch (BaseException ex) {      errorInfo.append(ex.getMessage() + "\n");      logger.error(ex.getStackTraceMessage(), ex);      success = false;    } catch (OtherException ex) {      errorInfo.append(ex.getMessage() + "\n");      logger.error(ex.getStackTraceMessage(), ex);      success = false;    } catch (Exception ex) {      errorInfo.append(ex.getMessage() + "\n");      logger.error(ex.getMessage(), ex);      success = false;    }    if (success) {      JOptionPane.showMessageDialog(this, "删除成功！", "提示", JOptionPane.INFORMATION_MESSAGE);    } else {      JOptionPane.showMessageDialog(this, "删除错误!\n" + errorInfo, "错误", JOptionPane.ERROR_MESSAGE);    }  }  public static void main(String[] args) {    SwingUtilities.invokeLater(new Runnable() {      public void run() {        try {          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());          UIManager.setLookAndFeel(new BlueLookAndFeel());        } catch (Exception e) {          e.printStackTrace();        }        ZcEbTemplateListPanel bill = new ZcEbTemplateListPanel();        JFrame frame = new JFrame("frame");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(UIConstants.DIALOG_2_LEVEL_WIDTH, UIConstants.DIALOG_2_LEVEL_HEIGHT);        frame.setLocationRelativeTo(null);        frame.getContentPane().add(bill);        frame.setVisible(true);      }    });  }}
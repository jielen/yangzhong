package com.ufgov.zc.client.zc.flowconsole.parts;import java.awt.Color;import java.awt.Font;import java.awt.event.ActionListener;import java.util.ArrayList;import java.util.List;import com.ufgov.zc.client.zc.flowconsole.business.INodeBusiness;public class Node {  public static final int GENERAL_STATUS = 0;//普通状态  public static final int SELECTED_STATUS = 1;//选中状态  public static final int DISENABLE_STATUS = 2;//不可操作状态  private int labelXOffset = 26;  private int labelYOffset = 102;  private int x;  private int y;  private int width;  private int height;  private String genIcon;  private String highLightIcon;  private String icon;  private String grayIcon;  private String name;  private String toolTipText;  private ActionListener action = null;  private String id;  private List<Button> buttons = new ArrayList<Button>();  private int moduleImageOffsetX = 37;  private int moduleImageOffsetY = 18;  private int status;  private Font textFont = new Font(null, Font.PLAIN, 14);  private Color textColor = new Color(0x993300);  private INodeBusiness nodeBusiness;  public boolean flag;  public int getLabelXOffset() {    return labelXOffset;  }  public void setLabelXOffset(int labelXOffset) {    this.labelXOffset = labelXOffset;  }  public int getX() {    return x;  }  public void setX(int x) {    this.x = x;  }  public int getY() {    return y;  }  public void setY(int y) {    this.y = y;  }  public int getWidth() {    return width;  }  public void setWidth(int width) {    this.width = width;  }  public int getHeight() {    return height;  }  public void setHeight(int height) {    this.height = height;  }  public String getIcon() {    return icon;  }  public void setIcon(String icon) {    this.icon = icon;  }  public String getName() {    return name;  }  public void setName(String name) {    this.name = name;  }  public String getToolTipText() {    return toolTipText;  }  public void setToolTipText(String toolTipText) {    this.toolTipText = toolTipText;  }  public ActionListener getAction() {    return action;  }  public void setAction(ActionListener action) {    this.action = action;  }  public String getId() {    return id;  }  public void setId(String id) {    this.id = id;  }  public int getModuleImageOffsetX() {    return moduleImageOffsetX;  }  public void setModuleImageOffsetX(int moduleImageOffsetX) {    this.moduleImageOffsetX = moduleImageOffsetX;  }  public int getModuleImageOffsetY() {    return moduleImageOffsetY;  }  public void setModuleImageOffsetY(int moduleImageOffsetY) {    this.moduleImageOffsetY = moduleImageOffsetY;  }  public int getLabelYOffset() {    return labelYOffset;  }  public void setLabelYOffset(int labelYOffset) {    this.labelYOffset = labelYOffset;  }  public void addButton(Button bt) {    this.buttons.add(bt);  }  public void removeButton(Button bt) {    this.buttons.remove(bt);  }  public List<Button> getButtons() {    return this.buttons;  }  public String getGenIcon() {    return genIcon;  }  public void setGenIcon(String genIcon) {    this.genIcon = genIcon;  }  public String getHighLightIcon() {    return highLightIcon;  }  public void setHighLightIcon(String highLightIcon) {    this.highLightIcon = highLightIcon;  }  public String getGrayIcon() {    return grayIcon;  }  public void setGrayIcon(String grayIcon) {    this.grayIcon = grayIcon;  }  public void setButtons(List<Button> buttons) {    this.buttons = buttons;  }  public int getStatus() {    return status;  }  public Font getTextFont() {    return textFont;  }  public void setTextFont(Font textFont) {    this.textFont = textFont;  }  public Color getTextColor() {    return textColor;  }  public void setTextColor(Color textColor) {    this.textColor = textColor;  }  public void setStatus(int status) {    if (status == GENERAL_STATUS) {      icon = genIcon;      textFont = new Font(null, Font.PLAIN, 14);    } else if (status == SELECTED_STATUS) {      icon = highLightIcon;      textFont = new Font(null, Font.BOLD, 14);    } else if (status == DISENABLE_STATUS) {      icon = grayIcon;      textFont = new Font(null, Font.BOLD, 14);      textColor = new Color(0xaaaaaa);    }    this.status = status;  }  public INodeBusiness getNodeBusiness() {    return nodeBusiness;  }  public void setNodeBusiness(INodeBusiness nodeBusiness) {    this.nodeBusiness = nodeBusiness;  }  public boolean isFlag() {    return flag;  }  public void setFlag(boolean flag) {    this.flag = flag;  }}
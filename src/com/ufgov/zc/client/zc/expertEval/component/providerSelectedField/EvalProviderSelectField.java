/**   * @(#) project: ZFCG* @(#) file: EvalProviderSelectField.java* * Copyright 2011 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.zc.expertEval.component.providerSelectedField;import java.awt.BorderLayout;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;import javax.swing.SwingUtilities;import javax.swing.UIManager;import com.ufgov.smartclient.plaf.BlueLookAndFeel;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.JButtonTextField;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.zc.model.EvalItemType;import com.ufgov.zc.common.zc.publish.IZcEbEvalServiceDelegate;/*** @ClassName: EvalProviderSelectField* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2011-5-25 下午04:02:24* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class EvalProviderSelectField extends JButtonTextField {  private static final long serialVersionUID = 6486922572479576827L;  private int nd = WorkEnv.getInstance().getTransNd();  private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private String title;  private List providerList;  public int getNd() {    return nd;  }  public void setNd(int nd) {    this.nd = nd;  }  public String getTitle() {    return title;  }  public void setTitle(String title) {    this.title = title;  }  public int getDialogType() {    return dialogType;  }  public void setDialogType(int dialogType) {    this.dialogType = dialogType;  }  private int dialogType = ZcSettingConstants.FOREIGNENTITY_BASE;  public EvalProviderSelectField(List providerList, int col, String title) {    super(col);    this.providerList = providerList;    this.init();    setColumns(30);  }  @Override  public void handleClick(JButtonTextField jButtonTextField) {    selectDialog.setVisible(true);  }  private void init() {    selectDialog = new EvalProviderSelectDialog(owner, true, this, providerList, title);  }  public static void main(String[] args) {    SwingUtilities.invokeLater(new Runnable() {      public void run() {        try {          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());          UIManager.setLookAndFeel(new BlueLookAndFeel());        } catch (Exception e) {          e.printStackTrace();        }        Map providerSelectMap = new HashMap();        providerSelectMap.put("PACK_CODE", "2002");        providerSelectMap.put("PROJ_CODE", "XCZX2011-118");        providerSelectMap.put("ITEM_TYPE", EvalItemType.SCORE);        providerSelectMap.put("FILTER_BY_COMPLIANCE_RES", "Y");        //        providerSelectMap.put("ITEM_TYPE", EvalItemType.COMPLIANICE);        providerSelectMap.put("FORMULA_CODE", "ZBJ_2011_04_000106");        providerSelectMap.put("EVAL_EXPERT_CODE", "EM-INP302");        RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();        IZcEbEvalServiceDelegate zcEbEvalServiceDelegate = (IZcEbEvalServiceDelegate) ServiceFactory.create(IZcEbEvalServiceDelegate.class,        "zcEbEvalServiceDelegate");        List providerList = zcEbEvalServiceDelegate.getEvalPackProviderList(providerSelectMap, requestMeta);        System.out.println("---------------------------------------" + providerList.size());        EvalProviderSelectField textField = new EvalProviderSelectField(providerList, 20, "供应商选择");        textField.setEditable(false);        textField.setRandomEdit(false);        JLabel label = new JLabel("选择评审供应商");        JPanel panel = new JPanel();        panel.add(label);        panel.add(textField);        JFrame frame = new JFrame("foreignEntityField test Window");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(400, 200);        frame.setLocationRelativeTo(null);        frame.getContentPane().add(panel, BorderLayout.NORTH);        frame.setVisible(true);      }    });  }}
/**   * @(#) project: ZFCG* @(#) file: EvalProviderSelectDialog.java* * Copyright 2011 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.zc.expertEval.component.providerSelectedField;import java.awt.BorderLayout;import java.awt.Container;import java.awt.Dialog;import java.awt.FlowLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.util.List;import javax.swing.JButton;import javax.swing.JOptionPane;import javax.swing.JPanel;import javax.swing.JTable;import javax.swing.SwingUtilities;import com.ufgov.smartclient.component.table.JGroupableTable;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.component.JButtonTextField;import com.ufgov.zc.client.component.JTablePanel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.zc.ZcUtil;/*** @ClassName: EvalProviderSelectDialog* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2011-5-25 下午04:17:14* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class EvalProviderSelectDialog extends GkBaseDialog {  private EvalProviderSelectDialog self = this;  protected JButtonTextField triggerField;  protected JPanel bottomPanel = new JPanel();  protected JButton okButton = new JButton("确定");  protected JButton cancelButton = new JButton("关闭");  private JTablePanel providerTablePanel = new JTablePanel();  EvalProviderToTableModelConerter mc = new EvalProviderToTableModelConerter();  private List providerList;  /*           * 初始化底部工具栏           */  protected void initBottomPanel() {    bottomPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));    bottomPanel.add(okButton);    bottomPanel.add(cancelButton);    cancelButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        self.closeDialog();      }    });    okButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        self.doOK();      }    });  }  private void doOK() {    int selectedRowCount = providerTablePanel.getTable().getSelectedRowCount();    if (selectedRowCount == 0) {      JOptionPane.showMessageDialog(self, "请选数据 ！", "提示", JOptionPane.INFORMATION_MESSAGE);      return;    } else if (selectedRowCount > 1) {      JOptionPane.showMessageDialog(self, "只能选择一条数据 ！", "提示", JOptionPane.INFORMATION_MESSAGE);      return;    } else if (selectedRowCount == 1) {      int selectedRow = providerTablePanel.getTable().convertRowIndexToModel(providerTablePanel.getTable().getSelectedRow());      BeanTableModel model = (BeanTableModel) providerTablePanel.getTable().getModel();      triggerField.setValue(model.getBean(selectedRow));    }    this.closeDialog();  }  public void doClear() {    self.triggerField.setValue(null);    providerTablePanel.getTable().clearSelection();    closeDialog();  }  public EvalProviderSelectDialog(Dialog dialog, boolean modal, JButtonTextField triggerField, List providerList, String title) {    this.triggerField = triggerField;    this.providerList = providerList;    init();  }  private void init() {    Container contentPane = this.getContentPane();    contentPane.setLayout(new BorderLayout());    providerTablePanel.init();    providerTablePanel.getSearchBar().setVisible(true);    providerTablePanel.getTable().setShowCheckedColumn(false);    providerTablePanel.getTable().setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);    this.initBottomPanel();    contentPane.add(providerTablePanel, BorderLayout.CENTER);    contentPane.add(bottomPanel, BorderLayout.SOUTH);    //初始化表格    addTableListenter();    providerTablePanel.setTableModel(EvalProviderToTableModelConerter.convertTableData(providerList));    ZcUtil.translateColName(providerTablePanel.getTable(), mc.getProviderColumnInfo());    this.setSize(500, 380);    moveToScreenCenter();  }  private void addTableListenter() {    final JGroupableTable noAuditTable = providerTablePanel.getTable();    providerTablePanel.getTable().addMouseListener(new MouseAdapter() {      public void mouseClicked(MouseEvent e) {        if (e.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(e)) {          doDoubleClick(noAuditTable);        }        super.mouseClicked(e);      }    });  }  private void doDoubleClick(JGroupableTable table) {    BeanTableModel model = (BeanTableModel) table.getModel();    int modelindex = table.convertRowIndexToModel(table.getSelectedRow());    triggerField.setValue(model.getBean(modelindex));    self.closeDialog();  }}
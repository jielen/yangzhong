package com.ufgov.zc.client.zc.bulletin;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.Map;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.component.zc.dataexchange.DataExchangeListPanel;import com.ufgov.zc.client.component.zc.dataexchange.model.ABaseData;import com.ufgov.zc.client.component.zc.dataexchange.model.AttachmentFile;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.DataExchangeLog;import com.ufgov.zc.common.zc.model.ZcEbBulletin;import com.ufgov.zc.common.zc.publish.IZcEbBulletinServiceDelegate;public class ZcEbRfqBulletinDataExchangeExecutor extends ABaseData {  private static final long serialVersionUID = 4568366910708725757L;  private transient IZcEbBulletinServiceDelegate zcEbBulletinServiceDelegate = null;  public ZcEbRfqBulletinDataExchangeExecutor() {  }  @Override  public int doExportData(ElementConditionDto dto, RequestMeta meta, String saveRootPath) {    DataExchangeListPanel.setProgressText(this.getDataTypeName() + "正在查询需要导出的记录...");    if (this.getNeedExportDataRedoList() != null && this.getNeedExportDataRedoList().size() > 0) {      dto.setPmAdjustCodeList(this.getNeedExportDataList());      this.setDataList(getZcEbBulletinServiceDelegate().findTransData(dto, meta));    } else {      this.setDataList(new ArrayList<ZcEbBulletin>());    }    DataExchangeListPanel.setProgressText(this.getDataTypeName() + "查询到" + this.getDataList().size()    + "条记录...");    List<DataExchangeLog> exportDataList = new ArrayList<DataExchangeLog>();    this.getExchangeDataLogModel().setExportDataList(exportDataList);    DataExchangeListPanel.setProgressText(this.getDataTypeName() + "主要的数据抓取和导出过程完毕...");    return this.dataList.size();  }  /**   * 填写日志   * @param log   * @param userID   * @param succFail   * @param exceptionMsg   * @param detail   * @param type   * @param bid   */  private void makeDataExchangeLog(DataExchangeLog log, String userID, String succFail, String exceptionMsg,  String detail, String type, ZcEbBulletin bid) {    log.setDataTypeID(this.getDataTypeID());    log.setDataTypeName(this.getDataTypeName());    log.setUserID(userID);    log.setRecStatus(succFail);    log.setDetailInfo(detail);    log.setExceptText(exceptionMsg);    log.setGentType(type);    log.setOptDateTime(new Date());    log.setRecSrcID(bid.getBulletinID());    log.setRecSrcName(bid.getProjName());    log.setRecSrcTab(this.getMainTableName());  }  public int doImportData(ElementConditionDto dto, RequestMeta meta, String rootPath) {    DataExchangeListPanel.setProgressText(this.getDataTypeName() + "开始进行数据导入...");    List<DataExchangeLog> logList = new ArrayList<DataExchangeLog>();    this.getExchangeDataLogModel().setImportDataList(logList);    int succCount = 0;    for (int i = 0; i < this.dataList.size(); i++) {      DataExchangeListPanel.setProgressText(this.getDataTypeName() + "正在导入第" + (i + 1) + "条数据...");      ZcEbBulletin bulletin = ((ZcEbBulletin) this.dataList.get(i));      String info = this.getZcEbBulletinServiceDelegate().importTransData(bulletin, meta);      DataExchangeListPanel.setProgressText(this.getDataTypeName() + "第" + (i + 1) + "条" + info + "...");      succCount++;    }    DataExchangeListPanel.setProgressText(this.getDataTypeName() + "所有数据导入完成...");    return succCount;  }  @Override  public Map<String, Map<String, AttachmentFile>> getAttachmentDataMap() {    return this.attachmentDataMap;  }  private IZcEbBulletinServiceDelegate getZcEbBulletinServiceDelegate() {    if (this.zcEbBulletinServiceDelegate == null) {      zcEbBulletinServiceDelegate = (IZcEbBulletinServiceDelegate) ServiceFactory.create(      IZcEbBulletinServiceDelegate.class, "zcEbBulletinServiceDelegate");    }    return this.zcEbBulletinServiceDelegate;  }}
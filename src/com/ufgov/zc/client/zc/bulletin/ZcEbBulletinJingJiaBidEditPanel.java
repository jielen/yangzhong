package com.ufgov.zc.client.zc.bulletin;import java.io.BufferedWriter;import java.io.File;import java.io.FileOutputStream;import java.io.IOException;import java.io.OutputStream;import java.io.OutputStreamWriter;import java.io.Writer;import java.util.List;import com.ufgov.zc.client.common.ListCursor;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.client.util.StringUtil;import com.ufgov.zc.client.zc.WordFileUtil;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.zc.ZcEbBulletinConstants;import com.ufgov.zc.common.zc.model.ZcEbBulletin;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbXunJia;import com.ufgov.zc.common.zc.model.ZcJingJiaModel;import freemarker.template.Configuration;import freemarker.template.Template;public class ZcEbBulletinJingJiaBidEditPanel extends AbstractZcEbBulletinEditPanel {  public ZcEbBulletinJingJiaBidEditPanel(ZcEbBulletinJingJiaBidEditDialog parent, ListCursor listCursor, String tabStatus,  ZcEbBulletinJingJiaBidListPanel listPanel) {    super(parent, listCursor, tabStatus, listPanel, ZcEbBulletinConstants.COMPO_ZC_EB_BULLETIN_JING_JIA_BID);  }  public String getOpiWay() {    StringBuffer sb = new StringBuffer();    sb.append("'").append(ZcSettingConstants.PITEM_OPIWAY_XJ).append("'");    return sb.toString();  }  protected String getBulletinType() {    // TODO Auto-generated method stub    return ZcEbBulletinConstants.TYPE_BULLETIN_JING_JIA_BID;  }  public String getSqlMapSelectedMold() {    return "ZcEbBulletinWordMold.getZcEbBulletinWordMoldJingJiaBid";  }  protected String getCompId() {    // TODO Auto-generated method stub    return ZcEbBulletinConstants.COMPO_ZC_EB_BULLETIN_JING_JIA_BID;  }  protected String getModelName() {    // TODO Auto-generated method stub    return ZcEbBulletinConstants.TITLE_ZC_EB_BULLETIN_JING_JIA_BID;  }  public void doReplaceBookMarks() {    if (wordPane != null) {      wordPane.closeNotSave();    }    ZcEbBulletin tin = (ZcEbBulletin) listCursor.getCurrentObject();//    ZcJingJiaModel mod = zcEbBulletinServiceDelegate.getZcJingJiaModel(tin.getProjCode(),      wordMold.getFileID().substring(0, wordMold.getFileID().length() - XUNJIA_TEMPLETE_AS_FILE_ID_EXT.length()), requestMeta);    AsFile file = mod.getFile();    for (int i = 0; mod.getItem() != null && i < mod.getItem().size(); i++) {      ZcEbXunJia xj = (ZcEbXunJia) mod.getItem().get(i);      xj.setUnit(AsValDataCache.getName("V_SP_UNIT", xj.getUnit()));      xj.setSpName(StringUtil.freeMarkFillWordChar(xj.getSpName()));      xj.setSpBrand(StringUtil.freeMarkFillWordChar(xj.getSpBrand()));      xj.setSpTech(StringUtil.freeMarkFillWordChar(xj.getSpTech()));    }    String name = "xunjiadan";    file.setFileName(WordFileUtil.getDir() + name + ".doc");    String modname = name + "_mod.doc";    // 创建临时文件    boolean isSucceed = WordFileUtil.createFile(WordFileUtil.getDir(), WordFileUtil.getDir() + modname, this, file.getFileContent());    File f = new File(WordFileUtil.getDir());    Configuration configuration = new Configuration();    configuration.setDefaultEncoding("utf-8");    OutputStream out = null;    Writer writer = null;    try {      configuration.setDirectoryForTemplateLoading(f);      Template template = configuration.getTemplate(modname);      out = new FileOutputStream(file.getFileName());      writer = new BufferedWriter(new OutputStreamWriter(out, "utf-8"));      template.process(mod, writer);      writer.flush();    } catch (Exception e) {      // TODO Auto-generated catch block      e.printStackTrace();    } finally {      try {        if (writer != null) {          writer.close();        }        if (out != null) {          out.close();        }      } catch (IOException e) {      }    }    if (isSucceed) {      wordPane.open(file.getFileName());      fileName = fileName.replaceAll(wordMold.getFileID(), name);      this.loadMoldButton.setEnabled(false);//填充完之后设为不可用      ifRePalceBookMark = true;      ifLoadMold = false;    }  }  public String fetchSn(ZcEbBulletin sheet) {    List<ZcEbPack> pack = zcEbBaseServiceDelegate.queryDataForList("ZcEbProj.getZcEbPackListByProjCode", sheet.getProjCode(), requestMeta);    return pack.get(0).getEntrustCode();  }}
/** * ZcEbBidListPanel.java * com.ufgov.gk.client.zc.zcebbid * Administrator * 2010-5-23 */package com.ufgov.zc.client.zc.projectsupervision;import com.ufgov.smartclient.common.DefaultInvokeHandler;import com.ufgov.smartclient.common.UIUtilities;import com.ufgov.smartclient.component.table.JGroupableTable;import com.ufgov.smartclient.plaf.BlueLookAndFeel;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.ParentWindowAware;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.common.converter.ZcEbProjectSupervisionToTableModelConverter;import com.ufgov.zc.client.component.JFuncToolBar;import com.ufgov.zc.client.component.button.AntiFinishItemButton;import com.ufgov.zc.client.component.button.BlankOutButton;import com.ufgov.zc.client.component.button.CarryDownButton;import com.ufgov.zc.client.component.button.FinishItemButton;import com.ufgov.zc.client.component.button.HelpButton;import com.ufgov.zc.client.component.ui.AbstractDataDisplay;import com.ufgov.zc.client.component.ui.AbstractEditListBill;import com.ufgov.zc.client.component.ui.AbstractSearchConditionArea;import com.ufgov.zc.client.component.ui.MultiDataDisplay;import com.ufgov.zc.client.component.ui.SaveableSearchConditionArea;import com.ufgov.zc.client.component.ui.TableDisplay;import com.ufgov.zc.client.component.ui.conditionitem.AbstractSearchConditionItem;import com.ufgov.zc.client.component.ui.conditionitem.SearchConditionUtil;import com.ufgov.zc.client.util.BalanceUtil;import com.ufgov.zc.common.commonbiz.model.SearchCondition;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcProjectSupervision;import com.ufgov.zc.common.zc.publish.IZcEbProjectSupervisionServiceDelegate;import com.ufgov.zc.common.zc.publish.IZcPProMakeServiceDelegate;import java.awt.Color;import java.awt.Container;import java.awt.Font;import java.awt.Window;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.BorderFactory;import javax.swing.JFrame;import javax.swing.SwingUtilities;import javax.swing.UIManager;import javax.swing.border.TitledBorder;import javax.swing.table.TableModel;import org.apache.log4j.Logger;/** * @author Administrator * */public class ZcEbProjectSupervisionListPanel extends AbstractEditListBill implements ParentWindowAware {  private static final long serialVersionUID = -6559234234771673610L;  private static final Logger logger = Logger.getLogger(ZcEbProjectSupervisionListPanel.class);  private ZcEbProjectSupervisionListPanel self = this;  private Window parentWindow;  private String compoId = "ZC_EB_PROJECT_SUPERVISION";  private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private ElementConditionDto elementConditionDto = new ElementConditionDto();  private HelpButton helpButton = new HelpButton();  private CarryDownButton carryDownButton = new CarryDownButton();  private FinishItemButton finishItemButton = new FinishItemButton();  private AntiFinishItemButton antiFinishItemButton = new AntiFinishItemButton();  private BlankOutButton blankOutButton = new BlankOutButton();  private IZcEbProjectSupervisionServiceDelegate zcEbProjectSupervisionServiceDelegate = (IZcEbProjectSupervisionServiceDelegate) ServiceFactory  .create(IZcEbProjectSupervisionServiceDelegate.class, "zcEbProjectSupervisionServiceDelegate");  private IZcPProMakeServiceDelegate zcPProMakeServiceDelegate = (IZcPProMakeServiceDelegate) ServiceFactory  .create(IZcPProMakeServiceDelegate.class, "zcPProMakeServiceDelegate");  public Window getParentWindow() {    return parentWindow;  }  public void setParentWindow(Window parentWindow) {    this.parentWindow = parentWindow;  }  private final class DataDisplay extends MultiDataDisplay {    private DataDisplay(List<TableDisplay> displays, List<TableDisplay> showingDisplays,    AbstractSearchConditionArea conditionArea, boolean showConditionArea) {      super(displays, showingDisplays, conditionArea, showConditionArea,      ZcSettingConstants.TAB_ID_ZC_EB_PROJECT_SUPERVISION);      setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "项目监管",      TitledBorder.CENTER, TitledBorder.TOP, new Font("宋体", Font.BOLD, 15), Color.BLUE));    }    protected void preprocessShowingTableDisplay(List<TableDisplay> showingTableDisplays) {      for (final TableDisplay d : showingTableDisplays) {        final JGroupableTable table = d.getTable();        table.addMouseListener(new MouseAdapter() {          public void mouseClicked(MouseEvent e) {            if (e.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(e)) {              String tabStatus = d.getStatus();              JGroupableTable table = d.getTable();              MyTableModel model = (MyTableModel) table.getModel();              int row = table.getSelectedRow();              ZcProjectSupervision ps = (ZcProjectSupervision) model.getList().get(              table.convertRowIndexToModel(row));              List<ZcPProMake> viewList = new ArrayList<ZcPProMake>();              ZcPProMake pk = ps.getZcPProMake();              viewList.add(pk);              new ZcEbProjectSupervisionDialog(self, viewList, row, tabStatus);            }          }        });      }    }    @Override    protected void handleTableDisplayActived(AbstractSearchConditionItem[] searchConditionItems,    final TableDisplay tableDisplay) {      elementConditionDto.setWfcompoId(compoId);      elementConditionDto.setExecutor(WorkEnv.getInstance().getCurrUserId());      elementConditionDto.setNd(WorkEnv.getInstance().getTransNd());      elementConditionDto.setStatus(tableDisplay.getStatus());      elementConditionDto.setMonth(BalanceUtil.getMonthIdBySysOption());      for (AbstractSearchConditionItem item : searchConditionItems) {        item.putToElementConditionDto(elementConditionDto);      }      final Container c = tableDisplay.getTable().getParent();      UIUtilities.asyncInvoke(new DefaultInvokeHandler<TableModel>() {        @Override        public void before() {          assert c != null;          installLoadingComponent(c);        }        @Override        public void after() {          assert c != null;          unInstallLoadingComponent(c);          c.add(tableDisplay.getTable());        }        @Override        public TableModel execute() throws Exception {          ZcEbProjectSupervisionToTableModelConverter mc = new ZcEbProjectSupervisionToTableModelConverter();          return mc.convertToTableModel(zcEbProjectSupervisionServiceDelegate.getModelList(          elementConditionDto, requestMeta));        }        @Override        public void success(TableModel model) {          tableDisplay.setTableModel(model);          setButtonStatus();        }      });    }  }  static {    LangTransMeta.init("ZC%");  }  /**   * 构造函数   */  public ZcEbProjectSupervisionListPanel() {    UIUtilities.asyncInvoke(new DefaultInvokeHandler<List<SearchCondition>>() {      @Override      public List<SearchCondition> execute() throws Exception {        List<SearchCondition> needDisplaySearchConditonList = SearchConditionUtil        .getNeedDisplaySearchConditonList(WorkEnv.getInstance().getCurrUserId(),        ZcSettingConstants.TAB_ID_ZC_EB_PROJECT_SUPERVISION);        return needDisplaySearchConditonList;      }      @Override      public void success(List<SearchCondition> needDisplaySearchConditonList) {        List<TableDisplay> showingDisplays = SearchConditionUtil        .getNeedDisplayTableDisplay(needDisplaySearchConditonList);        init(createDataDisplay(showingDisplays), null);//调用父类方法        revalidate();        repaint();      }    });    requestMeta.setCompoId(compoId);  }  private AbstractSearchConditionArea topSearchConditionArea;  private AbstractSearchConditionArea createTopConditionArea() {    Map defaultValueMap = new HashMap();    topSearchConditionArea = new SaveableSearchConditionArea(    ZcSettingConstants.CONDITION_ID_ZC_EB_PROJECT_SUPERVISION, null, true, defaultValueMap, null);    return topSearchConditionArea;  }  private AbstractDataDisplay createDataDisplay(List<TableDisplay> showingDisplays) {    return new DataDisplay(SearchConditionUtil    .getAllTableDisplay(ZcSettingConstants.TAB_ID_ZC_EB_PROJECT_SUPERVISION), showingDisplays,    createTopConditionArea(), true);//true:显示收索条件区 false：不显示收索条件区  }  @Override  protected void addToolBarComponent(JFuncToolBar toolBar) {    toolBar.setModuleCode("ZC");    toolBar.setCompoId(compoId);    toolBar.add(carryDownButton);    toolBar.add(finishItemButton);    toolBar.add(antiFinishItemButton);    toolBar.add(blankOutButton);    toolBar.add(helpButton);    // 初始化按钮的action事件    carryDownButton.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        carryDown();      }    });    finishItemButton.addActionListener(new ActionListener() {      @Override      public void actionPerformed(ActionEvent e) {        finishItem();        zcEbProjectSupervisionServiceDelegate.getModelList(elementConditionDto, requestMeta);      }    });    antiFinishItemButton.addActionListener(new ActionListener() {      @Override      public void actionPerformed(ActionEvent e) {        antiFinishItem();      }    });    blankOutButton.addActionListener(new ActionListener() {      @Override      public void actionPerformed(ActionEvent e) {        blankOut();      }    });  }  private void setButtonStatus() {    setButtonStatusUnvisible();    if (elementConditionDto.getStatus().equals("todo")) {      blankOutButton.setVisible(true);    } else if (elementConditionDto.getStatus().equals("done")) {      finishItemButton.setVisible(true);      carryDownButton.setVisible(true);      blankOutButton.setVisible(true);    } else if (elementConditionDto.getStatus().equals("yjx")) {      antiFinishItemButton.setVisible(true);      blankOutButton.setVisible(true);    }  }  private void setButtonStatusUnvisible() {    carryDownButton.setVisible(false);    finishItemButton.setVisible(false);    antiFinishItemButton.setVisible(false);    blankOutButton.setVisible(false);  }  private void carryDown() {    for (ZcProjectSupervision ps : getCheckedList()) {      zcEbProjectSupervisionServiceDelegate.carryDown(ps, requestMeta);    }    refreshCurrentTabData();  }  private void finishItem() {    for (ZcProjectSupervision ps : getCheckedList()) {      ps.getZcPProMake().setZcMakeStatus("yjx");      zcEbProjectSupervisionServiceDelegate.update(ps, requestMeta);    }    refreshCurrentTabData();  }  private void antiFinishItem() {    for (ZcProjectSupervision ps : getCheckedList()) {      ps.getZcPProMake().setZcMakeStatus("exec");      zcEbProjectSupervisionServiceDelegate.update(ps, requestMeta);    }    refreshCurrentTabData();  }  private void blankOut() {    for (ZcProjectSupervision ps : getCheckedList()) {      ps.getZcPProMake().setZcMakeStatus("cancel");      zcEbProjectSupervisionServiceDelegate.blankOut(ps, requestMeta);    }    refreshCurrentTabData();  }  public void refreshCurrentTabData() {    topSearchConditionArea.doSearch();  }  @SuppressWarnings("unchecked")  public List<ZcProjectSupervision> getCheckedList() {    List<ZcProjectSupervision> beanList = new ArrayList<ZcProjectSupervision>();    JGroupableTable table = topDataDisplay.getActiveTableDisplay().getTable();    MyTableModel model = (MyTableModel) table.getModel();    List<Object> list = model.getList();    Integer[] checkedRows = table.getCheckedRows();    for (Integer checkedRow : checkedRows) {      int accordDataRow = table.convertRowIndexToModel(checkedRow);      ZcProjectSupervision bean = (ZcProjectSupervision) list.get(accordDataRow);      beanList.add(bean);    }    return beanList;  }  public static void main(String[] args) throws Exception {    SwingUtilities.invokeLater(new Runnable() {      public void run() {        try {          UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());          UIManager.setLookAndFeel(new BlueLookAndFeel());        } catch (Exception e) {          e.printStackTrace();        }        //        UIManager.getDefaults().put("SplitPaneUI", BigButtonSplitPaneUI.class.getName());        ZcEbProjectSupervisionListPanel bill = new ZcEbProjectSupervisionListPanel();        JFrame frame = new JFrame("frame");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(800, 600);        frame.setLocationRelativeTo(null);        frame.getContentPane().add(bill);        frame.setVisible(true);      }    });  }  public void refreshCurrentTabData(List dataList) {    ZcEbProjectSupervisionToTableModelConverter mc = new ZcEbProjectSupervisionToTableModelConverter();    topDataDisplay.getActiveTableDisplay().getTable().setModel(mc.convertToTableModel(dataList));  }  private BillElementMeta billElementMeta = BillElementMeta.getBillElementMetaWithoutNd(compoId);  public BillElementMeta getBillElementMeta() {    return billElementMeta;  }  public IZcPProMakeServiceDelegate getZcPProMakeServiceDelegate() {    return zcPProMakeServiceDelegate;  }  public void setZcPProMakeServiceDelegate(IZcPProMakeServiceDelegate zcPProMakeServiceDelegate) {    this.zcPProMakeServiceDelegate = zcPProMakeServiceDelegate;  }  public IZcEbProjectSupervisionServiceDelegate getZcEbProjectSupervisionServiceDelegate() {    return zcEbProjectSupervisionServiceDelegate;  }  public void setZcEbProjectSupervisionServiceDelegate(  IZcEbProjectSupervisionServiceDelegate zcEbProjectSupervisionServiceDelegate) {    this.zcEbProjectSupervisionServiceDelegate = zcEbProjectSupervisionServiceDelegate;  }}
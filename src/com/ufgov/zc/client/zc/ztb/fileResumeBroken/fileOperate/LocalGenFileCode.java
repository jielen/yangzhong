package com.ufgov.zc.client.zc.ztb.fileResumeBroken.fileOperate;import java.io.File;import java.io.FileInputStream;import java.io.IOException;import java.security.MessageDigest;import java.security.NoSuchAlgorithmException;public class LocalGenFileCode {  private String md5Code;  private String fileId;  public String getMd5Code() {    return md5Code;  }  public void setMd5Code(String md5Code) {    this.md5Code = md5Code;  }  public String getFileId() {    return fileId;  }  public void setFileId(String fileId) {    this.fileId = fileId;  }  public void genFileMD5DigestHexStr(String filePath, int fileLen) throws IOException, NoSuchAlgorithmException {    File file = new File(filePath);    if (filePath == null || filePath.equals("")) {      throw new NullPointerException("无效的文件路径");    }    FileInputStream in = new FileInputStream(file);    int b = -1;    int len = 1024 * 1024 * 50;    if (fileLen != 0)      len = fileLen;    if (fileLen == 0) {      len = 1024 * 1024 * 50;    }    System.out.println("local:" + len);    byte[] buffer = new byte[len];    StringBuffer digestStr = new StringBuffer();    while ((b = in.read(buffer)) != -1) {      digestStr.append(getMD5DigestHexStr(buffer));    }    in.close();    setMd5Code(digestStr.toString());  }  public String getMD5DigestHexStr(byte[] content) throws NoSuchAlgorithmException {    MessageDigest md = MessageDigest.getInstance("MD5");    md.update(content);    byte[] digest = md.digest();    return byteToHexStr(digest);  }  public String byteToHexStr(byte[] b) {    String hex = "";    for (int i = 0; i < b.length; i++) {      hex += Integer.toHexString(b[i] & 0xFF);    }    return hex;  }}
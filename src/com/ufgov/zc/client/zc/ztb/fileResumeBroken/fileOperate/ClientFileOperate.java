package com.ufgov.zc.client.zc.ztb.fileResumeBroken.fileOperate;import com.caucho.hessian.client.HessianProxyFactory;import com.caucho.hessian.client.HessianRuntimeException;import com.ufgov.zc.client.zc.ztb.fileResumeBroken.TestFile.IfFileExist;import com.ufgov.zc.common.zc.SendFile;import javax.swing.*;import java.io.File;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.net.MalformedURLException;import java.util.Map;public class ClientFileOperate {  public void fileReader(Map parameterMap, JProgressBar jpb) {    String path = (String) parameterMap.get("filePath");    File file = new File(path);    //建立文件的输入流    FileInputStream fileInStream = null;    try {      fileInStream = new FileInputStream(file);    } catch (FileNotFoundException e) {      // TODO Auto-generated catch block      e.printStackTrace();    }    int len = 0; //每次读取的长度    int bufLen = 22;    byte[] buf = new byte[bufLen]; //读取数据的缓存块    long currPos = 0L; //文件读取的当前位置    byte actId = 1; //操作标识，第一次提交为1，其他提交时为2    String fileId = ""; //文件的唯一标识    byte actRet = 0; //提交处理后结果    //    Map map = new HashMap();    IfFileExist ifFileExist = IfFileExist.getIfFileExist();    //    map = ifFileExist.getFileStatus();    //分块读取文件    try {      int localFileTotalLen = fileInStream.available();      parameterMap.put("localFileTotalLen", String.valueOf(localFileTotalLen));      int transFileSumLen = Integer.parseInt((String) parameterMap.get("serverFileLen"));      int skipLen = 0;      int i = 0;      String sequenceOrder = "";      if (parameterMap.get("serverFileLen").equals("0"))        sequenceOrder = "1";//第一次上传      else {        sequenceOrder = "2";//不是第一次上传        skipLen = Integer.parseInt((String) parameterMap.get("serverFileLen"));        //        if (ifFileExist.getIfReWrite().equals("1")) {        //          transFileSumLen = 0;        //          sequenceOrder = "3";        //          skipLen = 0;        //        }      }      //      Thread thread = new BarThread(jpb, 100);      //      thread.start();      fileInStream.skip(skipLen);      while ((len = fileInStream.read(buf)) != -1) {        //                if (i == 35)        //                  break;        System.out.println("ClientFileOperate 76:" + len);        if (len < bufLen) {          byte[] buff = new byte[len];          for (int j = 0; j < len; j++)            buff[j] = buf[j];          fileUpload(parameterMap, buff, sequenceOrder);        } else {          fileUpload(parameterMap, buf, sequenceOrder);        }        sequenceOrder = "2";        i++;        transFileSumLen += len;        System.out.println("server:" + transFileSumLen);        System.out.println("local:" + localFileTotalLen);        //进度条        //      Thread thread = new BarThread(jpb);        //      thread.start();        int x = (int) (100 * (transFileSumLen / (double) localFileTotalLen));        //        jpb.setValue(x);        //        jpb.setString(String.valueOf(x) + "%");        //            System.out.println("已传输:" + x + "%");        if (transFileSumLen == localFileTotalLen) {          ifFileExist.setFileTransSuccess("1");        }      }      fileInStream.close();    } catch (IOException e) {      // TODO Auto-generated catch block      e.printStackTrace();    }  }  public void fileUpload(Map parameterMap, byte[] buff, String sequenceOrder) {    //hessian服务的url 其中hessian-v1是项目名    String url = "http://10.76.28.111:7002/ZC/sendFile";    //创建HessianProxyFactory实例    HessianProxyFactory factory = new HessianProxyFactory();    //获得Hessian服务的远程引用    try {      SendFile sendFile = (SendFile) factory.create(SendFile.class, url);      //      System.out.println(sendFile.SendFile("first.txt", "kingtoon"));      //      Hello sendFile = (Hello) factory.create(Hello.class, url);      //      System.out.println(sendFile.hello("kingtoon"));      System.out.println("ClientFileOperate 120:" + sendFile.sendFileByStream(parameterMap, buff, sequenceOrder));    } catch (MalformedURLException e) {      System.out.println("指定链接无效！");    } catch (HessianRuntimeException e) {      System.out.println("数据传输中断！");    }  }}
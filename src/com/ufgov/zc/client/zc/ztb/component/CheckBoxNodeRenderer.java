package com.ufgov.zc.client.zc.ztb.component;import com.ufgov.zc.client.zc.ztb.model.SmartTreeNode;import javax.swing.*;import javax.swing.tree.TreeCellRenderer;import java.awt.*;public class CheckBoxNodeRenderer implements TreeCellRenderer {  private JCheckBox leafRenderer = new JCheckBox();  Color selectionBorderColor, selectionForeground, selectionBackground, textForeground, textBackground;  protected JCheckBox getLeafRenderer() {    return leafRenderer;  }  public CheckBoxNodeRenderer() {    Font fontValue;    fontValue = UIManager.getFont("Tree.font");    if (fontValue != null) {      leafRenderer.setFont(fontValue);    }    Boolean booleanValue = (Boolean) UIManager.get("Tree.drawsFocusBorderAroundIcon");    leafRenderer.setFocusPainted((booleanValue != null) && (booleanValue.booleanValue()));    selectionBorderColor = UIManager.getColor("Tree.selectionBorderColor");    selectionForeground = UIManager.getColor("Tree.selectionForeground");    selectionBackground = UIManager.getColor("Tree.selectionBackground");    textForeground = UIManager.getColor("Tree.textForeground");    textBackground = UIManager.getColor("Tree.textBackground");  }  public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {    leafRenderer.setEnabled(tree.isEnabled());    if (selected) {      leafRenderer.setForeground(selectionForeground);      leafRenderer.setBackground(selectionBackground);    } else {      leafRenderer.setForeground(textForeground);      leafRenderer.setBackground(textBackground);    }    if ((value != null) && (value instanceof SmartTreeNode)) {      SmartTreeNode node = (SmartTreeNode) value;      leafRenderer.setText(node.getNodeDisplayName());    }    return leafRenderer;  }}
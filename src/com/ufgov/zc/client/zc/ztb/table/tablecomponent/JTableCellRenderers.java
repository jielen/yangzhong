package com.ufgov.zc.client.zc.ztb.table.tablecomponent;import com.ufgov.zc.client.zc.ztb.table.entity.GridColumn;import com.ufgov.zc.client.zc.ztb.util.GV;import javax.swing.JTable;import javax.swing.*;import javax.swing.table.DefaultTableCellRenderer;import java.awt.*;public class JTableCellRenderers {  public static class RowRenderer extends DefaultTableCellRenderer {    private Color rowColors[];    private GridColumn gridColumn;    public RowRenderer() {      rowColors = new Color[1];      rowColors[0] = UIManager.getColor("Table.background");    }    public RowRenderer(Color colors[]) {      super();      setRowColors(colors);    }    public RowRenderer(GridColumn gridColumn, Color colors[]) {      super();      setRowColors(colors);      setGridColumn(gridColumn);    }    public void setRowColors(Color colors[]) {      rowColors = colors;    }    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {      super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);      setText(value != null ? value.toString() : "");      if (row % 2 == 0) {        setBackground(new Color(255, 228, 255));      } else {        setBackground(new Color(255, 255, 255));      }      if (isSelected) {        setBackground(new Color(0, 250, 154));      }      if (getGridColumn() != null) {        if (GridColumn.ALIGN_RIGHT.equalsIgnoreCase(getGridColumn().getAlign())) {          setHorizontalAlignment(SwingConstants.RIGHT);        } else if (GridColumn.ALIGN_CENTER.equalsIgnoreCase(getGridColumn().getAlign())) {          setHorizontalAlignment(SwingConstants.CENTER);        } else {          setHorizontalAlignment(SwingConstants.LEFT);        }      }      if (hasFocus) {        setBackground(Color.GRAY);        table.editCellAt(row, column);      }      if (gridColumn != null && gridColumn.isReadOnly() && !gridColumn.isWatchOnly()) {        if (isSelected) {          if (hasFocus) {            setForeground(Color.WHITE);          } else {            setForeground(Color.LIGHT_GRAY);          }        } else {          setForeground(Color.GRAY);        }      }      /**       * 设置行次列背景色       */      if (gridColumn.isTableRowNum()) {        //setBackground(Color.CYAN);        setBackground(GV.HANGCI_COLUMN_BACKGROUND_COLOR);        setForeground(Color.BLACK);      }      return this;    }    public boolean isOpaque() {      return true;    }    public void setGridColumn(GridColumn gridColumn) {      this.gridColumn = gridColumn;    }    public GridColumn getGridColumn() {      return gridColumn;    }  }}
package com.ufgov.zc.client.zc.ztb.table.panel;import com.ufgov.zc.client.zc.ztb.table.demo.Demo;import com.ufgov.zc.client.zc.ztb.table.service.TableService;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTableModel;import com.ufgov.zc.client.zc.ztb.util.GV;import javax.swing.*;import java.awt.*;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.List;import java.util.Map;public class ZBKbylbTablePanel extends ZBTableSettingPanel {  private static final long serialVersionUID = -5586392244549251069L;  public ZBKbylbTablePanel() {    this.xmlTable = null;    initComponents();  }  public ZBKbylbTablePanel(boolean isReadOnly) {    super.isReadOnly = isReadOnly;    this.xmlTable = null;    initComponents();  }  public ZBKbylbTablePanel(String filepath) {    this.xmlTable = new TableService().createXmlTable(filepath);    initComponents();  }  public ZBKbylbTablePanel(String filepath, boolean isReadOnly) {    super.isReadOnly = isReadOnly;    this.xmlTable = new TableService().createXmlTable(filepath);    initComponents();  }  protected void initComponents() {    setLayout(new BorderLayout());    splitPane.setDividerLocation(500);    add(splitPane, BorderLayout.CENTER);    JPanel topPanel = new JPanel();    topPanel.setLayout(new BorderLayout());    JToolBar toolBar = createToolBar();    JTable table = createTable();    topPanel.add(toolBar, BorderLayout.NORTH);    topSplitPane.setDividerLocation(718);    topSplitPane.setLeftComponent(new JScrollPane(table));    JScrollPane scrollPane = new JScrollPane(createRemarkPanel());    scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);    topSplitPane.setRightComponent(scrollPane);    topPanel.add(topSplitPane, BorderLayout.CENTER);    topPanel.add(new JLabel(GV.KBYLB_OPERATOR_DESC), BorderLayout.SOUTH);    splitPane.setTopComponent(topPanel);  }  public List<Map<String, String>> buildData() {    List<Map<String, String>> dataList = new ArrayList<Map<String, String>>();    dataList.add(buildRow("TABLE.ROWNUM", "", "行次", "50", "C", "NUM", "", "", "Y", ""));    dataList.add(buildRow("COLUMN_ID", "", "列名", "100", "L", "TEXT", "", "", "", ""));    dataList.add(buildRow("WIDTH", "", "列宽", "80", "C", "NUM", "", "", "", ""));    dataList.add(buildRow("ALIGN", "", "水平对齐", "80", "C", "TEXT", "", "", "", "VS_ALIGN"));    dataList.add(buildRow("DATA_TYPE", "", "数据类型", "80", "C", "TEXT", "", "", "", "VS_DATA_TYPE"));    dataList.add(buildRow("DEC_LEN", "", "小数位", "80", "C", "NUM", "", "", "", ""));    dataList.add(buildRow("IS_THOUSANDS_SEPARATOR", "", "显示千分位", "80", "C", "TEXT", "", "", "", "VS_Y/S"));    dataList.add(buildRow("IS_FORCE_READONLY", "", "只读", "80", "C", "TEXT", "", "", "", "VS_Y/S"));    dataList.add(buildRow("COLUMN_TYPE", "", "列类型", "90", "C", "TEXT", "", "", "", "VS_COLUMN_TYPE"));    return dataList;  }  public static void main(String s[]) {    Demo.setLookAndFeel();    JFrame frame = new JFrame();    frame.setIconImage(frame.getToolkit().getImage(GV.getImageUrl("windowicon.jpg")));    ZBTableSettingPanel panel = new ZBTableSettingPanel();    JTableModel tableModel = (JTableModel) panel.settingTable.getModel();    tableModel.removeAll();    List<Map<String, String>> rowset = panel.new TableDataTemplate3().buildData();    tableModel.add(rowset);    frame.getContentPane().setLayout(new BorderLayout());    frame.getContentPane().add(new JScrollPane(panel), BorderLayout.CENTER);    frame.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });    frame.pack();    frame.setSize(900, 600);    frame.setVisible(true);  }}
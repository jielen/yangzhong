package com.ufgov.zc.client.zc.ztb.table.demo;import com.thoughtworks.xstream.XStream;import com.thoughtworks.xstream.io.xml.DomDriver;import com.ufgov.zc.client.zc.ztb.table.entity.table.XmlTable;import com.ufgov.zc.client.zc.ztb.table.entity.table.XmlTableCell;import com.ufgov.zc.client.zc.ztb.table.entity.table.XmlTableColumn;import com.ufgov.zc.client.zc.ztb.table.entity.table.XmlTableRow;import java.io.*;public class TestParseXml {  public static void main(String[] args) throws IOException {    XStream xstream = new XStream(new DomDriver());    xstream.alias("XmlTable", XmlTable.class);    xstream.alias("XmlTableColumn", XmlTableColumn.class);    xstream.alias("XmlTableRow", XmlTableRow.class);    xstream.alias("XmlTableCell", XmlTableCell.class);    FileInputStream fis = new FileInputStream("c:/A_000001.xml");    XmlTable table = (XmlTable) xstream.fromXML(new InputStreamReader(fis, "UTF-8"), new XmlTable());    System.out.println(table.getColumns().size());    saveAs(table);  }  public static void saveAs(XmlTable table) {    XStream xstream = new XStream(new DomDriver());    xstream.alias("XmlTable", XmlTable.class);    xstream.alias("XmlTableColumn", XmlTableColumn.class);    xstream.alias("XmlTableRow", XmlTableRow.class);    xstream.alias("XmlTableCell", XmlTableCell.class);    String xmls = xstream.toXML(table);    try {      createFile("c:/newtest.xml", "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + xmls, "UTF-8");    } catch (Exception ee) {      ee.printStackTrace();    }  }  public static void createFile(String file, String content, String encodType) throws IOException {    FileOutputStream writerStream = new FileOutputStream(file);    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(writerStream, encodType));    writer.write(content);    writer.close();  }}
/** * @(#) project: TableProject * @(#) file: JTableNumberFieldListener.java * * Copyright 2010 UFGOV, Inc. All rights reserved. * UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * */package com.ufgov.zc.client.zc.ztb.table.tablecomponent.numberfield;import com.ufgov.zc.client.zc.ztb.table.common.PubFunc;import com.ufgov.zc.client.zc.ztb.table.entity.GridColumn;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTableColumn;import javax.swing.*;import javax.swing.event.DocumentEvent;import javax.swing.event.DocumentListener;import javax.swing.text.BadLocationException;import javax.swing.text.Document;import java.awt.event.FocusEvent;import java.awt.event.FocusListener;/** * @ClassName: JTableNumberFieldListener * @Description: TODO(这里用一句话描述这个类的作用) * @date: 2010-4-23 上午11:17:50 * @version: V1.0 * @since: 1.0 * @author: Administrator * @modify: */public class JTableNumberFieldListener implements FocusListener, DocumentListener {  private JTextField textField;  private JTableColumn tableColumn;  private GridColumn gridColumn;  private String oldvalue = null;  public JTableNumberFieldListener(JTableColumn tableColumn) {    this.tableColumn = tableColumn;    this.gridColumn = tableColumn.getGridColumn();  }  public JTableNumberFieldListener(JTextField textField, GridColumn gridColumn) {    this.setTextField(textField);    this.gridColumn = gridColumn;  }  public void changedUpdate(DocumentEvent e) {    change(e);  }  public void insertUpdate(DocumentEvent e) {    change(e);  }  public void removeUpdate(DocumentEvent e) {  }  private void change(DocumentEvent e) {    Document document = e.getDocument();    String value;    try {      value = document.getText(0, document.getLength());    } catch (BadLocationException e1) {      e1.printStackTrace();      throw new RuntimeException(e1);    }    if (gridColumn.isInteger()) {      checkInteger(document, value);    } else if (gridColumn.isFloat()) {      checkFloat(document, value);    }  }  public void checkInteger(final Document document, String value) {    boolean isMatch = PubFunc.isInteger(value);    if (!isMatch) {      if (getOldvalue() == null) {        setNewValue(document, "");      } else {        setNewValue(document, getOldvalue());      }    } else {      if (value.startsWith("0") && value.trim().length() > 1 && !value.startsWith("0.")) {        setNewValue(document, value.substring(1));        setOldvalue(value.substring(1));      } else {        setOldvalue(value);      }    }  }  public void checkFloat(final Document document, String value) {    boolean isMatch = PubFunc.isDecimal(value);    if (!isMatch) {      if (getOldvalue() == null) {        setNewValue(document, "");      } else {        setNewValue(document, getOldvalue());      }    } else {      if (value.startsWith("0") && value.trim().length() > 1 && !value.startsWith("0.")) {        setNewValue(document, value.substring(1));        setOldvalue(value.substring(1));      } else {        setOldvalue(value);        setOtherValue(document, value);      }    }  }  protected void setNewValue(final Document document, final String value) {    SwingUtilities.invokeLater(new Runnable() {      public void run() {        try {          document.remove(0, document.getLength());          document.insertString(0, value, null);        } catch (BadLocationException e) {          e.printStackTrace();          throw new RuntimeException(e);        }      }    });  }  protected void setOtherValue(final Document document, final String value) {  }  public void setOldvalue(String oldvalue) {    this.oldvalue = oldvalue;  }  public String getOldvalue() {    return oldvalue;  }  public void setTextField(JTextField textField) {    this.textField = textField;  }  public JTextField getTextField() {    return textField;  }  public void focusGained(FocusEvent e) {    // TODO Auto-generated method stub  }  public void focusLost(FocusEvent e) {    // TODO Auto-generated method stub  }}
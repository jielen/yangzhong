/** * @(#) project: TableProject * @(#) file: Demo.java * * Copyright 2010 UFGOV, Inc. All rights reserved. * UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * */package com.ufgov.zc.client.zc.ztb.table.demo;import javax.swing.*;/** * @ClassName: Demo * @Description: TODO(这里用一句话描述这个类的作用) * @date: 2010-4-23 上午11:39:29 * @version: V1.0 * @since: 1.0 * @author: Administrator * @modify: */public class Demo {  /**   * @Fields COM_SUN_JAVA_SWING_PLAF_WINDOWS_WINDOWS_CLASSIC_LOOK_AND_FEEL : TODO(用一句话描述这个变量表示什么)   */  public static final String COM_SUN_JAVA_SWING_PLAF_WINDOWS_WINDOWS_CLASSIC_LOOK_AND_FEEL = "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel";  /**   * @Fields COM_SUN_JAVA_SWING_PLAF_WINDOWS_WINDOWS_LOOK_AND_FEEL : TODO(用一句话描述这个变量表示什么)   */  public static final String COM_SUN_JAVA_SWING_PLAF_WINDOWS_WINDOWS_LOOK_AND_FEEL = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";  /**   * @Fields COM_SUN_JAVA_SWING_PLAF_MOTIF_MOTIF_LOOK_AND_FEEL : TODO(用一句话描述这个变量表示什么)   */  public static final String COM_SUN_JAVA_SWING_PLAF_MOTIF_MOTIF_LOOK_AND_FEEL = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";  /**   * @Fields JAVAX_SWING_PLAF_METAL_METAL_LOOK_AND_FEEL : TODO(用一句话描述这个变量表示什么)   */  public static final String JAVAX_SWING_PLAF_METAL_METAL_LOOK_AND_FEEL = "javax.swing.plaf.metal.MetalLookAndFeel";  /**   * @Fields COM_SUN_JAVA_SWING_PLAF_NIMBUS_NIMBUS_LOOK_AND_FEEL : TODO(用一句话描述这个变量表示什么)   */  public static final String COM_SUN_JAVA_SWING_PLAF_NIMBUS_NIMBUS_LOOK_AND_FEEL = "com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel";  public static void setLookAndFeel() {    setLookAndFeel(COM_SUN_JAVA_SWING_PLAF_WINDOWS_WINDOWS_CLASSIC_LOOK_AND_FEEL);  }  public static void setLookAndFeel(String lookAndFeel) {    try {      UIManager.setLookAndFeel(lookAndFeel);    } catch (ClassNotFoundException e) {      e.printStackTrace();      throw new RuntimeException(e);    } catch (InstantiationException e) {      e.printStackTrace();      throw new RuntimeException(e);    } catch (IllegalAccessException e) {      e.printStackTrace();      throw new RuntimeException(e);    } catch (UnsupportedLookAndFeelException e) {      e.printStackTrace();      throw new RuntimeException(e);    }  }}
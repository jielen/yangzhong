package com.ufgov.zc.client.zc.ztb.table.tablecomponent.combobox;import com.ufgov.zc.client.zc.ztb.table.entity.GridColumn;import com.ufgov.zc.client.zc.ztb.table.entity.Valset;import javax.swing.*;import javax.swing.text.JTextComponent;import java.awt.*;import java.awt.event.ItemEvent;import java.awt.event.ItemListener;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.util.Vector;public class JTableComboBoxEditor extends DefaultCellEditor {  public JTableComboBoxEditor(final JComboBox comboBox) {    super(comboBox);    final JTextComponent editor = (JTextComponent) comboBox.getEditor().getEditorComponent();    editor.addKeyListener(new KeyAdapter() {      public void keyReleased(KeyEvent e) {        char ch = e.getKeyChar();        if (ch != KeyEvent.VK_BACK_SPACE) {          if (ch == KeyEvent.CHAR_UNDEFINED || Character.isISOControl(ch) || ch == KeyEvent.VK_DELETE) {            return;          }        }        JComboBox comboBox = ((JComboBox) editorComponent);        if (comboBox.isDisplayable()) {          String text = editor.getText();          JTableComboBoxModel model = (JTableComboBoxModel) comboBox.getModel();          Vector<Valset> items = model.getMatchItems(text);          Vector<Valset> vector = model.getValSetList();          JTable table = model.getTable();          GridColumn column = model.getGridColumn();          comboBox.setModel(new JTableComboBoxModel(table, column, vector, items));          editor.setText(text);          editor.setCaretPosition(text.length());          comboBox.setPopupVisible(true);        }      }    });    comboBox.addItemListener(new ItemListener() {      public void itemStateChanged(ItemEvent event) {        if (event.getStateChange() == ItemEvent.SELECTED) {          int caretPosition = editor.getCaretPosition();          if (caretPosition != -1) {            try {              editor.moveCaretPosition(caretPosition);            } catch (IllegalArgumentException ex) {              ex.printStackTrace();              throw new RuntimeException(ex);            }          }        }      }    });  }  public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {    JComboBox comboBox = (JComboBox) editorComponent;    if (comboBox.isEditable()) {      recoverModel();    }    super.getTableCellEditorComponent(table, value, isSelected, row, column);    ((JTableComboBoxModel) ((JComboBox) editorComponent).getModel()).setDefaultItem((com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTable) table,      value, isSelected, row, column);    return editorComponent;  }  private void recoverModel() {    JComboBox comboBox = (JComboBox) editorComponent;    JTableComboBoxModel model = (JTableComboBoxModel) comboBox.getModel();    JTable table = model.getTable();    Vector<Valset> items = model.getMatchItems(null);    Vector<Valset> vector = model.getValSetList();    GridColumn gridColumn = model.getGridColumn();    comboBox.setModel(new JTableComboBoxModel(table, gridColumn, vector, items));  }}
package com.ufgov.zc.client.zc.ztb.table.demo;import com.ufgov.zc.client.zc.ztb.table.builder.GridColumnBuilder;import com.ufgov.zc.client.zc.ztb.table.entity.GridColumn;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTableColumnModel;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTableModel;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.JTableRowSorter;import com.ufgov.zc.client.zc.ztb.table.tablecomponent.gtable.GTable;import com.ufgov.zc.client.zc.ztb.util.GV;import javax.swing.*;import java.awt.*;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * 表头分组的表格，列不能拖动，比普通表格只多了列分组信息 * * @date: 2010-4-23 下午02:32:34 * @version: V1.0 * @since: 1.0 * @author: Administrator * @modify: */public class Table2 extends Demo {  public static void main(String s[]) {    setLookAndFeel();    JFrame frame = new JFrame();    frame.setIconImage(frame.getToolkit().getImage(GV.getImageUrl("windowicon.jpg")));    JTable table = new Table2().createTable();    JScrollPane scroll = new JScrollPane(table);    frame.getContentPane().setLayout(new BorderLayout());    frame.getContentPane().add(scroll, BorderLayout.CENTER);    frame.addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        System.exit(0);      }    });    frame.pack();    frame.setSize(900, 600);    frame.setVisible(true);  }  public JTable createTable() {    GTable table = new GTable();    List<Map<String, String>> columnDataList = new GridColumnData().buildData();    List<GridColumn> gridColumns = GridColumnBuilder.buildGridColumn(columnDataList);    JTableColumnModel tableColumnModel = new JTableColumnModel(table, gridColumns);    JTableModel tableModel = new JTableModel(tableColumnModel, table);    table.setModel(tableModel);    table.setColumnModel(tableColumnModel);    JTableRowSorter<JTableModel> sorter = new JTableRowSorter<JTableModel>(tableModel);    sorter.setComparators(tableColumnModel);    table.setRowSorter(sorter);    List<Map<String, String>> rowset = new TableDataTemplate().buildData();    tableModel.add(rowset);    table.buildGroupTableHeader(new GridColumnGroupData().buildData());//设置多层表头    return table;  }  /**   * 表头列数据,GROUP_ID是列属于哪一组的标识   *   * @date: 2010-4-23 下午02:33:51   * @version: V1.0   * @since: 1.0   * @author: Administrator   * @modify:   */  class GridColumnData {    public List<Map<String, String>> buildData() {      List<Map<String, String>> dataList = new ArrayList<Map<String, String>>();      dataList.add(buildRow("ITEM", "", "项目", "300"));      dataList.add(buildRow("ROW_NO", "", "行次", "60"));      dataList.add(buildRow("XZ_QTY", "XZ", "数量", "120"));      dataList.add(buildRow("XZ_COST", "XZ", "价值", "120"));      dataList.add(buildRow("SY_QTY", "SY", "数量", "120"));      dataList.add(buildRow("SY_COST", "SY", "价值", "120"));      return dataList;    }    private Map<String, String> buildRow(String columnId, String groupId, String caption, String width) {      Map<String, String> row = new HashMap<String, String>();      row.put("COLUMN_ID", columnId);      row.put("GROUP_ID", groupId);      row.put("CAPTION", caption);      row.put("WIDTH", width);      return row;    }  }  /**   * 组数据，可以分多层   *   * @date: 2010-4-23 下午02:34:06   * @version: V1.0   * @since: 1.0   * @author: Administrator   * @modify:   */  class GridColumnGroupData {    public List<Map<String, String>> buildData() {      List<Map<String, String>> dataList = new ArrayList<Map<String, String>>();      dataList.add(buildRow("XZ", "行政单位", ""));      dataList.add(buildRow("SY", "事业单位", ""));      return dataList;    }    private Map<String, String> buildRow(String groupId, String groupName, String parentGroupId) {      Map<String, String> row = new HashMap<String, String>();      row.put("GROUP_ID", groupId);      row.put("GROUP_NAME", groupName);      row.put("PARENT_GROUP_ID", parentGroupId);      return row;    }  }  /**   * 表格行数据   *   * @date: 2010-4-23 下午02:34:39   * @version: V1.0   * @since: 1.0   * @author: Administrator   * @modify:   */  class TableDataTemplate {    public List<Map<String, String>> buildData() {      List<Map<String, String>> dataList = new ArrayList<Map<String, String>>();      dataList.add(buildRow("栏次", "", "1", "2", "3", "4"));      dataList.add(buildRow("资产总额", "1", "--", "", "", ""));      dataList.add(buildRow("一、流动资产", "2", "--", "", "", ""));      dataList.add(buildRow("二、固定资产", "3", "--", "", "", ""));      dataList.add(buildRow("   （一）土地（平方米）", "4", "", "", "", ""));      dataList.add(buildRow("   （二）房屋构筑物（平方米）", "5", "", "", "", ""));      dataList.add(buildRow("   （三）汽车（台、辆）", "6", "", "", "", ""));      return dataList;    }    private Map<String, String> buildRow(String item, String row_no, String xz_qty, String xz_cost, String sy_qty, String sy_cost) {      Map<String, String> row = new HashMap<String, String>();      row.put("ITEM", item);      row.put("ROW_NO", row_no);      row.put("XZ_QTY", xz_qty);      row.put("XZ_COST", xz_cost);      row.put("SY_QTY", sy_qty);      row.put("SY_COST", sy_cost);      return row;    }  }}
package com.ufgov.zc.client.zc.ztb.dao;import com.ufgov.zc.client.zc.ztb.model.SmartTreeNode;import com.ufgov.zc.client.zc.ztb.util.GV;import java.io.*;public class FileImportDao extends ZTbFileDao {  private static FileImportDao importTbFileDao = new FileImportDao();  private FileImportDao() {    super();  }  private synchronized void createFile(String fileName, String content, String encodType) throws Exception {    String dir = fileName.substring(0, fileName.lastIndexOf(File.separator));    File file = new File(dir);    if (!file.exists()) {      boolean flag = file.mkdirs();      if (!flag) {        throw new Exception(GV.getSimpleMsg("directoryCreateErr"));      }    }    FileOutputStream writerStream = new FileOutputStream(fileName);    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(writerStream, encodType));    writer.write(content);    writer.close();  }  /**   * 将treeNode转成保持基本数据结构的xml   *   * @param rootNode   * @throws Exception   */  public synchronized void createProjectsXMLFile(SmartTreeNode rootNode) throws Exception {    String xmls = xstreamW.toXML(rootNode);    String configPath = GV.getProjectConfigFullPath();    createFile(configPath, "<?xml version=\"1.0\" encoding=\"" + GV.XML_CHAR_CODE + "\"?>\n" + xmls, GV.XML_CHAR_CODE);  }  public synchronized Object readProject(InputStream inputStream) {    InputStreamReader inputStreamReader = null;    try {      inputStreamReader = new InputStreamReader(inputStream, GV.XML_CHAR_CODE);    } catch (UnsupportedEncodingException e) {      e.printStackTrace();    }    return xstreamR.fromXML(inputStreamReader);  }  public static FileImportDao getInstance() {    return importTbFileDao;  }}
package com.ufgov.zc.client.zc.ztb.service;import com.ufgov.zc.client.zc.ztb.component.MainPanel;import com.ufgov.zc.client.zc.ztb.component.SingleSeletionTree;import com.ufgov.zc.client.zc.ztb.dao.LocalProjectDAO;import com.ufgov.zc.client.zc.ztb.model.BusinessProject;import com.ufgov.zc.client.zc.ztb.model.BusinessProjects;import com.ufgov.zc.client.zc.ztb.model.SmartTreeNode;import com.ufgov.zc.client.zc.ztb.util.GV;import java.util.ArrayList;public class ReadTbFileService {  private LocalProjectDAO projectDAO = LocalProjectDAO.getInstance();  public ReadTbFileService() {  }  public ArrayList<BusinessProject> getProjectList() throws Exception {    BusinessProjects businessProjects = null;    if (businessProjects == null || businessProjects.getProList() == null) {      return null;    } else {      return businessProjects.getProList();    }  }  public SingleSeletionTree createZTBSTreePanel(String fileName, MainPanel mainPanel) {    return new SingleSeletionTree(createZTBSTreeRoot(fileName), mainPanel);  }  public SmartTreeNode createZTBSTreeRoot(String fileName) {    return projectDAO.readXmlToObject(fileName);  }  public SmartTreeNode createProjectNode(SmartTreeNode rootNode, ArrayList<BusinessProject> businessProjects, boolean needTbs) {    for (BusinessProject businessProject : businessProjects) {      SmartTreeNode proNode = createProjectNode(businessProject, needTbs);      rootNode.add(proNode);    }    return rootNode;  }  /**   * @param businessProject 项目对象。   * @param needTbs         是否需要显示投标函。对于评标不需要显示投标函。   * @return JTreeNode 项目对象对应树节点对象。   * @Description: 根据项目返回对应的树节点。   * @since 1.0   */  public SmartTreeNode createProjectNode(BusinessProject businessProject, boolean needTbs) {    SmartTreeNode proNode = new SmartTreeNode();    proNode.setNodeCode(businessProject.getNo());    proNode.setNodeName(businessProject.getName());    proNode.setNodeType(GV.NODE_TYPE_PROJECT);    proNode.setNodeSource(GV.NODE_SOURCE_FROM_PROJ);    proNode.setUserObject(businessProject);    return proNode;  }}
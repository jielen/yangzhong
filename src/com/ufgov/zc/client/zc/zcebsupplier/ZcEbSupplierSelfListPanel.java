/**供应商自己维护自己的页面list  g * ZcEbSupplier.java * com.ufgov.gk.client.zc.zcebsupplier * Administrator * 2010-4-29 */package com.ufgov.zc.client.zc.zcebsupplier;import com.ufgov.smartclient.common.DefaultInvokeHandler;import com.ufgov.smartclient.common.UIUtilities;import com.ufgov.smartclient.component.table.JGroupableTable;import com.ufgov.smartclient.plaf.BlueLookAndFeel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.common.converter.zc.ZcEbSupplierToTableModelConverter;import com.ufgov.zc.client.component.ui.*;import com.ufgov.zc.client.component.ui.conditionitem.AbstractSearchConditionItem;import com.ufgov.zc.client.component.ui.conditionitem.SearchConditionUtil;import com.ufgov.zc.client.util.BalanceUtil;import com.ufgov.zc.client.util.ListUtil;import com.ufgov.zc.common.commonbiz.model.SearchCondition;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.util.ObjectUtil;import javax.swing.*;import javax.swing.border.TitledBorder;import javax.swing.table.TableModel;import java.awt.*;import java.awt.event.MouseAdapter;import java.awt.event.MouseEvent;import java.util.HashMap;import java.util.List;import java.util.Map;/** * 供应商维护 * * @author Administrator */public class ZcEbSupplierSelfListPanel extends ZcEbSupplierListPanel {    private ZcEbSupplierSelfListPanel self = this;    private String compoId = "ZC_EB_SUPPLIER";    private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    private ElementConditionDto elementConditionDto = new ElementConditionDto();    private final class SelfDataDisplay extends MultiDataDisplay {        private SelfDataDisplay(List<TableDisplay> displays, List<TableDisplay> showingDisplays, AbstractSearchConditionArea conditionArea,                            boolean showConditionArea) {            super(displays, showingDisplays, conditionArea, showConditionArea, ZcSettingConstants.TAB_ID_ZC_EB_SUPPLIER);            setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "供应商管理", TitledBorder.CENTER, TitledBorder.TOP, new Font("宋体",                    Font.BOLD, 15), Color.BLUE));        }        protected void preprocessShowingTableDisplay(List<TableDisplay> showingTableDisplays) {            for (final TableDisplay d : showingTableDisplays) {                final JGroupableTable table = d.getTable();                table.addMouseListener(new MouseAdapter() {                    public void mouseClicked(MouseEvent e) {                        if (e.getClickCount() == 2 && SwingUtilities.isLeftMouseButton(e)) {                            String tabStatus = d.getStatus();                            JGroupableTable table = d.getTable();                            MyTableModel model = (MyTableModel) table.getModel();                            int row = table.getSelectedRow();                            List viewList = (List) ObjectUtil.deepCopy(ListUtil.convertToTableViewOrderList(model.getList(), table));                            new ZcEbSupplierSelfDialog(self, viewList, row, tabStatus);                        }                    }                });            }        }        @Override        protected void handleTableDisplayActived(AbstractSearchConditionItem[] searchConditionItems, final TableDisplay tableDisplay) {            elementConditionDto.setWfcompoId(compoId);            elementConditionDto.setExecutor(WorkEnv.getInstance().getCurrUserId());            elementConditionDto.setNd(WorkEnv.getInstance().getTransNd());            elementConditionDto.setStatus(tableDisplay.getStatus());            elementConditionDto.setMonth(BalanceUtil.getMonthIdBySysOption());            for (AbstractSearchConditionItem item : searchConditionItems) {                item.putToElementConditionDto(elementConditionDto);            }            final Container c = tableDisplay.getTable().getParent();            UIUtilities.asyncInvoke(new DefaultInvokeHandler<TableModel>() {                @Override                public void before() {                    assert c != null;                    installLoadingComponent(c);                }                @Override                public void after() {                    assert c != null;                    unInstallLoadingComponent(c);                    c.add(tableDisplay.getTable());                }                @Override                public TableModel execute() throws Exception {                    requestMeta.setFuncId("fwatch");                    return ZcEbSupplierToTableModelConverter.convertToTableModel(self.zcEbSupplierServiceDelegate.getZcEbSupplierBySupplierID(elementConditionDto,                            requestMeta));                }                @Override                public void success(TableModel model) {                    tableDisplay.setTableModel(model);                }            });        }    }    /**     * 构造函数     */    public ZcEbSupplierSelfListPanel() {        super("ZC_EB_SUPPLIER");        UIUtilities.asyncInvoke(new DefaultInvokeHandler<List<SearchCondition>>() {            @Override            public List<SearchCondition> execute() throws Exception {                List<SearchCondition> needDisplaySearchConditonList = SearchConditionUtil.getNeedDisplaySearchConditonList(WorkEnv.getInstance()                        .getCurrUserId(), ZcSettingConstants.TAB_ID_ZC_EB_SUPPLIER);                return needDisplaySearchConditonList;            }            @Override            public void success(List<SearchCondition> needDisplaySearchConditonList) {                List<TableDisplay> showingDisplays = SearchConditionUtil.getNeedDisplayTableDisplay(needDisplaySearchConditonList);                init(createDataDisplay(showingDisplays), null);//调用父类方法                revalidate();                repaint();            }        });        requestMeta.setCompoId(compoId);    }    private AbstractSearchConditionArea topSearchConditionArea;    private AbstractDataDisplay createDataDisplay(List<TableDisplay> showingDisplays) {        return new SelfDataDisplay(SearchConditionUtil.getAllTableDisplay(ZcSettingConstants.TAB_ID_ZC_EB_SUPPLIER), showingDisplays,                createTopConditionArea(), false);//true:显示收索条件区 false：不显示收索条件区    }    public static void main(String[] args) throws Exception {        SwingUtilities.invokeLater(new Runnable() {            public void run() {                try {                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());                    UIManager.setLookAndFeel(new BlueLookAndFeel());                } catch (Exception e) {                    e.printStackTrace();                }                //        UIManager.getDefaults().put("SplitPaneUI", BigButtonSplitPaneUI.class.getName());                ZcEbSupplierSelfListPanel bill = new ZcEbSupplierSelfListPanel();                JFrame frame = new JFrame("frame");                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);                frame.setSize(800, 600);                frame.setLocationRelativeTo(null);                frame.getContentPane().add(bill);                frame.setVisible(true);            }        });    }}
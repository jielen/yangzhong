/**   * @(#) project: GK* @(#) file: EvalTBWJPanel.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.zc.eval;import java.awt.BorderLayout;import java.awt.Dialog;import java.awt.Window;import java.io.File;import javax.swing.JPanel;import com.ufgov.smartclient.common.JBaseDialog;import com.ufgov.zc.client.common.ParentWindowAware;import com.ufgov.zc.client.common.UIConstants;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.zc.model.EvalExpert;import com.ufgov.zc.common.zc.model.EvalPackProvider;import com.ufgov.zc.common.zc.model.ZcEbEvalPack;/*** @ClassName: EvalTBWJPanel* @Description: 投标文件显示面板。* @date: 2010-5-6 下午08:22:15* @version: V1.0 * @since: 1.0* @author: tianly* @modify: */public class ZcEbEvalTBFilePanel extends ZcEbEvalZTBFileBasePanel implements ParentWindowAware {  private static final long serialVersionUID = -201805696257611314L;  private ZcEbEvalTBFilePanel self = this;  private EvalPackProvider selectedProvider;  protected RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private String evalExpertCode;  private Window parentWindow;  private String fileDownLoadpath;  public Window getParentWindow() {    return parentWindow;  }  public void setParentWindow(Window parentWindow) {    this.parentWindow = parentWindow;  }  public ZcEbEvalTBFilePanel(ZcEbEvalPack evalPack, EvalExpert evalExpert, ZcEbEvalPortalPanel portalPanel) {    this.evalPack = evalPack;    this.evalExpert = evalExpert;    this.selectedProvider = portalPanel.getSelectedProvider();    this.portalPanel = portalPanel;    init();  }  public void init() {    //设置下载路径    fileDownLoadpath = tbDocService.getDownloadFilePath() + File.separator + evalPack.getProjCode() + File.separator + evalPack.getPackCode()    + File.separator + "TB" + File.separator;    setFilePath();    downloadFileIfNeed();    //    initPanel();  }  public EvalPackProvider getSelectedProvider() {    return selectedProvider;  }  public void setSelectedProvider(EvalPackProvider selectedProvider) {    this.selectedProvider = selectedProvider;  }  public String getEvalExpertCode() {    return evalExpertCode;  }  public void setEvalExpertCode(String evalExpertCode) {    this.evalExpertCode = evalExpertCode;  }  /**   *   * @Description:增加专家质疑信息。  * @return void 返回类型  * @since 1.0   */  public void doAddEvalComment() {    ZcEbEvalCommentPanel panel = new ZcEbEvalCommentPanel(evalExpert, evalPack);    JBaseDialog dialog = new JBaseDialog(this.parentWindow, Dialog.ModalityType.APPLICATION_MODAL);    dialog.setLayout(new BorderLayout());    dialog.add(panel);    dialog.setTitle("添加质疑");    dialog.setSize(UIConstants.DIALOG_3_LEVEL_WIDTH, UIConstants.DIALOG_3_LEVEL_WIDTH);    dialog.moveToScreenCenter();    dialog.setVisible(true);  }  private void setFilePath() {    if (null == selectedProvider) {      return;    }    /**     * 投标文件存放路径格式为:C:\\ufgov\\eb\\download\\ztb\\项目代码\\供应商代码\\项目代码\\项目代码.xml
     */    tbDocService.setFileDownloadPath(fileDownLoadpath + selectedProvider.getProviderCode() + File.separator);    super.setFilePath(fileDownLoadpath + selectedProvider.getProviderCode() + File.separator);    String fileName = filePath + evalPack.getProjCode() + File.separator + evalPack.getProjCode() + ".xml";    super.setZtbFileName(fileName);  }  /**   *   * @Description:根据供应商信息构造对应的供应商投标文件配置文件路径，然后刷新树节点。  * @return void 返回类型  * @since 1.0   */  public void afterProviderChange() {    //刷新供应商时：清空投标面板。    //88888888leftPane.setTopComponent(null);    if (wordPane != null) {      wordPane.close();    }    splitPane.setRightComponent(new JPanel());    splitPane.setDividerLocation(splitPane.getDividerLocation());    selectedProvider = portalPanel.getSelectedProvider();    self.setFilePath();    downloadFileIfNeed();  }  public void downloadFileIfNeed() {    if (null == getFilePath()) {      return;    }    downloadFile(selectedProvider.getTbFileID(), selectedProvider.getProviderCode(), "TB");  }}
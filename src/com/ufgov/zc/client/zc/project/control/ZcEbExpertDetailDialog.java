/** * @(#) project: ZC * @(#) file: ZcEbExpertDetailDialog.java * * Copyright 2010 UFGOV, Inc. All rights reserved. * UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms. * */package com.ufgov.zc.client.zc.project.control;import java.awt.BorderLayout;import java.awt.Color;import java.awt.Dialog;import java.awt.Dimension;import java.awt.Font;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.util.ArrayList;import java.util.Calendar;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.BorderFactory;import javax.swing.JComponent;import javax.swing.JOptionPane;import javax.swing.JTabbedPane;import javax.swing.border.TitledBorder;import org.apache.log4j.Logger;import com.ufgov.smartclient.component.table.fixedtable.JPageableFixedTable;import com.ufgov.zc.client.common.ListCursor;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.UIConstants;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.common.converter.zc.EvalResultToTableModelConverter;import com.ufgov.zc.client.component.GkBaseDialog;import com.ufgov.zc.client.component.JFuncToolBar;import com.ufgov.zc.client.component.JTablePanel;import com.ufgov.zc.client.component.button.ExitButton;import com.ufgov.zc.client.component.button.FuncButton;import com.ufgov.zc.client.component.button.NextButton;import com.ufgov.zc.client.component.button.PreviousButton;import com.ufgov.zc.client.component.button.SaveButton;import com.ufgov.zc.client.component.table.celleditor.TextCellEditor;import com.ufgov.zc.client.component.table.codecelleditor.AsValComboBoxCellEditor;import com.ufgov.zc.client.component.table.codecellrenderer.AsValCellRenderer;import com.ufgov.zc.client.component.ui.fieldeditor.AbstractFieldEditor;import com.ufgov.zc.client.component.zc.AbstractMainSubEditPanel;import com.ufgov.zc.client.util.SwingUtil;import com.ufgov.zc.client.zc.ZcUtil;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.zc.model.EvalItemType;import com.ufgov.zc.common.zc.model.ZcEbEvalItemResult;import com.ufgov.zc.common.zc.model.ZcEbExpertEvalResult;import com.ufgov.zc.common.zc.publish.IZcEbEvalServiceDelegate;/** * @ClassName: ZcEbExpertDetailDialog * @Description: TODO(这里用一句话描述这个类的作用) * @date: 2010-12-10 下午12:42:18 * @version: V1.0 * @since: 1.0 * @author: fanpl * @modify: */public class ZcEbExpertDetailDialog extends GkBaseDialog {  private static final Logger logger=Logger.getLogger(ZcEbExpertDetailDialog.class);  private ZcEbExpertDetailDialog self = this;  private ZcEbExpertDetailEditPanel editPanel;  private ZcEbProjectControlEditSubDialog parentPanel;    public ZcEbExpertDetailDialog(ZcEbProjectControlEditSubDialog dialog, List beanList, int editingRow, String tabStatus, boolean isEdit) {    super(dialog, Dialog.ModalityType.APPLICATION_MODAL);    this.parentPanel = dialog;    editPanel = new ZcEbExpertDetailEditPanel(new ListCursor(beanList, editingRow), tabStatus,isEdit);    setLayout(new BorderLayout());    add(editPanel);    this.setTitle("专家评审明细");    this.setSize(UIConstants.DIALOG_0_LEVEL_WIDTH, UIConstants.DIALOG_0_LEVEL_HEIGHT);    this.moveToScreenCenter();    this.setVisible(true);  }  private class ZcEbExpertDetailEditPanel extends AbstractMainSubEditPanel {    private FuncButton previousButton = new PreviousButton();    private FuncButton nextButton = new NextButton();    private FuncButton exitButton = new ExitButton();        private FuncButton saveButton = new SaveButton();    private ListCursor listCursor;    private boolean isEdit=false;    private RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    private String compoId = "ZC_EB_PROJ_CTRL";    private JTabbedPane tabPaneBase;    //技术打分明细    private JTablePanel scoreEvalDetailTablePanel = new JTablePanel("scoreEvalDetailTablePanel");    //符合性评审明细    private JTablePanel complianceEvalDetailTablePanel = new JTablePanel("complianceEvalDetailTablePanel");        private IZcEbEvalServiceDelegate zcEbEvalServiceDelegate = (IZcEbEvalServiceDelegate) ServiceFactory.create(IZcEbEvalServiceDelegate.class, "zcEbEvalServiceDelegate");    public ZcEbExpertDetailEditPanel(ListCursor listCursor, String tabStatus, boolean isEdit) {      this.listCursor = listCursor;      this.workPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "专家评审明细", TitledBorder.CENTER, TitledBorder.TOP,        new Font("宋体", Font.BOLD, 15), Color.BLUE));      this.colCount = 4;      this.isEdit=isEdit;      init();      refreshData();    }    public List<AbstractFieldEditor> createFieldEditors() {      List<AbstractFieldEditor> editorList = new ArrayList<AbstractFieldEditor>();      return editorList;    }    public JComponent createSubBillPanel() {      tabPaneBase = new JTabbedPane();      tabPaneBase.setMinimumSize(new Dimension(240, 240));      scoreEvalDetailTablePanel.init();      complianceEvalDetailTablePanel.init();      tabPaneBase.addTab("符合性指标评审明细", complianceEvalDetailTablePanel);      tabPaneBase.addTab("技术打分评审明细", scoreEvalDetailTablePanel);      return tabPaneBase;    }    public void initToolBar(JFuncToolBar toolBar) {      toolBar.setModuleCode("ZC");      toolBar.setCompoId(ZcEbProjectControlListPanel.compoId);      toolBar.add(saveButton);      toolBar.add(previousButton);      toolBar.add(nextButton);      toolBar.add(exitButton);      saveButton.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {          doSave();        }      });      previousButton.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {          doPrevious();        }      });      nextButton.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {          doNext();        }      });      exitButton.addActionListener(new ActionListener() {        public void actionPerformed(ActionEvent e) {          doExit();        }      });    }    protected void doSave() {      // TCJLODO Auto-generated method stub      ZcEbExpertEvalResult expertEvalResult = (ZcEbExpertEvalResult) this.listCursor.getCurrentObject();      try{        zcEbEvalServiceDelegate.insertEvalItemResultList(expertEvalResult.getZcEbEvalComplItemResultList(), WorkEnv.getInstance().getRequestMeta());        zcEbEvalServiceDelegate.insertEvalItemResultList(expertEvalResult.getZcEbEvalScoreItemResultList(), WorkEnv.getInstance().getRequestMeta());        JOptionPane.showMessageDialog(parentPanel, "保存成功", "提示", JOptionPane.INFORMATION_MESSAGE);      }catch(Exception e){        JOptionPane.showMessageDialog(parentPanel, "保存失败", "提示", JOptionPane.ERROR_MESSAGE);        logger.error("保存评标明细结果失败", e);      }    }    private void doPrevious() {      listCursor.previous();      refreshData();    }    private void doNext() {      listCursor.next();      refreshData();    }    private void doExit() {      self.closeDialog();    }    private void refreshData() {      ZcEbExpertEvalResult expertEvalResult = (ZcEbExpertEvalResult) this.listCursor.getCurrentObject();      if(isEdit){        if(expertEvalResult.getZcEbEvalScoreItemResultList()==null || expertEvalResult.getZcEbEvalScoreItemResultList().size()==0){          //获取空白评分表          List scoreLst=getEvalEmptyLst(EvalItemType.SCORE);          expertEvalResult.setZcEbEvalScoreItemResultList(scoreLst);        }        if(expertEvalResult.getZcEbEvalComplItemResultList()==null || expertEvalResult.getZcEbEvalComplItemResultList().size()==0){          //获取空白评分表          List scoreLst=getEvalEmptyLst(EvalItemType.COMPLIANICE);          expertEvalResult.setZcEbEvalComplItemResultList(scoreLst);        }      }      this.setEditingObject((ZcEbExpertEvalResult) listCursor.getCurrentObject());      this.refreshScoreDetailTablePanel(expertEvalResult);      this.refreshComplDetailTablePanel(expertEvalResult);      this.tabPaneBase.repaint();      updateBtnStatus();    }    /**     * 获取空白的指标集合     * @param itemType     * @return     */    private List getEvalEmptyLst(String itemType) {      // TCJLODO Auto-generated method stub      ZcEbExpertEvalResult expertEvalResult = (ZcEbExpertEvalResult) this.listCursor.getCurrentObject();      Map map = new HashMap();      map.put("ITEM_TYPE", itemType);      map.put("FORMULA_CODE", expertEvalResult.getFormulaCode());      List rtn= zcEbEvalServiceDelegate.getZcEbEvalFormulaItemList(map, requestMeta);           if(rtn!=null){        ZcEbEvalItemResult temp=null;        for (int i=0;i<rtn.size();i++) {          ZcEbEvalItemResult item =(ZcEbEvalItemResult) rtn.get(i);          if("符合性指标".equals(item.getItemName())||"技术性指标".equals(item.getItemName())){            temp=item;          }else{            item.setEvalExpert(expertEvalResult.getExpertName());            item.setEvalExpertCode(expertEvalResult.getExpertCode());            item.setProviderCode(expertEvalResult.getProviderCode());            item.setProviderName(expertEvalResult.getProviderName());              item.setProjCode(expertEvalResult.getProjCode());            item.setPackCode(expertEvalResult.getPackCode());            item.setEvalDate(Calendar.getInstance().getTime());          }        }        rtn.remove(temp);      }      return rtn;    }    private void updateBtnStatus() {      // TCJLODO Auto-generated method stub      saveButton.setEnabled(isEdit);    }    private void refreshScoreDetailTablePanel(ZcEbExpertEvalResult expertEvalResult) {            scoreEvalDetailTablePanel.setTableModel(EvalResultToTableModelConverter.convertScoreDetailTableData(        expertEvalResult.getZcEbEvalScoreItemResultList(), isEdit));      ZcUtil.translateColName(scoreEvalDetailTablePanel.getTable(), EvalResultToTableModelConverter.getExpertScoreDetailResultInfo());    }    private void refreshComplDetailTablePanel(ZcEbExpertEvalResult expertEvalResult) {      complianceEvalDetailTablePanel.setTableModel(EvalResultToTableModelConverter.convertComplDetailTableData(        expertEvalResult.getZcEbEvalComplItemResultList(), isEdit));      ZcUtil.translateColName(complianceEvalDetailTablePanel.getTable(), EvalResultToTableModelConverter.getExpertComplDetailResultInfo());      setComplTabledetailEditor(complianceEvalDetailTablePanel.getTable());    }    private void setComplTabledetailEditor(final JPageableFixedTable table) {      table.setDefaultEditor(String.class, new TextCellEditor());      final AsValComboBoxCellEditor asValComboBoxCellEditor = new AsValComboBoxCellEditor("VS_ZC_EB_COMPLIANCE_VALUE");      SwingUtil.setTableCellEditor(table, "COMPLIANCE_EVAL_VALUE", asValComboBoxCellEditor);      SwingUtil.setTableCellRenderer(table, "COMPLIANCE_EVAL_VALUE", new AsValCellRenderer("VS_ZC_EB_COMPLIANCE_VALUE"));    }  }}
package com.ufgov.zc.client.zc.project.integration_dt;import java.awt.BorderLayout;import java.awt.Dimension;import java.awt.event.WindowAdapter;import java.awt.event.WindowEvent;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.swing.JFrame;import javax.swing.JOptionPane;import javax.swing.JTabbedPane;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.ListCursor;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.UIConstants;import com.ufgov.zc.client.zc.bulletin.ZcEbBulletinXunJiaBidEditProjPanel;import com.ufgov.zc.client.zc.formula.FormulaSetMainPanel;import com.ufgov.zc.client.zc.project.integration.zbbook.ZBPanel;import com.ufgov.zc.client.zc.ztb.activex.WordPane;import com.ufgov.zc.client.zc.ztb.util.GV;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.ZcEbFormula;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbProj;import com.ufgov.zc.common.zc.publish.IZcEbBulletinServiceDelegate;import com.ufgov.zc.common.zc.publish.IZcEbFormulaServiceDelegate;@SuppressWarnings("unchecked")public class ZcEbProjectEditFrame_dt extends JFrame {  private static final long serialVersionUID = -56873481859200532L;  private ZcEbProjectEditPanel_dt editPanel;  private ZcEbBulletinXunJiaBidEditProjPanel editXJPanel;  private ZBPanel zBPanel = null;  private FormulaSetMainPanel fsmp = null;  private ZcEbProjectListPanel_dt listPanel = null;  private ListCursor listCursor = null;  private WordPane wordPane = new WordPane();  private JTabbedPane tabPane = new JTabbedPane(JTabbedPane.TOP);  private IZcEbFormulaServiceDelegate zcEbFormulaServiceDelegate = (IZcEbFormulaServiceDelegate) ServiceFactory.create(IZcEbFormulaServiceDelegate.class, "zcEbFormulaServiceDelegate");  protected IZcEbBulletinServiceDelegate zcEbBulletinServiceDelegate = (IZcEbBulletinServiceDelegate) ServiceFactory.create(IZcEbBulletinServiceDelegate.class, "zcEbBulletinServiceDelegate");  public ZcEbProjectEditFrame_dt(ZcEbProjectListPanel_dt listPanel, List beanList, int editingRow, String tabStatus) {    this.setLayout(new BorderLayout());    this.listPanel = listPanel;    this.listCursor = new ListCursor(beanList, editingRow);    this.editPanel = new ZcEbProjectEditPanel_dt(listCursor, tabStatus, listPanel, this);    this.initComponents();    this.setTitle(LangTransMeta.translate("ZC_EB_PROJ_TITLE"));    this.setSize(new Dimension(UIConstants.SCREEN_WIDTH, UIConstants.SCREEN_HEIGHT - 40));    this.setLocationRelativeTo(null);    this.setVisible(true);  }  //  public void refreshCurrentTab(String projCode, String type) {  //    if (this.editPanel.getPurType().equals(ZcSettingConstants.PITEM_OPIWAY_XJ)) {  //      ZcEbProj proj = (ZcEbProj) this.listCursor.getCurrentObject();  //      editXJPanel = editPanel.getXJPanel(proj);  //      if (tabPane.indexOfTab("询价单") < 0) {  //        this.tabPane.add(editXJPanel, "询价单");  //      }  //      editXJPanel.refreshData();  //    }  //  }  //  public void removeXJtab() {  //    tabPane.remove(editXJPanel);  //  }  private void initComponents() {    this.add(this.tabPane);    this.tabPane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);    this.tabPane.add(editPanel, "立项分包");    String projCode = getProjCode();    //如果是新增项目，就无需往下执行    if (projCode == null) { return; }    doCreateNewTab(getZcEbProj(), false);    //询价公告单独发，不集成到立项分包中    //    refreshCurrentTab(projCode, "new");  }  /**   * 创建招标书和评标方法页签   * @param proj   */  public void doCreateNewTab(ZcEbProj proj, boolean zbBookFlag) {    toRemoveOldPanel();    String purType = getProjPurType();    if ("_1_2_3_4_6_".indexOf(purType) != -1) {      try {        zBPanel = new ZBPanel(this, this.editPanel, true);        zBPanel.setName("zbpanel");        zBPanel.importProject(proj.getProjCode(), zbBookFlag);        //增加对招标文件中保存按钮的控制        boolean flag = true;        if (listPanel.getRequestMeta().getSvUserID().equals(proj.getManagerCode())) {          zBPanel.setSave(flag);        } else {          flag = false;          zBPanel.setSave(flag);        }        if (listPanel.getRequestMeta().getSvUserID().equals(proj.getManagerCode()) && proj.getProcessInstId() != null && proj.getProcessInstId() > 0) {          flag = true;        } else {          flag = false;        }        zBPanel.setTrackRevisions(flag, listPanel.getRequestMeta().getSvUserName());        this.tabPane.add(zBPanel, "招标书制作");      } catch (Exception e) {        GV.showMessageDialog(null, "创建招标书制作页签时出错，原因：\n" + e.getMessage());        e.printStackTrace();        return;      }      toAddFrameExitEvent(proj);      List packList = listPanel.zcEbProjectServiceDelegate.getZcEbPackListByProjCode(proj.getProjCode(), listPanel.getRequestMeta());      ElementConditionDto dto = new ElementConditionDto();      dto.setProjCode(proj.getProjCode());      dto.setZcText0(getZcEbProj().getProjName());      ZcEbFormula formula = null;      StringBuffer buff = new StringBuffer();      StringBuffer buff2 = new StringBuffer();      for (int i = 0; i < packList.size(); i++) {        ZcEbPack pack = (ZcEbPack) packList.get(i);        buff.append(pack.getPackCode());        buff.append("@");        buff2.append(pack.getPackName());        buff2.append("@;@");        if (formula == null) {          dto.setPackCode(pack.getPackCode());          dto.setZcText1(pack.getPackName());          formula = zcEbFormulaServiceDelegate.getZcEbFormulaById(dto, listPanel.getRequestMeta());        }      }      if (formula == null) {        formula = new ZcEbFormula();        formula.setProjectCode(dto.getProjCode());        formula.setProjectName(dto.getZcText0());        formula.setPackCode(dto.getPackCode());        formula.setPackName(dto.getZcText1());        formula.setAgency(listPanel.getRequestMeta().getSvCoCode());        formula.setAgencyName(listPanel.getRequestMeta().getSvCoName());        if (ZcSettingConstants.ZC_CGFS_GKZB.equals(purType)) {          formula.setFactorType("1");        } else if (ZcSettingConstants.ZC_CGFS_JZXTP.equals(purType)) {          formula.setFactorType("2");        } else if (ZcSettingConstants.ZC_CGFS_DYLY.equals(purType)) {          formula.setFactorType("2");        } else if (ZcSettingConstants.ZC_CGFS_XYGH.equals(purType)) {          formula.setFactorType("4");        }      } else {        buff.delete(buff.length() - 1, buff.length());        buff2.delete(buff2.length() - 3, buff2.length());      }      Map<String, Object> paras = new HashMap<String, Object>();      paras.put("isFromZBFrame", "true");      paras.put("isSamePBFF", "true");      paras.put("packesNodeCode", buff.toString());      paras.put("packesNodeName", buff2.toString());      paras.put("proj", proj);      paras.put("projEditPanel", this.editPanel);      //paras.put("filePath", GV.getImportFileDir_FromRoot() + pbys.getNodesFullPathWithExtIfExist());      fsmp = new FormulaSetMainPanel(formula, paras);      fsmp.setParentWindow(this);      fsmp.setName("formulapanel");      if (this.editPanel.isEditing()) {        fsmp.setSaveBtn(true);      } else {        fsmp.setSaveBtn(false);      }      this.tabPane.add(fsmp, "评标方法定制");    }  }  public void toRemoveOldPanel() {    for (int i = 0; i < this.tabPane.getTabCount(); i++) {      if ("zbpanel".equals(this.tabPane.getComponentAt(i).getName())) {        this.tabPane.remove(i);        i--;      } else if ("formulapanel".equals(this.tabPane.getComponentAt(i).getName())) {        this.tabPane.remove(i);        i--;      }    }  }  private ZcEbProj getZcEbProj() {    if (listCursor != null && listCursor.getCurrentObject() != null) {      return (ZcEbProj) listCursor.getCurrentObject();    } else {      return new ZcEbProj();    }  }  private String getProjPurType() {    String pt = getZcEbProj().getPurType();    if (pt != null) {      return pt;    } else {      return "X";    }  }  private void toAddFrameExitEvent(final ZcEbProj proj) {    addWindowListener(new WindowAdapter() {      public void windowClosing(WindowEvent e) {        try {          checkAndUploadZbfile(proj);        } catch (Exception e2) {          e2.printStackTrace();          JOptionPane.showMessageDialog(null, "本次退出时没有和服务器端进行同步，本地更新可能没有更新到服务器，\n可以下次再进行同步，无法同步原因:" + e2.getMessage());        }      }    });  }  //检查并上传文件到服务器上  protected void checkAndUploadZbfile(ZcEbProj proj) throws Exception {    if (proj == null || proj.getProjCode() == null) return;    zBPanel.getBookService().toCheckZbBookSaved(proj);  }  public void closeWindow() {    this.dispose();  }  private String getProjCode() {    return getZcEbProj().getProjCode();  }  public ZcEbProjectListPanel_dt getListPanel() {    return listPanel;  }  public void setListPanel(ZcEbProjectListPanel_dt listPanel) {    this.listPanel = listPanel;  }}
package com.ufgov.zc.client.zc.zcxmcght;import java.util.List;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.common.zc.foreignentity.IForeignEntityHandler;import com.ufgov.zc.common.zc.model.ZcXmcgHt;import com.ufgov.zc.common.zc.publish.IZcEbSupplierServiceDelegate;import com.ufgov.zc.common.zc.publish.IZcebZbServiceDelegate;public class BiddingWinnerHandler implements IForeignEntityHandler {  public IZcEbSupplierServiceDelegate zcEbSupplierServiceDelegate = (IZcEbSupplierServiceDelegate) ServiceFactory.create(  IZcEbSupplierServiceDelegate.class, "zcEbSupplierServiceDelegate");  private IZcebZbServiceDelegate zcebZbServiceDelegate = (IZcebZbServiceDelegate) ServiceFactory.create(IZcebZbServiceDelegate.class,  "zcebZbServiceDelegate");  private String columNames[];  private AbstractZcXmcgHtEditPanel zcXmcgHtEditPanel;  public BiddingWinnerHandler(String[] columNames, AbstractZcXmcgHtEditPanel zcXmcgHtEditPanel) {    this.columNames = columNames;    this.zcXmcgHtEditPanel = zcXmcgHtEditPanel;  }  //点击编辑框的时候执行自动该方法  public void excute(List selectedDatas) {    ZcXmcgHt zb = (ZcXmcgHt) zcXmcgHtEditPanel.getListCursor().getCurrentObject();    System.out.println("setZcSuName.....aaaaa.:" + zb.getZcSuName());    for (Object object : selectedDatas) {      ZcXmcgHt curr = (ZcXmcgHt) object;      //将所获得的值设置到编辑框中      //zb.setZcSuName(curr.getSuName());      // zb.setZcSuCode(curr.getSuCode());      zb.setZcBidContent(curr.getZcPProMake().getZcMakeName());      //zb.setZcBidCode(curr.getBidCode());      // zb.setZcHtNum(curr.getBidSum());      break;    }    //    ElementConditionDto dto = new ElementConditionDto();    //    dto.setExecutor(zb.getZcSuCode());    //    if (dto.getExecutor() == null)    //      return;    //    List suList = zcEbSupplierServiceDelegate.getSimpleZcEbSupplier(dto, zcXmcgHtEditPanel.getRequestMeta());    //    for (int i = 0; i < suList.size(); i++) {    //      ZcXmcgHt ht = (ZcXmcgHt) suList.get(i);    //      zb.setZcSuAccCode(ht.getZcSuAccCode());    //      zb.setZcSuBankCode(ht.getZcSuBankCode());    //      zb.setZcSuBankName(ht.getZcSuBankName());    //      break;    //    }    //    List<ZcebZbItem> itemList = zcebZbServiceDelegate.getZcebZbItem(zb.getZcBidCode(), zcXmcgHtEditPanel.getRequestMeta());    System.out.println("setZcSuName......:" + zb.getZcSuName());    zcXmcgHtEditPanel.setEditingObject(zb);    //    zcXmcgHtEditPanel.refreshSubItemData(itemList);  }  @Override  public TableModel createTableModel(List showDatas) {    Object data[][] = new Object[showDatas.size()][columNames.length];    for (int i = 0; i < showDatas.size(); i++) {      ZcXmcgHt rowData = (ZcXmcgHt) showDatas.get(i);      int col = 0;      //弹出来的项目选择框信息填充      data[i][col++] = rowData.getZcMakeCode();      data[i][col++] = rowData.getZcPProMake().getZcMakeName();    }    MyTableModel model = new MyTableModel(data, columNames) {      private static final long serialVersionUID = 1821460782676810898L;      public boolean isCellEditable(int row, int colum) {        return false;      }      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }    };    return model;  }  @Override  public boolean isMultipleSelect() {    return false;  }}
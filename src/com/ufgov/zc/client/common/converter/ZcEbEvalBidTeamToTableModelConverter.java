/** * ZcEbEvalBidTeamToTableModelConverter.java * com.ufgov.gk.client.zc.zcebsignup * Administrator * 2010-5-26 */package com.ufgov.zc.client.common.converter;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbEvalBidTeam;import com.ufgov.zc.common.zc.model.ZcEbEvalBidTeamMember;/** * @author Administrator * */public class ZcEbEvalBidTeamToTableModelConverter {  public TableModel convertToTableModel(List zcEbEvalBidTeamLst) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PROJ_NAME));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_NAME));    //names.add("评标组长");    if (zcEbEvalBidTeamLst != null && zcEbEvalBidTeamLst.size() > 0) {      for (int i = 0; i < zcEbEvalBidTeamLst.size(); i++) {        Vector rowData = new Vector();        ZcEbEvalBidTeam bt = (ZcEbEvalBidTeam) zcEbEvalBidTeamLst.get(i);        rowData.add(bt.getProjCode());        rowData.add(bt.getProjName());        //rowData.add(bt.getPackCode());        rowData.add(bt.getPackName());        rowData.add(bt.getPackDesc());        //rowData.add(bt.getEvalLeaderName());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(zcEbEvalBidTeamLst);    return tableModel;  }  public TableModel convertMembersToTableModel(List deList) {    int i = 0;    for (Object object : deList) {      i++;      ZcEbEvalBidTeamMember member = (ZcEbEvalBidTeamMember) object;      member.setTempGuid(Guid.genID() + i);    }    BeanTableModel tm = new BeanTableModel() {      public boolean isCellEditable(int row, int column) {        return true;      }    };    tm.setOidFieldName("tempGuid");    String[] colums = new String[] { "EXPERT_TYPE_NAME", "EXPERT_NAME", "SEX", "DUTY", "DEPARTMENT", "PHONE",    "EMAIL", "EXPERT_EVAL_PROGRESS", "ZC_EB_EXP_CODE" };    String[] names = new String[] { "expertTypeName", "expertName", "sex", "duty", "department", "phone",    "email", "expertEvalProgress", "expCode" };    tm.setDataBean(deList, createColumnBeanPropertyPairs(colums, names));    return tm;  }  protected List<ColumnBeanPropertyPair> createColumnBeanPropertyPairs(String[] colums, String[] names) {    List<ColumnBeanPropertyPair> pairList = new ArrayList<ColumnBeanPropertyPair>();    for (int i = 0; i < colums.length; i++) {      ColumnBeanPropertyPair pair = new ColumnBeanPropertyPair();      pair.setColumnIdentifier(colums[i]);      pair.setBeanPropertyName(names[i]);      pairList.add(pair);    }    return pairList;  }}
/** * ZcEbOpenBidToTableModelConverter.java * com.ufgov.gk.client.common.converter * Administrator * 2010-5-21 */package com.ufgov.zc.client.common.converter;import java.util.List;import java.util.Vector;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbOpenBid;/** * @author Administrator * */public class ZcEbOpenBidToTableModelConverter {  public static TableModel convertToTableModel(List zcEbOpenBidLst) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PROJ_NAME));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_NAME));    names.add("投标人");    names.add("开标状态");    if (zcEbOpenBidLst != null && zcEbOpenBidLst.size() > 0) {      for (int i = 0; i < zcEbOpenBidLst.size(); i++) {        Vector rowData = new Vector();        ZcEbOpenBid zcEbOpenBid = (ZcEbOpenBid) zcEbOpenBidLst.get(i);        rowData.add(zcEbOpenBid.getProjCode());        rowData.add(zcEbOpenBid.getProjName());        //        rowData.add(zcEbOpenBid.getPackCode());        rowData.add(zcEbOpenBid.getPackName());        rowData.add(zcEbOpenBid.getProviderName());        rowData.add(AsValDataCache.getName("ZC_VS_OPEN_BID_STATUS", zcEbOpenBid.getOpenBidStatus()));        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(zcEbOpenBidLst);    return tableModel;  }}
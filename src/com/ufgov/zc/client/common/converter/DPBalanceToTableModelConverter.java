package com.ufgov.zc.client.common.converter;import java.util.Arrays;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.util.CodeNameHandler;import com.ufgov.zc.common.commonbiz.model.DpBalance;import com.ufgov.zc.common.system.constants.CpElementConstants;import com.ufgov.zc.common.system.constants.DpElementConstants;public class DPBalanceToTableModelConverter {  public static DefaultTableModel convertDpBalanceForListPage(List dpBalanceList, BillElementMeta bem) {    CodeNameHandler.handleNames(dpBalanceList);    //    BillElementMeta bem = BillElementMeta.getBillElementMeta(Constants.BILL_TYPE_CODE_DP_EDIT);    DefaultTableModel dpBalanceTableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_BALANCE_ID));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_BI_BALANCE_ID));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_TOTAL_MONEY));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_PAY_MONEY));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_BALANCE));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_INCEPTDOC_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_SENDDOC_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORG_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORG_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_CODE));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORIGIN_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYTYPE_NAME));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_CODE));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_MANAGE_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PROJECT_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_FUND_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYOUT_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_CODE));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_REMARK));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR1)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR1_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR2)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR2_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR3)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR3_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR4)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR4_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR5)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR5_NAME));    }    int nd = WorkEnv.getInstance().getTransNd();    for (int i = 0; i < dpBalanceList.size(); i++) {      Vector eachRowData = new Vector();      DpBalance dpBalance = (DpBalance) dpBalanceList.get(i);      eachRowData.add(dpBalance.getDpBalanceId());      eachRowData.add(dpBalance.getBiBalanceId());      eachRowData.add(dpBalance.getDpmoney());      eachRowData.add(dpBalance.getPaySum());      eachRowData.add(dpBalance.getBalance());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {        eachRowData.add(dpBalance.getInceptDocName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {        eachRowData.add(dpBalance.getSendDocName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORG_CODE)) {        eachRowData.add(dpBalance.getOrgName());      }      eachRowData.add(dpBalance.getCoCode());      eachRowData.add(dpBalance.getCoName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {        eachRowData.add(dpBalance.getOriginName());      }      eachRowData.add(dpBalance.getPaytypeName());      eachRowData.add(dpBalance.getBaccCode());      eachRowData.add(dpBalance.getBaccName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {        eachRowData.add(dpBalance.getManageName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {        eachRowData.add(dpBalance.getProjectName());      }      eachRowData.add(dpBalance.getFundName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {        eachRowData.add(dpBalance.getPayoutName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {        eachRowData.add(dpBalance.getOutlayCode());        eachRowData.add(dpBalance.getOutlayName());      }      eachRowData.add(dpBalance.getRemark());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR1)) {        eachRowData.add(dpBalance.getDattr1Name());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR2)) {        eachRowData.add(dpBalance.getDattr2Name());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR3)) {        eachRowData.add(dpBalance.getDattr3Name());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR4)) {        eachRowData.add(dpBalance.getDattr4Name());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_D_ATTR5)) {        eachRowData.add(dpBalance.getDattr5Name());      }      values.add(eachRowData);    }    dpBalanceTableModel = new DefaultTableModel(values, names) {      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          if (getValueAt(0, column) != null) {            return getValueAt(0, column).getClass();          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    return dpBalanceTableModel;  }  /*   * 将计划余额表的数据转变为支付编辑界面的TableModel   */  public static DefaultTableModel convertDpBalanceForCpEditPage(DpBalance[] dpBalanceList, BillElementMeta bem) {    CodeNameHandler.handleNames(Arrays.asList(dpBalanceList));    DefaultTableModel busiBillTableModel = null;    Vector names = new Vector();    Vector values = new Vector();    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_INCEPTDOC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_SENDDOC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORG_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_ORG_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_CO_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_CO_CODE));      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_CO_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_ORIGIN_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYTYPE_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PAYTYPE_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_B_ACC_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_B_ACC_CODE));      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_B_ACC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_MANAGE_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PROJECT_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_FUND_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_FUND_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PAYOUT_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_OUTLAY_CODE));      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_OUTLAY_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR1)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_D_ATTR1_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR2)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_D_ATTR2_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR3)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_D_ATTR3_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR4)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_D_ATTR4_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR5)) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_D_ATTR5_NAME));    }    for (int i = 0, j = dpBalanceList.length; i < j; i++) {      DpBalance bal = dpBalanceList[i];      Vector eachRowData = new Vector();      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {          value = bal.getInceptDocName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {          value = bal.getSendDocCode();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORG_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_ORG_CODE)) {          value = bal.getOrgName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_CO_CODE)) {        eachRowData.add(bal.getCoCode());        eachRowData.add(bal.getCoName());      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {          value = bal.getOriginName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYTYPE_CODE)) {        eachRowData.add(bal.getPaytypeName());      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_B_ACC_CODE)) {        eachRowData.add(bal.getBaccCode());        eachRowData.add(bal.getBaccName());      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {          value = bal.getManageName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {          value = bal.getProjectName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_FUND_CODE)) {        eachRowData.add(bal.getFundName());      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {          value = bal.getPayoutName();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {        String value0 = "";        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {          value0 = bal.getOutlayCode();          value = bal.getOutlayName();        }        eachRowData.add(value0);        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR1)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_D_ATTR1)) {          value = bal.getDattr1Name();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR2)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_D_ATTR2)) {          value = bal.getDattr2Name();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR3)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_D_ATTR3)) {          value = bal.getDattr3Name();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR4)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_D_ATTR4)) {          value = bal.getDattr4Name();        }        eachRowData.add(value);      }      if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR5)) {        String value = "";        if (bem.isElementInherit(DpElementConstants.FIELD_NAME_D_ATTR5)) {          value = bal.getDattr5Name();        }        eachRowData.add(value);      }      values.add(eachRowData);    }    busiBillTableModel = new DefaultTableModel(values, names) {      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          if (getValueAt(0, column) != null) {            return getValueAt(0, column).getClass();          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    return busiBillTableModel;  }  /**   * 计划部分的余额打开显示内容   */  public static DefaultTableModel convertDpBalanceForDpEditPage(DpBalance[] dpBalanceList, BillElementMeta bem) {    CodeNameHandler.handleNames(Arrays.asList(dpBalanceList));    DefaultTableModel busiBillTableModel = null;    Vector names = new Vector();    Vector values = new Vector();    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_INCEPTDOC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_SENDDOC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORG_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORG_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_CO_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_CODE));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORIGIN_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYTYPE_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYTYPE_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_B_ACC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_CODE));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_MANAGE_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PROJECT_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_FUND_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_FUND_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYOUT_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_CODE));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR1)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR1_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR2)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR2_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR3)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR3_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR4)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR4_NAME));    }    if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR5)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_D_ATTR5_NAME));    }    for (int i = 0, j = dpBalanceList.length; i < j; i++) {      DpBalance dpBalance = dpBalanceList[i];      Vector eachRowData = new Vector();      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE))        eachRowData.add(dpBalance.getInceptDocName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_SENDDOC_CODE))        eachRowData.add(dpBalance.getSendDocCode());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_SENDDOC_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_ORG_CODE))        eachRowData.add(dpBalance.getOrgName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORG_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_CO_CODE)) {        eachRowData.add(dpBalance.getCoCode());        eachRowData.add(dpBalance.getCoName());      } else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_CO_CODE)) {        eachRowData.add("");        eachRowData.add("");      }      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_ORIGIN_CODE))        eachRowData.add(dpBalance.getOriginName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_ORIGIN_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_PAYTYPE_CODE))        eachRowData.add(dpBalance.getPaytypeName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYTYPE_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_B_ACC_CODE)) {        eachRowData.add(dpBalance.getBaccCode());        eachRowData.add(dpBalance.getBaccName());      } else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_B_ACC_CODE)) {        eachRowData.add("");        eachRowData.add("");      }      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_MANAGE_CODE))        eachRowData.add(dpBalance.getManageName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_MANAGE_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_PROJECT_CODE))        eachRowData.add(dpBalance.getProjectName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PROJECT_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_FUND_CODE))        eachRowData.add(dpBalance.getFundName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_FUND_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_PAYOUT_CODE))        eachRowData.add(dpBalance.getPayoutName());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_PAYOUT_CODE))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {        eachRowData.add(dpBalance.getOutlayCode());        eachRowData.add(dpBalance.getOutlayName());      }      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {        eachRowData.add("");        eachRowData.add("");      }      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_D_ATTR1))        eachRowData.add(dpBalance.getDattr1Name());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR1))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_D_ATTR2))        eachRowData.add(dpBalance.getDattr2Name());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR2))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_D_ATTR3))        eachRowData.add(dpBalance.getDattr3Name());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR3))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_D_ATTR4))        eachRowData.add(dpBalance.getDattr4Name());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR4))        eachRowData.add("");      if (bem.isElementDisplayInheritField(DpElementConstants.FIELD_NAME_D_ATTR5))        eachRowData.add(dpBalance.getDattr5Name());      else if (bem.isElementDisplayField(DpElementConstants.FIELD_NAME_D_ATTR5))        eachRowData.add("");      values.add(eachRowData);    }    busiBillTableModel = new DefaultTableModel(values, names) {      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          if (getValueAt(0, column) != null) {            return getValueAt(0, column).getClass();          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    return busiBillTableModel;  }  public static DefaultTableModel convertDpBalanceForDpCarry(List dpBalanceList, BillElementMeta bem,  String flag) {    CodeNameHandler.handleNames(dpBalanceList);    MyTableModel dpBalanceTableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_BALANCE_ID));    if (flag.equalsIgnoreCase("UNCARRYED")) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_TOTAL_MONEY));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_DP_BALANCE));    } else if (flag.equalsIgnoreCase("CARRYED")) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CD_MONEY));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_INCEPTDOC_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_SENDDOC_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORG_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORG_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_CODE));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_CO_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_ORIGIN_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYTYPE_NAME));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_CODE));    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_B_ACC_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_MANAGE_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PROJECT_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_FUND_NAME));    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_PAYOUT_NAME));    }    if (bem.isElementInclude(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_CODE));      names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_OUTLAY_NAME));    }    names.add(LangTransMeta.translate(DpElementConstants.FIELD_TRANS_REMARK));    int nd = WorkEnv.getInstance().getTransNd();    for (int i = 0; i < dpBalanceList.size(); i++) {      Vector eachRowData = new Vector();      DpBalance dpBalance = (DpBalance) dpBalanceList.get(i);      eachRowData.add(dpBalance.getDpBalanceId());      if (flag.equalsIgnoreCase("UNCARRYED")) {        eachRowData.add(dpBalance.getDpmoney());        eachRowData.add(dpBalance.getBalance());      } else if (flag.equalsIgnoreCase("CARRYED")) {        eachRowData.add(dpBalance.getCdMoney());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_INCEPTDOC_CODE)) {        eachRowData.add(dpBalance.getInceptDocName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_SENDDOC_CODE)) {        eachRowData.add(dpBalance.getSendDocName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORG_CODE)) {        eachRowData.add(dpBalance.getOrgName());      }      eachRowData.add(dpBalance.getCoCode());      eachRowData.add(dpBalance.getCoName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_ORIGIN_CODE)) {        eachRowData.add(dpBalance.getOriginName());      }      eachRowData.add(dpBalance.getPaytypeName());      eachRowData.add(dpBalance.getBaccCode());      eachRowData.add(dpBalance.getBaccName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_MANAGE_CODE)) {        eachRowData.add(dpBalance.getManageName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PROJECT_CODE)) {        eachRowData.add(dpBalance.getProjectName());      }      eachRowData.add(dpBalance.getFundName());      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_PAYOUT_CODE)) {        eachRowData.add(dpBalance.getPayoutName());      }      if (bem.isElementInclude(DpElementConstants.FIELD_NAME_OUTLAY_CODE)) {        eachRowData.add(dpBalance.getOutlayCode());        eachRowData.add(dpBalance.getOutlayName());      }      eachRowData.add(dpBalance.getRemark());      values.add(eachRowData);    }    dpBalanceTableModel = new MyTableModel(values, names) {      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          if (getValueAt(0, column) != null) {            return getValueAt(0, column).getClass();          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    dpBalanceTableModel.setList(dpBalanceList);    return dpBalanceTableModel;  }}
package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbBulletinWordMold;import com.ufgov.zc.common.zc.model.ZcEbBulletinWordMoldParam;import com.ufgov.zc.common.zc.model.ZcPProMitem;import com.ufgov.zc.common.zc.model.ZcPProMitemBi;public class ZcEbBulletinWordMoldToTableModelConverter {  public static DefaultTableModel convertToTableModel(List bulletinWordMoldList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_BULLETIN_MOLD_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_BULLETIN_MOLD_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_BULLETIN_MOLD_TYPE));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_FILE_NAME));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_FIELD_ID));     names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_STATUS));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_FILE_PATH));             names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_INPUT_DATE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_INPUTOR_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_REMARK));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ND));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_DATA_VIEW));      if (bulletinWordMoldList != null && bulletinWordMoldList.size() > 0) {      for (int i = 0; i < bulletinWordMoldList.size(); i++) {        Vector rowData = new Vector();        ZcEbBulletinWordMold zcEbBulletinWordMold = (ZcEbBulletinWordMold) bulletinWordMoldList.get(i);        rowData.add(zcEbBulletinWordMold.getBulletinMoldCode());        rowData.add(zcEbBulletinWordMold.getBulletinMoldName());        rowData.add(AsValDataCache.getName("VS_ZC_EB_BULLETIN_MOLD_TYPE", zcEbBulletinWordMold.getBulletinMoldType()));        // rowData.add(zcEbBulletinWordMold.getFileName());        //rowData.add(zcEbBulletinWordMold.getFileID());        rowData.add(AsValDataCache.getName("ZC_EB_BULLETIN_MOLD_STATUS", zcEbBulletinWordMold.getStatus()));        //rowData.add(zcEbBulletinWordMold.getFilePath());        rowData.add(zcEbBulletinWordMold.getInputDate());        rowData.add(zcEbBulletinWordMold.getInputorName());        rowData.add(zcEbBulletinWordMold.getRemark());        // rowData.add(zcEbBulletinWordMold.getNd());        // rowData.add(zcEbBulletinWordMold.getDataView());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(bulletinWordMoldList);    return tableModel;  }  /**   * @return the paramInfo   */  public static List<ColumnBeanPropertyPair> getParamInfo() {    return paramInfo;  }  /**   * @param paramInfo the paramInfo to set   */  public static void setParamInfo(List<ColumnBeanPropertyPair> paramInfo) {    ZcEbBulletinWordMoldToTableModelConverter.paramInfo = paramInfo;  }  private static List<ColumnBeanPropertyPair> paramInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    // paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BULLETIN_PARAM_ID , "bulletinParamID"   ,  LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_BULLETIN_PARAM_ID )));                  //paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BULLETIN_MOLD_CODE, "bulletinMoldCode"  ,  LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_BULLETIN_MOLD_CODE   )));                paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PARAM_NAME, "paramName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PARAM_NAME)));    paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FIELD_NAME, "fieldName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_FIELD_NAME)));    paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PARAM_TYPE, "paramType", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PARAM_TYPE)));    paramInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PARAM_DESC, "paramDesc", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PARAM_DESC)));  }  /**  * @Description: TODO(这里用一句话描述这个方法的作用)  * @return TableModel 返回类型  * @since 1.0  */  public static TableModel convertSubParamTableData(List<ZcEbBulletinWordMoldParam> paramList) {    BeanTableModel<ZcEbBulletinWordMoldParam> tm = new BeanTableModel<ZcEbBulletinWordMoldParam>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        return true;      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcEbBulletinWordMoldParam bean = dataBeanList.get(rowIndex);        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");    for (ZcEbBulletinWordMoldParam o : paramList) {      o.setBulletinParamID(Guid.genID());    }    tm.setDataBean(paramList, paramInfo);    return tm;  }}
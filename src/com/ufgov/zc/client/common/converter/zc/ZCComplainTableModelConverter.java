package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.model.AsOption;import com.ufgov.zc.common.zc.model.ZCQuestion;import com.ufgov.zc.common.zc.model.ZcEbComplain;public class ZCComplainTableModelConverter {  private static RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();  private static AsOption asOption = new AsOption();  @SuppressWarnings("unchecked")  public static DefaultTableModel convertToTableModel(List zcComplainList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add("质疑编号");    names.add("采购项目");    names.add("客户意见");    names.add("招标部门意见");    if (zcComplainList != null) {      for (int i = 0; i < zcComplainList.size(); i++) {        Vector rowData = new Vector();        ZcEbComplain complain = (ZcEbComplain) zcComplainList.get(i);        ZCQuestion question = complain.getZcQuestion();        rowData.add(question.getSn());        rowData.add(question.getZcEbProj().getProjName());        rowData.add(question.getClientReason());        rowData.add(complain.getJgReason());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(zcComplainList);    return tableModel;  }  public TableModel convertSignupPackDeToTableModel(List deList) {    BeanTableModel tm = createModel(deList);    String[] colums = new String[] { "PACK_NAME", "PACK_DESC", "PUR_CONTENT" };// , "bidSum", "packBudget", "PUR_TYPE" };    String[] names = new String[] { "packName", "packDesc", "purContent" };// ,    // "packName", "packName", "packName" };    tm.setDataBean(deList, createColumnBeanPropertyPairs(colums, names));    return tm;  }  private BeanTableModel createModel(List deList) {    BeanTableModel tm = new BeanTableModel() {      /*       * (non-Javadoc)       *        * @see       * com.ufgov.gk.client.component.table.BeanTableModel#isCellEditable       * (int, int)       */      public boolean isCellEditable(int row, int column) {        String identifier = this.getColumnIdentifier(column);        if (identifier.equals("PACK_NAME")) {          return true;        }        return false;      }    };    tm.setOidFieldName("signupPackId");    return tm;  }  private List<ColumnBeanPropertyPair> createColumnBeanPropertyPairs(String[] colums, String[] names) {    List<ColumnBeanPropertyPair> pairList = new ArrayList<ColumnBeanPropertyPair>();    for (int i = 0; i < colums.length; i++) {      ColumnBeanPropertyPair pair = new ColumnBeanPropertyPair();      pair.setColumnIdentifier(colums[i]);      pair.setBeanPropertyName(names[i]);      pairList.add(pair);    }    return pairList;  }}
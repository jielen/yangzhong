package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbProMakeOuter;import com.ufgov.zc.common.zc.model.ZcEbSignup;public class ZcEbProMakeOuterTableModelConverter {  public DefaultTableModel convertToTableModel(List signupList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add("采购编号");    names.add("采购名称");    names.add("采购单位");    if (signupList != null && signupList.size() > 0) {      for (int i = 0; i < signupList.size(); i++) {        Vector rowData = new Vector();        ZcEbProMakeOuter promake = (ZcEbProMakeOuter) signupList.get(i);        rowData.add(promake.getCode());        rowData.add(promake.getName());        rowData.add(promake.getCoName());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(signupList);    return tableModel;  }  public TableModel convertPackDeToTableModel(List deList) {    // TCJLODO Auto-generated method stub    BeanTableModel tm = createModel(deList);    String[] colums = new String[] { "PACK_CODE", "PACK_NAME", "CONTENT" };    String[] names = new String[] { "packCode", "packName", "purContent" };    tm.setDataBean(deList, createColumnBeanPropertyPairs(colums, names));    return tm;  }  /**   * @param deList   * @return   * Administrator   * 2010-5-25   */  private BeanTableModel createModel(List deList) {    BeanTableModel tm = new BeanTableModel() {      /* (non-Javadoc)       * @see com.ufgov.gk.client.component.table.BeanTableModel#isCellEditable(int, int)       */      @Override      public boolean isCellEditable(int row, int column) {        String identifier = this.getColumnIdentifier(column);        //        if (identifier.equals("PACK_CODE")) {        //          return true;        //        }        return true;      }    };    tm.setOidFieldName("id");    return tm;  }  private List<ColumnBeanPropertyPair> createColumnBeanPropertyPairs(String[] colums, String[] names) {    List<ColumnBeanPropertyPair> pairList = new ArrayList<ColumnBeanPropertyPair>();    for (int i = 0; i < colums.length; i++) {      ColumnBeanPropertyPair pair = new ColumnBeanPropertyPair();      pair.setColumnIdentifier(colums[i]);      pair.setBeanPropertyName(names[i]);      pairList.add(pair);    }    return pairList;  }}
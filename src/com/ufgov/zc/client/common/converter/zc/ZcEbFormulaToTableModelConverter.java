package com.ufgov.zc.client.common.converter.zc;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbFormula;import java.util.List;import java.util.Vector;/** * * @ClassName: ZcEbFormulaToTableModelConverter* @Description: 指标集模型* @date: 2010-4-23 下午02:46:46* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbFormulaToTableModelConverter extends BaseEntryToTableModelConverter {  @Override  @SuppressWarnings("unchecked")  protected Vector<Object> getValue(List list) {    Vector<Object> values = new Vector<Object>();    if (null != list) {      for (int i = 0; i < list.size(); i++) {        values.add(toRowData((ZcEbFormula) list.get(i)));      }    }    return values;  }  private static Vector<Object> toRowData(ZcEbFormula zcEbFormula) {    Vector<Object> rowData = new Vector<Object>();    //    rowData.add(zcEbFormula.getFormulaCode());    //    rowData.add(zcEbFormula.getFactorType());    rowData.add(zcEbFormula.getProjectCode());    rowData.add(zcEbFormula.getProjectName());    //    rowData.add(zcEbFormula.getPackCode());    rowData.add(zcEbFormula.getPackName());    //    rowData.add(zcEbFormula.getComplianceRate());    //    rowData.add(zcEbFormula.getFactorFullScore());    rowData.add(zcEbFormula.getExecuteDate());    //    rowData.add(zcEbFormula.getCreator());    //    rowData.add(AsValDataCache.getName("ZC_VS_YN", zcEbFormula.getIsConform()));    //    rowData.add(zcEbFormula.getIsConform());    return rowData;  }  @Override  protected Vector<String> getColumnName() {    Vector<String> names = new Vector<String>();    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_CODE));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_FACTORTYPE));    names.add("项目编号");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME));    //    names.add(LangTransMeta.translate(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE)));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PAKE_NAME));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_COMPLIANCERATE));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_FACTORFULLSCORE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_CREATEDATE));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_CREATOR));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FORMULA_ISCONFORM));    return names;  }}
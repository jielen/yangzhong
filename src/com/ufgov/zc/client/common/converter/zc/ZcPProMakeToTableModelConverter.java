/**   * @(#) project: zc_xa* @(#) file: ZcPProMakeToTableModelConverter.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.AsOptionMeta;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.client.datacache.CompanyDataCache;import com.ufgov.zc.client.datacache.OrgDataCache;import com.ufgov.zc.client.zc.ZcUtil;import com.ufgov.zc.common.commonbiz.model.BaseElement;import com.ufgov.zc.common.commonbiz.publish.IBaseDataServiceDelegate;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.system.constants.ZcPProBalConstants;import com.ufgov.zc.common.system.constants.ZcSettingConstants;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.TreeNodeValueObject;import com.ufgov.zc.common.zc.model.ZcBMerchandise;import com.ufgov.zc.common.zc.model.ZcPProMake;import com.ufgov.zc.common.zc.model.ZcPProMitem;import com.ufgov.zc.common.zc.model.ZcPProMitemBaoJia;import com.ufgov.zc.common.zc.model.ZcPProMitemBi;public class ZcPProMakeToTableModelConverter {  private static RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();   @SuppressWarnings({ "unchecked", "serial" })  public static DefaultTableModel convertToTableModel(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));        names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MONEY_BI_SUM));//    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_OPIWAY));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PIFU_CGFS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_LINKMAN));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ATTR2));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ZG_CS_CODE));//    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_SEQUENCE));//    names.add("批复采购组织形式");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_STATUS));//    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_AGEY_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_IS_IMP));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_IS_REMARK));    names.add(LangTransMeta.translate(ZcPProBalConstants.FIELD_TRANS_ZC_INPUT_DATE));    //  names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_TEL));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_INPUT_CODE));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_FUKUAN_TYPE));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MONEY_HT_YBA));    //    //    names.add("是否公开预算");    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcPProMake zcPProMake = (ZcPProMake) entrustList.get(i);        rowData.add(CompanyDataCache.getName(zcPProMake.getCoCode()));        rowData.add(zcPProMake.getZcMakeCode());        rowData.add(zcPProMake.getZcMakeName());        rowData.add(zcPProMake.getZcMoneyBiSum());//        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcPProMake.getZcPitemOpiway()));        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcPProMake.getZcPifuCgfs()));        rowData.add(zcPProMake.getZcMakeLinkman());        rowData.add(zcPProMake.getZcAttr2());        rowData.add(OrgDataCache.getName(zcPProMake.getOrgCode()));//        rowData.add(AsValDataCache.getName("VS_ZC_ORGTYPE", zcPProMake.getZcMakePfSequence()));//        rowData.add(AsValDataCache.getName("VS_ZC_ORGTYPE", zcPProMake.getZcMakeSequence()));        rowData.add(AsValDataCache.getName("ZC_VS_MAKE_STATUS", zcPProMake.getZcMakeStatus()));//        rowData.add(zcPProMake.getAgencyName());        rowData.add(AsValDataCache.getName("VS_Y/N", zcPProMake.getZcIsImp()));        rowData.add(zcPProMake.getZcIsRemark());        rowData.add(zcPProMake.getZcInputDate());        //      rowData.add(zcPProMake.getZcMakeTel());        //        rowData.add(zcPProMake.getNd());        //        //        rowData.add(zcPProMake.getZcInputCode());        //        //        rowData.add(AsValDataCache.getName("ZC_VS_FUKUAN_TYPE", zcPProMake.getZcFukuanType()));        //        //        rowData.add(zcPProMake.getZcMoneyHtYba());        //        //        rowData.add(AsValDataCache.getName("VS_Y/N", zcPProMake.getZcIsBudget()));        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  //add shijia 2011电子竞价LIST  public static DefaultTableModel convertToTableModel_dzjj(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_LINKMAN));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_TEL));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ATTR2));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_STATUS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_INPUT_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_INPUT_DATE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_AGEY_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ZG_CS_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_OPIWAY));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PIFU_CGFS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_FUKUAN_TYPE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_IS_IMP));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_IS_REMARK));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_SEQUENCE));    names.add("是否公开预算");    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcPProMake zcPProMake = (ZcPProMake) entrustList.get(i);        rowData.add(zcPProMake.getZcMakeCode());        rowData.add(zcPProMake.getZcMakeName());        rowData.add(CompanyDataCache.getName(zcPProMake.getCoCode()));        rowData.add(zcPProMake.getNd());        rowData.add(zcPProMake.getZcMakeLinkman());        rowData.add(zcPProMake.getZcMakeTel());        rowData.add(zcPProMake.getZcAttr2());        rowData.add(AsValDataCache.getName("ZC_VS_MAKE_STATUS", zcPProMake.getZcMakeStatus()));        rowData.add(zcPProMake.getZcInputCode());        rowData.add(zcPProMake.getZcInputDate());        rowData.add(zcPProMake.getAgencyName());        rowData.add(OrgDataCache.getName(zcPProMake.getOrgCode()));        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcPProMake.getZcPitemOpiway()));        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcPProMake.getZcPifuCgfs()));        rowData.add(AsValDataCache.getName("ZC_VS_FUKUAN_TYPE", zcPProMake.getZcFukuanType()));        rowData.add(AsValDataCache.getName("VS_Y/N", zcPProMake.getZcIsImp()));        rowData.add(zcPProMake.getZcIsRemark());        rowData.add(AsValDataCache.getName("VS_ZC_ORGTYPE", zcPProMake.getZcMakeSequence()));        rowData.add(AsValDataCache.getName("VS_Y/N", zcPProMake.getZcIsBudget()));        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  public static DefaultTableModel convertToTableModelXieYi(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_LINKMAN));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ZG_CS_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MONEY_BI_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_STATUS));    names.add(LangTransMeta.translate(ZcPProBalConstants.FIELD_TRANS_ZC_INPUT_DATE));    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_TEL));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_INPUT_CODE));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_IS_REMARK));    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcPProMake zcPProMake = (ZcPProMake) entrustList.get(i);        rowData.add(CompanyDataCache.getName(zcPProMake.getCoCode()));        rowData.add(zcPProMake.getZcMakeLinkman());        rowData.add(OrgDataCache.getName(zcPProMake.getOrgCode()));        rowData.add(zcPProMake.getZcMakeCode());        rowData.add(zcPProMake.getZcMakeName());        rowData.add(zcPProMake.getZcMoneyBiSum());        rowData.add(AsValDataCache.getName("ZC_VS_MAKE_STATUS", zcPProMake.getZcMakeStatus()));        rowData.add(zcPProMake.getZcInputDate());        //        rowData.add(zcPProMake.getNd());        //        //        rowData.add(zcPProMake.getZcMakeTel());        //        //        rowData.add(zcPProMake.getZcInputCode());        //        //        rowData.add(zcPProMake.getZcIsRemark());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  public static List<ColumnBeanPropertyPair> itemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME, "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME, "zcCatalogueName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH, "zcPitemAttach", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE, "zcMerPrice", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM, "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));  }  public static List<ColumnBeanPropertyPair> itemXyInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME, "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME, "zcCatalogueName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    itemXyInfo.add(new ColumnBeanPropertyPair("ZC_BRA_NAME", "zcBraName", "品牌"));    itemXyInfo.add(new ColumnBeanPropertyPair("ZC_MER_NAME", "zcMerName", "商品"));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    itemXyInfo.add(new ColumnBeanPropertyPair("ZC_SU_NAME", "zcSuName", "供应商"));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH, "zcPitemAttach", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));        itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE, "zcMerPrice", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE)));    itemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM, "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));  }  public static List<ColumnBeanPropertyPair> subItemXyInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME, "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME, "zcCatalogueName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    subItemXyInfo.add(new ColumnBeanPropertyPair("ZC_BRA_NAME", "zcBraName", "品牌"));    subItemXyInfo.add(new ColumnBeanPropertyPair("ZC_MER_NAME", "zcMerName", "商品"));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_UNIT, "zcCaigUnit", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_FIELD_ZC_MER_UNIT)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    //去掉计划明细里面的计划明细附件    /*subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH, "zcPitemAttach", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));*/    //    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_SU_NAME, "zcSuName", LangTransMeta    //    //    .translate(ZcElementConstants.FIELD_TRANS_ZC_SU_NAME)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_P_PROMAKE_PRICE, "zcMerPrice", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_P_PROMAKE_PRICE)));    subItemXyInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM, "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));  }  public static List<ColumnBeanPropertyPair> itemXyInfoJJ = new ArrayList<ColumnBeanPropertyPair>();  static {    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME, "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME, "zcCatalogueName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair("ZC_BRA_NAME", "zcBraName", "品牌"));    itemXyInfoJJ.add(new ColumnBeanPropertyPair("ZC_MER_NAME", "zcMerName", "商品"));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH, "zcPitemAttach", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));    itemXyInfoJJ.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", "采购数量"));  }  public static List<ColumnBeanPropertyPair> biInfo = new ArrayList<ColumnBeanPropertyPair>();  public static List<ColumnBeanPropertyPair> biInfo2 = new ArrayList<ColumnBeanPropertyPair>();  static {      //    if (isUseBi) {      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcBiNo", "指标编号"));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, "originName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_CODE, "fundName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_FUND_CODE)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME, "originName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "projectName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "bAccName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "outlayName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BT_NAME, "btName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_BT_NAME)));//是否监督使用      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_GB_NAME, "gbName", LangTransMeta        .translate(ZcElementConstants.FIELD_TRANS_GB_NAME)));//是否政府采购      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_SUM, "zcBiSum", "指标总金额"));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_DO_SUM, "zcBiDoSum", "指标可用金额"));      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, "zcBiJhuaSum", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM)));      biInfo.add(new ColumnBeanPropertyPair("ZC_FUND_REMARK", "zcFundRemark", LangTransMeta.translate("ZC_FUND_REMARK")));//    }//    if (isUseBi) {//      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta//        .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));//    } else {//      biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_CODE, "senddocCode", LangTransMeta//        .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));//    }    //    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_YJBA_SUM, "zcBiYjbaSum", "合同备案金额"));////    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE, "paytypeName", LangTransMeta////    .translate(ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE)));    //去掉资金构成里面的资金附件    //    biInfo.add(new ColumnBeanPropertyPair("ZC_FUND_FILE", "zcFundFile", LangTransMeta.translate("ZC_FUND_FILE")));  }    static {    //  if (isUseBi) {    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_CODE, "fundName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_FUND_CODE)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcBiNo", "指标编号"));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, "originName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));//    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME, "originName", LangTransMeta//      .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "projectName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "bAccName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "outlayName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));//    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BT_NAME, "btName", LangTransMeta//      .translate(ZcElementConstants.FIELD_TRANS_BT_NAME)));//是否监督使用//    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_GB_NAME, "gbName", LangTransMeta//      .translate(ZcElementConstants.FIELD_TRANS_GB_NAME)));//是否政府采购    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_SUM, "zcBiSum", "指标总金额"));//    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_DO_SUM, "zcBiDoSum", "指标可用金额"));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, "zcBiJhuaSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM)));    biInfo2.add(new ColumnBeanPropertyPair("ZC_FUND_REMARK", "zcFundRemark", LangTransMeta.translate("ZC_FUND_REMARK")));//  }//  if (isUseBi) {//    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta//      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));//  } else {//    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_CODE, "senddocCode", LangTransMeta//      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));//  }  //  biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_YJBA_SUM, "zcBiYjbaSum", "合同备案金额"));////  biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE, "paytypeName", LangTransMeta////  .translate(ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE)));  //去掉资金构成里面的资金附件//    biInfo.add(new ColumnBeanPropertyPair("ZC_FUND_FILE", "zcFundFile", LangTransMeta.translate("ZC_FUND_FILE")));}  @SuppressWarnings("unchecked")  public TableModel convertSubItemTableData(List itemList, List info, final Map wfCanEditFieldMap) {    BeanTableModel<ZcPProMitem> tm = new BeanTableModel<ZcPProMitem>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (wfCanEditFieldMap != null) {          if (columnId.indexOf("ZC_FIELD_") == 0) {            columnId = columnId.substring("ZC_FIELD_".length());          }          if (!(columnId.endsWith("_ATTACH") || columnId.endsWith("_FILE")) && wfCanEditFieldMap.get(columnId) == null) {            return false;          }        } else if ("ZC_FIELD_ZC_CATALOGUE_NAME".equals(columnId) || "ZC_FIELD_ZC_PITEM_ATTACH_BLOBID".equals(columnId)        || "ZC_FIELD_ZC_ITEM_SUM".equals(columnId)) {          return false;        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitem bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (obj != null) {            if (aValue == null || !obj.equals(((TreeNodeValueObject) aValue).getCode())) {              //清空已经选择的品牌、商品、供应商、价格              this.getBean(rowIndex).setZcBraCode(null);              this.getBean(rowIndex).setZcBraName(null);              this.getBean(rowIndex).setZcMerCode(null);              this.getBean(rowIndex).setZcMerName(null);              this.getBean(rowIndex).setZcMerPrice(null);              this.getBean(rowIndex).setZcSuCode(null);              this.getBean(rowIndex).setZcSuName(null);              this.getBean(rowIndex).setZcItemSum(null);              this.getBean(rowIndex).setZcCaigNum(null);              this.getBean(rowIndex).setBudgetBiMoney(null);              this.getBean(rowIndex).setBudgetOtherMoney(null);            }          }          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH.equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcPitemAttach(null);            this.getBean(rowIndex).setZcPitemAttachBlobid(null);          } else {            this.getBean(rowIndex).setZcPitemAttach(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcPitemAttachBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (Object o : itemList) {      ((ZcPProMitem) o).setTempId(Guid.genID());    }    tm.setDataBean(itemList, info);    return tm;  }  @SuppressWarnings("unchecked")  public static TableModel convertSubItemTableDataForJJ(List itemList, List info) {    BeanTableModel<ZcPProMitem> tm = new BeanTableModel<ZcPProMitem>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        return false;      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitem bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (obj != null) {            if (aValue == null || !obj.equals(((TreeNodeValueObject) aValue).getCode())) {              //清空已经选择的品牌、商品、供应商、价格              this.getBean(rowIndex).setZcBraCode(null);              this.getBean(rowIndex).setZcBraName(null);              this.getBean(rowIndex).setZcMerCode(null);              this.getBean(rowIndex).setZcMerName(null);              this.getBean(rowIndex).setZcMerPrice(null);              this.getBean(rowIndex).setZcSuCode(null);              this.getBean(rowIndex).setZcSuName(null);              this.getBean(rowIndex).setZcItemSum(null);              this.getBean(rowIndex).setZcCaigNum(null);              this.getBean(rowIndex).setBudgetBiMoney(null);              this.getBean(rowIndex).setBudgetOtherMoney(null);            }          }          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH.equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcPitemAttach(null);            this.getBean(rowIndex).setZcPitemAttachBlobid(null);          } else {            this.getBean(rowIndex).setZcPitemAttach(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcPitemAttachBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (Object o : itemList) {      ((ZcPProMitem) o).setTempId(Guid.genID());    }    tm.setDataBean(itemList, info);    return tm;  }  public static TableModel convertSubBiTableData(List<ZcPProMitemBi> biList, final Map wfCanEditFieldMap) {    BeanTableModel<ZcPProMitemBi> tm = new BeanTableModel<ZcPProMitemBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if ("ZC_BI_YJBA_SUM".equals(columnId) || "ZC_FUND_FILE_BLOBID".equals(columnId) || "ZC_BI_DO_SUM".equals(columnId)          || "ZC_BI_SUM".equals(columnId)) {          return false;        }//        if (ZcUtil.useBudget() && "ZC_BI_NO".equals(columnId) && ZcUtil.isYsdw()) {//          return true;//        }        if ("ZC_FUND_CODE".equals(columnId) || ZcElementConstants.FIELD_TRANS_ORIGIN_NAME.equals(columnId) || "ZC_PAYTYPE_CODE".equals(columnId)          || "ZC_SENDDOC_NAME".equals(columnId) ) {          return false;        }        if (ZcElementConstants.FIELD_TRANS_B_ACC_NAME.equals(columnId) || ZcElementConstants.FIELD_TRANS_PROJ_NAME.equals(columnId) || ZcElementConstants.FIELD_TRANS_OUTLAY_NAME.equals(columnId)          || "ZC_SENDDOC_NAME".equals(columnId) ) {          return false;        }        //        if (wfCanEditFieldMap != null && !wfCanEditFieldMap.containsKey(columnId.substring("ZC_FIELD_".length()))) {        //          return false;        //        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitemBi bean = dataBeanList.get(rowIndex);        if ("ZC_FUND_FILE".equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcFundFile(null);            this.getBean(rowIndex).setZcFundFileBlobid(null);          } else {            this.getBean(rowIndex).setZcFundFile(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcFundFileBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(bean);        } else if ("ZC_BI_NO".equals(this.getColumnIdentifier(columnIndex))) {          super.setValueAt(aValue == null ? null : aValue + "", rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (ZcPProMitemBi o : biList) {      o.setTempId(Guid.genID());    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfo);    return tm;  }  public static List<ColumnBeanPropertyPair> createJinJiaSummaryPairs() {    List<ColumnBeanPropertyPair> pairList = new ArrayList<ColumnBeanPropertyPair>();    ColumnBeanPropertyPair pair = new ColumnBeanPropertyPair();    pair = new ColumnBeanPropertyPair();    pair.setColumnIdentifier("SU_NAME");    pair.setBeanPropertyName("suName");    pairList.add(pair);    //添加“报价品牌”字段 — guoss    pair = new ColumnBeanPropertyPair();    pair.setColumnIdentifier("ZC_BRA_NAME");    pair.setBeanPropertyName("zcBraName");    pairList.add(pair);    pair = new ColumnBeanPropertyPair();    pair.setColumnIdentifier("TOTAL_PRICE");    pair.setBeanPropertyName("totalPrice");    pairList.add(pair);    pair = new ColumnBeanPropertyPair();    pair.setColumnIdentifier("BAO_JIA_SUBMIT_DATE");    pair.setBeanPropertyName("baoJiaSubmitDate");    pairList.add(pair);    pair = new ColumnBeanPropertyPair();    pair.setColumnIdentifier("CHENG_JIAO_STATUS");    pair.setBeanPropertyName("chengJiaoStatus");    pairList.add(pair);    return pairList;  }  public static TableModel convertSubJinJiaTableData(List jinJiaBaoJiaList) {    // TCJLODO Auto-generated method stub    BeanTableModel<ZcPProMitemBaoJia> tm = new BeanTableModel<ZcPProMitemBaoJia>() {      /**       *        */      private static final long serialVersionUID = 1L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if ("CHENG_JIAO_STATUS".equals(columnId)) {          return true;        }        return false;      }    };    tm.setOidFieldName("suName");    tm.setDataBean(jinJiaBaoJiaList, createJinJiaSummaryPairs());    return tm;  }  private static List<ColumnBeanPropertyPair> baoJiaItemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME, "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME, "zcCatalogueName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    baoJiaItemInfo.add(new ColumnBeanPropertyPair("ZC_BRA_NAME", "zcBraName", "品牌"));    baoJiaItemInfo.add(new ColumnBeanPropertyPair("ZC_MER_NAME", "zcMerName", "商品"));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE, "zcMerPrice", "报价金额"));    baoJiaItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM, "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));  }  public static List<ColumnBeanPropertyPair> getBaoJiaItemInfo() {    return baoJiaItemInfo;  }  @SuppressWarnings("unchecked")  public static TableModel convertBaoJiaItemTableData(List itemList) {    BeanTableModel<ZcPProMitem> tm = new BeanTableModel<ZcPProMitem>() {      private static final long serialVersionUID = 7474247421439709971L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME.equals(columnId) || ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(columnId)        || ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME.equals(columnId) || "ZC_FIELD_ZC_PITEM_ARR_DATE".equals(columnId)        || ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM.equals(columnId) || ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM.equals(columnId)) {          return false;        } else          return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitem bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (obj != null) {            if (aValue == null || !obj.equals(((TreeNodeValueObject) aValue).getCode())) {              //清空已经选择的品牌、商品、供应商、价格              this.getBean(rowIndex).setZcBraCode(null);              this.getBean(rowIndex).setZcBraName(null);              this.getBean(rowIndex).setZcMerCode(null);              this.getBean(rowIndex).setZcMerName(null);              this.getBean(rowIndex).setZcMerPrice(null);              this.getBean(rowIndex).setZcSuCode(null);              this.getBean(rowIndex).setZcSuName(null);              this.getBean(rowIndex).setZcItemSum(null);              this.getBean(rowIndex).setBudgetBiMoney(null);              this.getBean(rowIndex).setBudgetOtherMoney(null);            }          }          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH.equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcPitemAttach(null);            this.getBean(rowIndex).setZcPitemAttachBlobid(null);          } else {            this.getBean(rowIndex).setZcPitemAttach(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcPitemAttachBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("zcPitemCode");    tm.setDataBean(itemList, baoJiaItemInfo);    return tm;  }  public static List<ColumnBeanPropertyPair> itemJJInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemJJInfo.add(new ColumnBeanPropertyPair("ZC_MER_NAME", "zcMerName", "商品"));    //itemJJInfo.add(new ColumnBeanPropertyPair("ZC_SU_NAME", "zcSuName", "供应商"));    itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ, "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH, "zcPitemAttach", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));    itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM, "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE, "zcMerPrice", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE)));    itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM, "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));    /* itemJJInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE, "zcPitemArrDate", LangTransMeta       .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));*/  }  @SuppressWarnings("unchecked")  public static TableModel convertJingJiaItemTableData(List itemList) {    BeanTableModel<ZcPProMitem> tm = new BeanTableModel<ZcPProMitem>() {      private static final long serialVersionUID = 7474247421439709971L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if ("ZC_FIELD_ZC_PITEM_ARR_DATE".equals(columnId) || "ZC_FIELD_ZC_ITEM_SUM".equals(columnId)) {          return false;        } else          return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitem bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (obj != null) {            if (aValue == null || !obj.equals(((TreeNodeValueObject) aValue).getCode())) {              //清空已经选择的品牌、商品、供应商、价格              this.getBean(rowIndex).setZcBraCode(null);              this.getBean(rowIndex).setZcBraName(null);              this.getBean(rowIndex).setZcMerCode(null);              this.getBean(rowIndex).setZcMerName(null);              this.getBean(rowIndex).setZcMerPrice(null);              this.getBean(rowIndex).setZcSuCode(null);              this.getBean(rowIndex).setZcSuName(null);              this.getBean(rowIndex).setZcItemSum(null);              this.getBean(rowIndex).setBudgetBiMoney(null);              this.getBean(rowIndex).setBudgetOtherMoney(null);            }          }          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH.equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcPitemAttach(null);            this.getBean(rowIndex).setZcPitemAttachBlobid(null);          } else {            this.getBean(rowIndex).setZcPitemAttach(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcPitemAttachBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if ("ZC_MER_NAME".equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcMerName(null);          } else {            if (aValue instanceof ZcBMerchandise) {              this.getBean(rowIndex).setZcMerName(((ZcBMerchandise) aValue).getZcMerName());            } else {              super.setValueAt(aValue, rowIndex, columnIndex);            }          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("zcPitemCode");    tm.setDataBean(itemList, itemJJInfo);    return tm;  }  public static TableModel convertSubBiTableDataWithOutBudget(List<ZcPProMitemBi> biList, Map wfCanEditFieldMap) {    BeanTableModel<ZcPProMitemBi> tm = new BeanTableModel<ZcPProMitemBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);//        if ("ZC_BI_YJBA_SUM".equals(columnId) || "ZC_FUND_FILE_BLOBID".equals(columnId) || "ZC_BI_DO_SUM".equals(columnId)//          || "ZC_BI_SUM".equals(columnId)) {////          return false;////        }//        if (ZcUtil.useBudget() && "ZC_BI_NO".equals(columnId) && ZcUtil.isYsdw()) {//          return true;//        }//        if ("ZC_FUND_CODE".equals(columnId) || ZcElementConstants.FIELD_TRANS_ORIGIN_NAME.equals(columnId) || "ZC_PAYTYPE_CODE".equals(columnId)//          || "ZC_SENDDOC_NAME".equals(columnId) ) {//          return false;//        }//        if (ZcElementConstants.FIELD_TRANS_B_ACC_NAME.equals(columnId) || ZcElementConstants.FIELD_TRANS_PROJ_NAME.equals(columnId) || ZcElementConstants.FIELD_TRANS_OUTLAY_NAME.equals(columnId)//          || "ZC_SENDDOC_NAME".equals(columnId) ) {//          return false;//        }        //        if (wfCanEditFieldMap != null && !wfCanEditFieldMap.containsKey(columnId.substring("ZC_FIELD_".length()))) {        //          return false;        //        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcPProMitemBi bean = dataBeanList.get(rowIndex);        if ("ZC_FUND_FILE".equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcFundFile(null);            this.getBean(rowIndex).setZcFundFileBlobid(null);          } else {            this.getBean(rowIndex).setZcFundFile(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcFundFileBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(bean);        } else if ("ZC_BI_NO".equals(this.getColumnIdentifier(columnIndex))) {          super.setValueAt(aValue == null ? null : aValue + "", rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (ZcPProMitemBi o : biList) {      o.setTempId(Guid.genID());    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfo2);    return tm;  }}
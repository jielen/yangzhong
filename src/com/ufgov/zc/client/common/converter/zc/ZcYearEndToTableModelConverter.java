package com.ufgov.zc.client.common.converter.zc;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcPProMitemBi;import com.ufgov.zc.common.zc.model.ZcYearPlan;public class ZcYearEndToTableModelConverter {  public static DefaultTableModel convertToTableModel(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_OPIWAY));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MONEY_BI_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_NUM));    names.add("验收结算金额");    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcYearPlan yearPlan = (ZcYearPlan) entrustList.get(i);        rowData.add(yearPlan.getZcMakeCode());        rowData.add(yearPlan.getZcMakeName());        rowData.add(yearPlan.getCoName());        rowData.add(yearPlan.getNd());        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", yearPlan.getZcCgType()));        rowData.add(yearPlan.getZcMakeSum());        rowData.add(yearPlan.getZcHtSum());        rowData.add(yearPlan.getZcBalSum());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  /**   * 转换为需要结转的表格模型   * @param entrustList 需要转换的数据   * @return 转换后的表格数据模型   */  public static DefaultTableModel convertToCarrayTableModel(List entrustList) {    MyTableModel tableModel = null;    //表格列头    Vector names = new Vector();    //表格数据    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_CO_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ND));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PIFU_CGFS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_YEP_FLAG));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MONEY_BI_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BAL_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_JZ_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_JZ_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BAL_JZ_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BLHT_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BLBAL_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BLHTJZ_SUM));    if (null != entrustList && entrustList.size() > 0) {      int size = entrustList.size();      for (int i = 0; i < size; i++) {        Vector rowData = new Vector();        ZcYearPlan yearPlan = (ZcYearPlan) entrustList.get(i);        rowData.add(yearPlan.getZcMakeCode());        rowData.add(yearPlan.getZcMakeName());        rowData.add(yearPlan.getCoName());        rowData.add(yearPlan.getNd());        rowData.add(yearPlan.getZcCgType());        rowData.add(yearPlan.getZcYepFlag());        rowData.add(yearPlan.getZcMakeSum());        rowData.add(yearPlan.getZcHtSum());        rowData.add(yearPlan.getZcBalSum());        rowData.add(yearPlan.getZcMakeJzSum());        rowData.add(yearPlan.getZcHtJzSum());        rowData.add(yearPlan.getZcBalJzSum());        rowData.add(yearPlan.getZcBlHtSum());        rowData.add(yearPlan.getZcBlBalSum());        rowData.add(yearPlan.getZcBlHtJzSum());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  public static TableModel convertToCarraryBiBeanTableModel(List<ZcPProMitemBi> biList) {    BeanTableModel<ZcPProMitemBi> btm = new BeanTableModel<ZcPProMitemBi>(){      @Override      public boolean isCellEditable(int row, int column) {        if(3 == column || 0 == column){          return true;        }        return false;      }          };    btm.setOidFieldName("tempId");    if(null != biList){      for (ZcPProMitemBi o : biList) {        o.setTempId(Guid.genID());      }    }    btm.setDataBean(biList, ZcPProMakeToTableModelConverter.biInfo);    return btm;  }}
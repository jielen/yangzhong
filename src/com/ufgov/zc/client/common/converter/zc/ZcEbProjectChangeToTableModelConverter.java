package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.CompanyDataCache;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.zc.model.ZcEbProjChange;import com.ufgov.zc.common.zc.model.ZcEbProjChangePack;@SuppressWarnings("unchecked")public class ZcEbProjectChangeToTableModelConverter {  private static List<ColumnBeanPropertyPair> packTableColumnInfo = new ArrayList<ColumnBeanPropertyPair>();  public static List<ColumnBeanPropertyPair> getPackTableColumnInfo() {    return packTableColumnInfo;  }  static {    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_NAME", "packName", "分包编号"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_DESC", "packDesc", "分包名称"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_BUDGET", "packBudget", "预算"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PUR_SRC_WAY", "purSrcWay", "原采购方式"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PUR_WAY", "purWay", "拟变更采购方式"));    //packTableColumnInfo.add(new ColumnBeanPropertyPair("CHG_NUM", "chgNum", "变更次数"));  }  private static void prepareColumnHeader(Vector<String> names) {    names.add("预算单位");    names.add("采购计划编号");//取经办人报采购计划时的计划编号    names.add("采购项目");//取经办人报采购计划    names.add("作业时间");    //    names.add("原采购方式");    //    //    names.add("拟变更采购方式");    names.add("采购预算");    //    names.add("备注");    //    names.add("变更单号");//    //    names.add("原变更单号");//可能存在多次变更的情况，    //    names.add("变更金额");  }  public static void loadObjectData(Vector rowData, ZcEbProjChange zcEbProj) {    rowData.add(CompanyDataCache.getNameByCode(zcEbProj.getCoCode()));    rowData.add(zcEbProj.getProjCode());    rowData.add(zcEbProj.getProjName());    rowData.add(zcEbProj.getInputDate());    //    rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcEbProj.getPurLstType()));//原采购方式    //    //    rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcEbProj.getPurType()));//变更后的采购方式    rowData.add(zcEbProj.getProjSrcSum());//项目预算    //    rowData.add(zcEbProj.getPackName());//变更内容    //    rowData.add(zcEbProj.getChgId());    //    //    rowData.add(zcEbProj.getProjSrcCode());    //    //    rowData.add(zcEbProj.getProjSum());//变更金额  }  public static TableModel convertPackToTableModel(List<ZcEbProjChangePack> packList) {    BeanTableModel<ZcEbProjChangePack> tm = new BeanTableModel<ZcEbProjChangePack>() {      @Override      public boolean isCellEditable(int row, int column) {        if (!this.isEditable()) {          return false;        }        if ("PACK_DESC".equals(this.getColumnIdentifier(column))          || "PACK_BUDGET".equals(this.getColumnIdentifier(column))          || "PUR_SRC_WAY".equals(this.getColumnIdentifier(column))) {          return false;        }        return true;      }    };    for (ZcEbProjChangePack data : packList) {      data.setId(Guid.genID());    }    tm.setOidFieldName("id");    tm.setDataBean(packList, packTableColumnInfo);    return tm;  }  public static DefaultTableModel convertToTableModel(List projectList) {    MyTableModel tableModel = null;    Vector<String> names = new Vector<String>();    Vector values = new Vector();    //    names.add("原项目编号");    prepareColumnHeader(names);    if (projectList != null && projectList.size() > 0) {      for (int i = 0; i < projectList.size(); i++) {        Vector rowData = new Vector();        ZcEbProjChange zcEbProj = (ZcEbProjChange) projectList.get(i);        //        rowData.add(zcEbProj.getProjSrcCode());        loadObjectData(rowData, zcEbProj);        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      private static final long serialVersionUID = 3123244681117334262L;      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(projectList);    return tableModel;  }}
/**   * @(#) project: ZC* @(#) file: ZcEbEvalPackResultToTableModelConverter.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbPackEvalResult;/*** @ClassName: ZcEbEvalPackResultToTableModelConverter* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2010-11-9 上午12:56:31* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbEvalPackResultToTableModelConverter extends BaseEntryToTableModelConverter {  @Override  protected Vector<String> getColumnName() {    Vector<String> names = new Vector<String>();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_RESULT_PROVIDER_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_RESULT_PROVIDER_TOTAL_PRICE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_RESULT_EVAL_SCORE));    names.add(LangTransMeta.translate("ZC_EB_EVAL_COMPLIANCE_RESULT"));    names.add(LangTransMeta.translate("ZC_FIELD_COMPLIANCE_UNPASS_REASON"));    //    names.add("排序");    names.add("预中标人");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_RESULT_REMARK));    return names;  }  @Override  public DefaultTableModel convertToTableModel(List list) {    MyTableModel tableModel = null;    tableModel = new MyTableModel(getValue(list), getColumnName()) {      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(list);    return tableModel;  }  @Override  protected Vector<Object> getValue(List list) {    Vector<Object> values = new Vector<Object>();    if (null != list) {      for (int i = 0; i < list.size(); i++) {        values.add(toRowData((ZcEbPackEvalResult) list.get(i)));      }    }    return values;  }  private static Vector<Object> toRowData(ZcEbPackEvalResult zcEbPackEvalResult) {    Vector<Object> rowData = new Vector<Object>();    rowData.add(zcEbPackEvalResult.getProviderName());    rowData.add(zcEbPackEvalResult.getProviderTotalPrice());    rowData.add(zcEbPackEvalResult.getEvalScore());    rowData.add(AsValDataCache.getName("VS_ZC_EB_COMPLIANCE_RESULT", zcEbPackEvalResult.getComplianceEvalResult()));    rowData.add(zcEbPackEvalResult.getComplianceUnpassReason());    rowData.add(zcEbPackEvalResult.getIndx());    rowData.add(zcEbPackEvalResult.getEvalResult());    return rowData;  }  private static List<ColumnBeanPropertyPair> BillDetailInfo = new ArrayList<ColumnBeanPropertyPair>();  public static List<ColumnBeanPropertyPair> getBillDetailInfo() {    return BillDetailInfo;  }  public static void setBillDetailInfo(List<ColumnBeanPropertyPair> billDetailInfo) {    BillDetailInfo = billDetailInfo;  }  static {    //    BillDetailInfo.add(new ColumnBeanPropertyPair("ITEM_CODE", "item_code", "明细编号"));    BillDetailInfo.add(new ColumnBeanPropertyPair("PROVIDER_NAME", "providerName", "供应商"));    BillDetailInfo.add(new ColumnBeanPropertyPair("TOTAL_PRICE", "providerTotalPrice", "投标报价"));    // if (DAN_YI.equals(purType)) {    BillDetailInfo.add(new ColumnBeanPropertyPair("EVAL_SCORE", "evalScore", "评审得分"));    // }    BillDetailInfo.add(new ColumnBeanPropertyPair("COMPLIANCE_EVAL_VALUE", "complianceEvalResult", "符合性评审结果"));    BillDetailInfo.add(new ColumnBeanPropertyPair("UNPASS_REASON", "complianceUnpassReason", "专家符合性评审不通过原因"));    //    BillDetailInfo.add(new ColumnBeanPropertyPair("INDX", "indx", "排序"));    BillDetailInfo.add(new ColumnBeanPropertyPair("EVALRESULT", "evalResult", "预中标人"));  }  public TableModel convertEvalResultTableData(List<ZcEbPackEvalResult> biList) {    BeanTableModel<ZcEbPackEvalResult> tm = new BeanTableModel<ZcEbPackEvalResult>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        //        if ("EVALRESULT".equals(columnId) || "INDX".equals(columnId)) {        //        //          return true;        //        //        }        //        //        return false;        return true;      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcEbPackEvalResult bean = dataBeanList.get(rowIndex);        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");    for (ZcEbPackEvalResult o : biList) {      o.setTempId(Guid.genID());    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, BillDetailInfo);    return tm;  }}
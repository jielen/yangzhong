/**   * @(#) project: ZFCG* @(#) file: ZcEbProPreAuditItemTableModelConverter.java* * Copyright 2011 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.zc.model.ZcEbProviderPreAudiItemtResult;import com.ufgov.zc.common.zc.model.ZcEbProviderPreAudit;import com.ufgov.zc.common.zc.model.ZcEbProviderPreAuditItem;/*** @ClassName: ZcEbProPreAuditItemTableModelConverter* @Description: TODO(这里用一句话描述这个类的作用)* @date: 2011-6-24 下午05:13:02* @version: V1.0 * @since: 1.0* @author: fanpl* @modify: */public class ZcEbProPreAuditItemTableModelConverter {  private List<ZcEbProviderPreAuditItem> itemList;  public List<ZcEbProviderPreAuditItem> getItemList() {    return itemList;  }  public void setItemList(List<ZcEbProviderPreAuditItem> itemList) {    this.itemList = itemList;  }  public ZcEbProPreAuditItemTableModelConverter() {    super();  }  public DefaultTableModel convertToTableModel(List<ZcEbProviderPreAudit> list) {    MyTableModel tableModel = null;    tableModel = new MyTableModel(getValue(list), getColumnName()) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        if (colum == 0 || colum == getColumnCount() - 1) {          return false;        }        return true;      }    };    tableModel.setList(list);    return tableModel;  }  @SuppressWarnings("unchecked")  protected Vector<Object> getValue(List<ZcEbProviderPreAudit> list) {    Vector<Object> values = new Vector<Object>();    if (null != list) {      for (int i = 0; i < list.size(); i++) {        values.add(toRowData(list.get(i).getItemList(), list.get(i).getProviderName(), list.get(i)));      }    }    return values;  }  private static Vector<Object> toRowData(List list, String providerName, ZcEbProviderPreAudit providerAudit) {    Vector<Object> rowData = new Vector<Object>();    rowData.add(providerName);    for (int i = 0; i < list.size(); i++) {      rowData.add(((ZcEbProviderPreAudiItemtResult) list.get(i)).getAuditValue());    }    rowData.add(providerAudit.getIsPass());    return rowData;  }  protected Vector<String> getColumnName() {    Vector<String> names = new Vector<String>();    names.add("供应商名称");    for (int i = 0; i < itemList.size(); i++) {      names.add(itemList.get(i).getItemName());    }    names.add("评审结果");    return names;  }  private static List<ColumnBeanPropertyPair> itemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemInfo.add(new ColumnBeanPropertyPair("ITEM_NAME", "itemName", "指标名称"));    itemInfo.add(new ColumnBeanPropertyPair("ITEM_DESC", "itemDesc", "描述"));  }  public static TableModel convertSubBiTableData(List<ZcEbProviderPreAuditItem> biList) {    BeanTableModel<ZcEbProviderPreAuditItem> tm = new BeanTableModel<ZcEbProviderPreAuditItem>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");    for (ZcEbProviderPreAuditItem o : biList) {      o.setTempId(Guid.genID());    }    tm.setDataBean(biList, itemInfo);    return tm;  }  public static List<ColumnBeanPropertyPair> getItemInfo() {    return itemInfo;  }  public static void setItemInfo(List<ColumnBeanPropertyPair> itemInfo) {    ZcEbProPreAuditItemTableModelConverter.itemInfo = itemInfo;  }}
package com.ufgov.zc.client.common.converter.zc;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbNotice;public class ZcEbNoticeToTableModelConverter {  public static DefaultTableModel convertToTableModel(List noticeList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_NOTICE_ID));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_NOTICE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_NOTICE_TYPE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_NOTICE_STATUS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_INPUT_DATE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_INPUTOR_NAME));    //names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_EFFECTIVE_DATE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_REMARK));    if (noticeList != null && noticeList.size() > 0) {      for (int i = 0; i < noticeList.size(); i++) {        Vector rowData = new Vector();        ZcEbNotice zcEbNotice = (ZcEbNotice) noticeList.get(i);        rowData.add(zcEbNotice.getNoticeID());        rowData.add(zcEbNotice.getNoticeName());        rowData.add(zcEbNotice.getProjCode());        rowData.add(zcEbNotice.getProjName());        rowData.add(zcEbNotice.getPackName());                rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", zcEbNotice.getNoticeType()));        rowData.add(AsValDataCache.getName("ZC_EB_NOTICE_STATUS", zcEbNotice.getNoticeStatus()));        rowData.add(zcEbNotice.getExecuteDate());        rowData.add(zcEbNotice.getInputorName());        //  rowData.add(zcEbNotice.getEffectiveDate());        rowData.add(zcEbNotice.getRemark());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(noticeList);    return tableModel;  }}
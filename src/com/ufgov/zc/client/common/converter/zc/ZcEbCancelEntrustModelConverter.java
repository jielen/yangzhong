package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.component.ui.conditionitem.ConditionFieldConstants;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.commonbiz.model.BaseElement;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.TreeNodeValueObject;import com.ufgov.zc.common.zc.model.ZcEbCancelEntrust;import com.ufgov.zc.common.zc.model.ZcEbEntrustDetail;public class ZcEbCancelEntrustModelConverter {  @SuppressWarnings("unchecked")  public static TableModel convertToTableModel(List zcEbCancelEntrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_SN));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_CGNR));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_SUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_CGFS));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_CGDW));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_AGEY_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_LINK_MAN));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_LINK_MAN_TEL));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_CANCEL_DATE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_EB_ENTRUST_CANCEL_STATUS));    if (zcEbCancelEntrustList != null && zcEbCancelEntrustList.size() > 0) {      for (int i = 0; i < zcEbCancelEntrustList.size(); i++) {        ZcEbCancelEntrust cancelEntrust = (ZcEbCancelEntrust) zcEbCancelEntrustList.get(i);        Vector rowData = new Vector();        rowData.add(cancelEntrust.getZcEbEntrust().getZcMakeCode());        rowData.add(cancelEntrust.getCgnr());        rowData.add(cancelEntrust.getCgje());        rowData.add(AsValDataCache.getName("ZC_VS_PITEM_OPIWAY", cancelEntrust.getCgfs()));        rowData.add(cancelEntrust.getCgdwName());        rowData.add(cancelEntrust.getDljgName());        rowData.add(cancelEntrust.getLinkMan());        rowData.add(cancelEntrust.getLinkManTel());        rowData.add(cancelEntrust.getInputDate());        rowData.add(AsValDataCache.getName(ConditionFieldConstants.ZC_VS_CANCEL_ENTRUST_STATUS, cancelEntrust.getStatus()));        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(zcEbCancelEntrustList);    return tableModel;  }  private static List<ColumnBeanPropertyPair> itemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME), "zcPitemName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE), "zcCatalogueCode",    LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME), "zcCatalogueName",    LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE), "zcPitemArrDate",    LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ARR_DATE)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ), "zcBaseGgyq", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BASE_GGYQ)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH), "zcPitemAttach", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM), "zcCaigNum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_NUM)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE), "zcMerPrice", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_PRICE)));    itemInfo.add(new ColumnBeanPropertyPair(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM), "zcItemSum", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_ITEM_SUM)));  }  public static TableModel convertDetailToTableModel(List itemList) {    BeanTableModel<ZcEbEntrustDetail> tm = new BeanTableModel<ZcEbEntrustDetail>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if ("ZC_FIELD_ZC_CATALOGUE_NAME".equals(columnId) || "ZC_FIELD_ZC_PITEM_ATTACH_BLOBID".equals(columnId)) {          return false;        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcEbEntrustDetail bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (obj != null) {            if (aValue == null || !obj.equals(((TreeNodeValueObject) aValue).getCode())) {            }          }          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_PITEM_ATTACH.equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcPitemAttach(null);            this.getBean(rowIndex).setZcPitemAttachBlobid(null);          } else {            this.getBean(rowIndex).setZcPitemAttach(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcPitemAttachBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    if (itemList != null) {      for (Object o : itemList) {        ((ZcEbEntrustDetail) o).setTempId(Guid.genID());      }    }    tm.setDataBean(itemList, itemInfo);    return tm;  }}
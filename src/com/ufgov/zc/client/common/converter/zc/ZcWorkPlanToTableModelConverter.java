package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.zc.model.ZcWorkPlan;import com.ufgov.zc.common.zc.model.ZcWorkPlanDetail;/*** @ClassName: ZcWorkPlanToTableModelConverter* @Description: TODO(这里用一句话描述这个类的作用)* @date: Oct 21, 2010 5:04:26 PM* @version: V1.0 * @since: 1.0* @author: LEO* @modify: */public class ZcWorkPlanToTableModelConverter {  public static DefaultTableModel convertToTableModel(List planList) {    MyTableModel tableModel = null;    Vector<String> names = new Vector<String>();    Vector values = new Vector();    prepareColumnHeader(names);    if (planList != null) {      for (int i = 0; i < planList.size(); i++) {        Vector rowData = new Vector();        ZcWorkPlan plan = (ZcWorkPlan) planList.get(i);        rowData.add(plan.getPlanName());        rowData.add(plan.getBelongDepartment());        rowData.add(AsValDataCache.getName("VS_ZC_WORKPLAN_STATUS", plan.getPlanStatus()));        rowData.add(AsValDataCache.getName("VS_ZC_WORKPLAN_TYPE", plan.getPlanType()));        rowData.add(plan.getNd());        rowData.add(plan.getInputDate());        rowData.add(plan.getUpdateDate());        rowData.add(plan.getPlannerName());        rowData.add(plan.getRemark());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      private static final long serialVersionUID = 3123244681117334262L;      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(planList);    return tableModel;  }  private static void prepareColumnHeader(Vector<String> names) {    names.add("名称");    names.add("部门");    names.add("状态");    names.add("类型");    names.add("年度");    names.add("录入日期");    names.add("更新日期");    names.add("录入人");    names.add("备注");  }  public static TableModel convertWorkPlanDetailToTableModel(List<ZcWorkPlanDetail> detailList) {    BeanTableModel<ZcWorkPlanDetail> tm = new BeanTableModel<ZcWorkPlanDetail>() {      private static final long serialVersionUID = 6888363838628062064L;      public boolean isCellEditable(int row, int column) {        return true;      }    };    tm.setOidFieldName("tempId");    for (ZcWorkPlanDetail data : detailList) {      data.setTempId(Guid.genID());    }    tm.setDataBean(detailList, detailTableColumnInfo);    return tm;  }  private static List<ColumnBeanPropertyPair> detailTableColumnInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PLAN_CONTENT", "planContent", "计划内容"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PLAN_START_TIME", "planStartTime", "起始时间"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PLAN_END_TIME", "planEndTime", "结束时间"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PLAN_FINISH_DESC", "planFinishDesc", "完成情况"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("LEADER_EVALUTION", "leaderEvalution", "领导意见"));  }  public static List<ColumnBeanPropertyPair> getDetailTableColumnInfo() {    return detailTableColumnInfo;  }}
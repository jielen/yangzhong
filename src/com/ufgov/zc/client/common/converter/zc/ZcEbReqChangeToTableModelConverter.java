package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.CompanyDataCache;import com.ufgov.zc.common.zc.model.ZcEbReqChange;@SuppressWarnings("unchecked")public class ZcEbReqChangeToTableModelConverter {  private static List<ColumnBeanPropertyPair> packTableColumnInfo = new ArrayList<ColumnBeanPropertyPair>();  public static List<ColumnBeanPropertyPair> getPackTableColumnInfo() {    return packTableColumnInfo;  }  static {    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_NAME", "packName", "分包编号"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_DESC", "packDesc", "分包名称"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_BUDGET", "packBudget", "预算"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PUR_SRC_WAY", "purSrcWay", "原采购方式"));    packTableColumnInfo.add(new ColumnBeanPropertyPair("PUR_WAY", "purWay", "拟变更采购方式"));    //packTableColumnInfo.add(new ColumnBeanPropertyPair("CHG_NUM", "chgNum", "变更次数"));  }  private static void prepareColumnHeader(Vector<String> names) {    names.add("变更单号");    names.add("预算单位");    names.add("采购计划编号");//取经办人报采购计划时的计划编号    names.add("任务单编号");//取经办人报采购计划时的计划编号    names.add("项目名称");//取经办人报采购计划    names.add("制单时间");    names.add("采购预算");  }  public static void loadObjectData(Vector rowData, ZcEbReqChange zcEbProj) {    rowData.add(zcEbProj.getChangeCode());    rowData.add(CompanyDataCache.getNameByCode(zcEbProj.getCoCode()));    rowData.add(zcEbProj.getZcMakeCode());    rowData.add(zcEbProj.getSnCode());    rowData.add(zcEbProj.getZcMakeName());    rowData.add(zcEbProj.getZcInputDate());    rowData.add(zcEbProj.getZcMoneyBiSum());//项目预算  }  public static DefaultTableModel convertToTableModel(List projectList) {    MyTableModel tableModel = null;    Vector<String> names = new Vector<String>();    Vector values = new Vector();    prepareColumnHeader(names);    if (projectList != null && projectList.size() > 0) {      for (int i = 0; i < projectList.size(); i++) {        Vector rowData = new Vector();        ZcEbReqChange zcEbProj = (ZcEbReqChange) projectList.get(i);        //        rowData.add(zcEbProj.getProjSrcCode());        loadObjectData(rowData, zcEbProj);        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      private static final long serialVersionUID = 3123244681117334262L;      @Override      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(projectList);    return tableModel;  }}
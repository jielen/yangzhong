package com.ufgov.zc.client.common.converter.zc;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.common.commonbiz.model.BaseElement;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.ZcEbEntrustCancel;import com.ufgov.zc.common.zc.model.ZcEbEntrustCancelDetail;/** * @author Administrator * */public class ZcEbEntrustCancelToTableModelConverter {  @SuppressWarnings( { "unchecked", "serial" })  public static DefaultTableModel convertToTableModel(List billList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add("任务取消编号");    names.add("预算单位");    names.add("任务单编号");//    names.add("项目名称");    names.add("文件负责人");    names.add("开标负责人");    names.add("状态");    if (billList != null && billList.size() > 0) {      for (int i = 0; i < billList.size(); i++) {        Vector rowData = new Vector();        ZcEbEntrustCancel entrust = (ZcEbEntrustCancel) billList.get(i);        rowData.add(entrust.getEntrustCancelId());        rowData.add(entrust.getCoName());        rowData.add(entrust.getSnCode() == null || entrust.getSnCode().length() == 0 ? entrust.getSn() : entrust.getSnCode());//        rowData.add(entrust.getProjName());        rowData.add(entrust.getProjDocMan());        rowData.add(entrust.getProjBidMan());        rowData.add(AsValDataCache.getName(ZcElementConstants.VS_ZC_EB_YANSHOU, entrust.getStatus()));        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      @Override      public Class getColumnClass(int column) {        if (column >= 0 && column < getColumnCount() && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      @Override      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(billList);    return tableModel;  }  public static TableModel convertDetailToTableModel(List itemList) {    BeanTableModel<ZcEbEntrustCancelDetail> tm = new BeanTableModel<ZcEbEntrustCancelDetail>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (!"ZC_FIELD_PACK_NAME".equals(columnId)) {          return false;        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcEbEntrustCancelDetail bean = dataBeanList.get(rowIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (Object o : itemList) {      ((ZcEbEntrustCancelDetail) o).setTempId(Guid.genID());    }    tm.setDataBean(itemList, itemInfo);    return tm;  }  private static List<ColumnBeanPropertyPair> itemInfo = new ArrayList<ColumnBeanPropertyPair>();  public static List<ColumnBeanPropertyPair> getItemInfo(){    return itemInfo;  }  static {//    itemInfo.add(new ColumnBeanPropertyPair("ZC_FIELD_PROJ_CODE", "projCode", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_CODE)));////    itemInfo.add(new ColumnBeanPropertyPair("ZC_FIELD_PROJ_NAME", "projName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    itemInfo.add(new ColumnBeanPropertyPair("ZC_FIELD_PACK_NAME", "packName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE)));    itemInfo.add(new ColumnBeanPropertyPair("ZC_FIELD_PACK_DESC", "packDesc", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_DESC)));    itemInfo.add(new ColumnBeanPropertyPair("ZC_FIELD_PACK_SUM", "packSum", LangTransMeta.translate("ZC_EB_FIELD_PACK_BUDGET")));  }}
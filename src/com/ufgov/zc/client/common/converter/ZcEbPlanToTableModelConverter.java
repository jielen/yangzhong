/** * ZcEbPlanToTableModelConverter.java * com.ufgov.gk.client.zc.zcebsignup * Administrator * 2010-5-26 */package com.ufgov.zc.client.common.converter;import java.util.ArrayList;import java.util.List;import java.util.Vector;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.zc.model.ZcEbPack;import com.ufgov.zc.common.zc.model.ZcEbPlan;/** * @author Administrator * */public class ZcEbPlanToTableModelConverter {  public TableModel convertToTableModel(List zcEbPlanLst) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_PROJ_NAME));    if (zcEbPlanLst != null && zcEbPlanLst.size() > 0) {      for (int i = 0; i < zcEbPlanLst.size(); i++) {        Vector rowData = new Vector();        ZcEbPlan bt = (ZcEbPlan) zcEbPlanLst.get(i);        rowData.add(bt.getProjCode());        rowData.add(bt.getProjName());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(zcEbPlanLst);    return tableModel;  }  public static TableModel convertPlanPackToTableModel(List<ZcEbPack> detailList) {    BeanTableModel<ZcEbPack> tm = new BeanTableModel<ZcEbPack>() {      private static final long serialVersionUID = 6888363838628062064L;      public boolean isCellEditable(int row, int column) {        String colId = this.getColumnIdentifier(column);        if ("PACK_BID_DEPOSIT".equals(colId)) {          return true;        } else {          return false;        }      }    };    tm.setOidFieldName("tempId");    for (ZcEbPack data : detailList) {      data.setTempId(Guid.genID());    }    tm.setDataBean(detailList, detailTableColumnInfo);    return tm;  }  private static List<ColumnBeanPropertyPair> detailTableColumnInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_NAME", "packName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PACK_CODE)));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_DETAIL", "purContent", "分包明细"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_BUDGET", "packBudget", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ZC_EB_FIELD_PACK_BUDGET)));    //    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_BID_DOCPRICE", "bidDocPrice", "标书售价(元)"));    detailTableColumnInfo.add(new ColumnBeanPropertyPair("PACK_BID_DEPOSIT", "bidDeposit", "保证金(元)"));  }  public static List<ColumnBeanPropertyPair> getDetailTableColumnInfo() {    return detailTableColumnInfo;  }}
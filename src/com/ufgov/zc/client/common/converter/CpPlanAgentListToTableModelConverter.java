package com.ufgov.zc.client.common.converter;import java.util.List;import java.util.Vector;import com.ufgov.zc.client.common.BillElementMeta;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.util.CodeNameHandler;import com.ufgov.zc.common.cp.model.CpPlanAgentList;import com.ufgov.zc.common.system.constants.CpElementConstants;public class CpPlanAgentListToTableModelConverter {  public static Vector getCpPlanAgentListColumns(BillElementMeta bem) {    Vector names = new Vector();    names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PLAN_AGENT_BILL_ID));    //    names.add(LangTransMeta.translate(CpElementConst.FIELD_TRANS_SEQU));    if (bem.isElementDecFlag("BI_BALANCE_ID")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_BI_BALANCE_ID));    }    names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_MONEY));    if (bem.isElementDecFlag("ORG_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_ORG_NAME));    }    if (bem.isElementDecFlag("B_ACC_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_B_ACC_CODE));      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_B_ACC_NAME));    }    if (bem.isElementDecFlag("INCEPTDOC_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_INCEPTDOC_NAME));    }    if (bem.isElementDecFlag("SENDDOC_TYPE_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_SENDDOC_TYPE_NAME));    }    if (bem.isElementDecFlag("SENDDOC_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_SENDDOC_NAME));    }    if (bem.isElementDecFlag("CO_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_CO_CODE));      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_CO_NAME));    }    if (bem.isElementDecFlag("PROJECT_TYPE_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PROJECT_TYPE_NAME));    }    if (bem.isElementDecFlag("PROJECT_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PROJECT_NAME));    }    if (bem.isElementDecFlag("FUND_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_FUND_NAME));    }    if (bem.isElementDecFlag("ORIGIN_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_ORIGIN_NAME));    }    if (bem.isElementDecFlag("OUTLAY_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_OUTLAY_NAME));    }    if (bem.isElementDecFlag("PAYOUT_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PAYOUT_NAME));    }    if (bem.isElementDecFlag("MANAGE_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_MANAGE_NAME));    }    if (bem.isElementDecFlag("PAYTYPE_CODE")) {      names.add(LangTransMeta.translate(CpElementConstants.FIELD_TRANS_PAYTYPE_NAME));    }    return names;  }  public static Vector getCpPlanAgentListRecords(List agentList, BillElementMeta bem) {    Vector values = new Vector();    CpPlanAgentList bill = null;    CodeNameHandler.handleNames(agentList);    for (int i = 0; i < agentList.size(); i++) {      Vector eachRowData = new Vector();      CpPlanAgentList plan = (CpPlanAgentList) agentList.get(i);      eachRowData.add(plan.getPlanAgentBillId());      //        eachRowData.add(plan.getSequ());      if (bem.isElementDecFlag("BI_BALANCE_ID")) {        eachRowData.add(plan.getBiBalanceId());      }      eachRowData.add(plan.getMoney());      if (bem.isElementDecFlag("ORG_CODE")) {        eachRowData.add(plan.getOrgName());      }      if (bem.isElementDecFlag("B_ACC_CODE")) {        eachRowData.add(plan.getBaccCode());        eachRowData.add(plan.getBaccName());      }      if (bem.isElementDecFlag("INCEPTDOC_CODE")) {        eachRowData.add(plan.getInceptDocName());      }      if (bem.isElementDecFlag("SENDDOC_TYPE_CODE")) {        eachRowData.add(plan.getSendDocTypeCode());      }      if (bem.isElementDecFlag("SENDDOC_CODE")) {        eachRowData.addElement(plan.getSendDocName());      }      if (bem.isElementDecFlag("CO_CODE")) {        eachRowData.add(plan.getCoCode());        eachRowData.add(plan.getCoName());      }      if (bem.isElementDecFlag("PROJECT_TYPE_CODE")) {        eachRowData.add(plan.getProjectTypeName());      }      if (bem.isElementDecFlag("PROJECT_CODE")) {        eachRowData.add(plan.getProjectName());      }      if (bem.isElementDecFlag("FUND_CODE")) {        eachRowData.add(plan.getFundName());      }      if (bem.isElementDecFlag("ORIGIN_CODE")) {        eachRowData.add(plan.getOriginName());      }      if (bem.isElementDecFlag("OUTLAY_CODE")) {        eachRowData.add(plan.getOutlayName());      }      if (bem.isElementDecFlag("PAYOUT_CODE")) {        eachRowData.add(plan.getPayoutName());      }      if (bem.isElementDecFlag("MANAGE_CODE")) {        eachRowData.add(plan.getManageName());      }      if (bem.isElementDecFlag("PAYTYPE_CODE")) {        eachRowData.add(plan.getPaytypeName());      }      values.add(eachRowData);    }    return values;  }}
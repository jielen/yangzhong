package com.ufgov.zc.client.component;import java.awt.BorderLayout;import java.awt.Dimension;import java.awt.FlowLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.KeyAdapter;import java.awt.event.KeyEvent;import java.util.List;import java.util.Vector;import javax.swing.JLabel;import javax.swing.JMenuItem;import javax.swing.JPanel;import javax.swing.JPopupMenu;import javax.swing.JScrollPane;import javax.swing.JTable;import javax.swing.JTextField;import javax.swing.border.BevelBorder;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableRowSorter;import com.ufgov.smartclient.component.table.fixedtable.JPageableFixedTable;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.client.common.WorkEnv;import com.ufgov.zc.client.common.converter.DpDetailToTableModelConverter;import com.ufgov.zc.client.util.SwingUtil;import com.ufgov.zc.common.dp.model.DpDetail;import com.ufgov.zc.common.dp.publish.IDpDetailServiceDelegate;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.constants.BillTypeConstants;public class QueryDataDetailPopupMenu extends JPopupMenu {  private IDpDetailServiceDelegate dpDetailServiceDelegate;  private static final long serialVersionUID = 1L;  public static String QUERY_DP_DETAIL = "DP_DETAIL";//查询计划明细  public static String QUERY_BI_TRACK = "BI_TRACK";//查询指标明细  private JMenuItem queryDpDetailMenuItem = new JMenuItem("查看额度明细信息");  private JMenuItem queryBiTrackMenuItem = new JMenuItem("查看指标明细信息");  private String balanceId;  private List resultList;  public QueryDataDetailPopupMenu(final String balanceId, String queryType) {    this.add("");    if (queryType.equalsIgnoreCase(this.QUERY_DP_DETAIL)) {      this.add(queryDpDetailMenuItem);    }    this.addSeparator();    if (queryType.equalsIgnoreCase(this.QUERY_BI_TRACK)) {      this.add(queryBiTrackMenuItem);    }    this.add("");    this.add("");    this.setBorder(new BevelBorder(BevelBorder.RAISED));    this.balanceId = balanceId;    initService();    initResult(balanceId);    queryDpDetailMenuItem.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        QueryDpDetailDialog dlg = new QueryDpDetailDialog(balanceId);        dlg.setVisible(true);      }    });    queryBiTrackMenuItem.addActionListener(new ActionListener() {      public void actionPerformed(ActionEvent e) {        QueryBiTrackDialog dlg = new QueryBiTrackDialog(balanceId);        dlg.setVisible(true);      }    });  }  public void initService() {    this.dpDetailServiceDelegate = (IDpDetailServiceDelegate) ServiceFactory.create(IDpDetailServiceDelegate.class, "dpDetailServiceDelegate");    LangTransMeta.init("DP%");    LangTransMeta.init("BI%");  }  public void initResult(String balanceId) {    RequestMeta requestMeta = WorkEnv.getInstance().getRequestMeta();    resultList = dpDetailServiceDelegate.getDpDetailInfo(balanceId, 2009, requestMeta);  }  private class QueryDpDetailDialog extends GkBaseDialog {    JLabel queryLbl = new JLabel("查找：");    JTextField queryTxt = new JTextField();    JPageableFixedTable resultTable = SwingUtil.createTable(JPageableFixedTable.class);    private TableRowSorter resultSorter = new TableRowSorter();    public QueryDpDetailDialog(String balanceId) {      this.setTitle("额度明细信息");      this.setSize(700, 500);      this.moveToScreenCenter();      this.setModal(false);      JPanel parentPanel = new JPanel(new BorderLayout());      JPanel queryPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));      queryPanel.add(queryLbl);      queryPanel.add(queryTxt);      queryTxt.addKeyListener(new KeyAdapter() {        public void keyReleased(KeyEvent e) {          resultSorter.setRowFilter(new SimpleRowFilter(queryTxt.getText()));          resultTable.repaint();        }      });      queryTxt.setColumns(20);      parentPanel.add(queryPanel, BorderLayout.NORTH);      JScrollPane pane = new JScrollPane();      DefaultTableModel model = initResultTableMode();      resultTable.setModel(model);      resultSorter.setModel(model);      resultTable.setRowSorter(resultSorter);      resultTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);      resultTable.setPreferredScrollableViewportSize(new Dimension(700, 150));      pane.getViewport().add(resultTable);      parentPanel.add(pane, BorderLayout.CENTER);      this.add(parentPanel);    }    private DefaultTableModel initResultTableMode() {      DefaultTableModel model = DpDetailToTableModelConverter.ConvertDpDetailToTableModelForListPage(resultList,        BillTypeConstants.BILL_TYPE_CODE_DP_EDIT);      return model;    }  }  /**   * 查询指标明细信息;   * @author ufwangfei   *   */  private class QueryBiTrackDialog extends GkBaseDialog {    JLabel queryLbl = new JLabel("查找：");    JTextField queryTxt = new JTextField();    JPageableFixedTable resultTable = SwingUtil.createTable(JPageableFixedTable.class);    private TableRowSorter resultSorter = new TableRowSorter();    public QueryBiTrackDialog(String balanceId) {      this.setTitle("指标明细信息");      this.setSize(700, 500);      this.moveToScreenCenter();      this.setModal(false);      JPanel parentPanel = new JPanel(new BorderLayout());      JPanel queryPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));      queryPanel.add(queryLbl);      queryPanel.add(queryTxt);      queryTxt.addKeyListener(new KeyAdapter() {        public void keyReleased(KeyEvent e) {          resultSorter.setRowFilter(new SimpleRowFilter(queryTxt.getText()));          resultTable.repaint();        }      });      queryTxt.setColumns(20);      parentPanel.add(queryPanel, BorderLayout.NORTH);      JScrollPane pane = new JScrollPane();      DefaultTableModel model = initResultTableMode();      resultTable.setModel(model);      resultSorter.setModel(model);      resultTable.setRowSorter(resultSorter);      resultTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);      resultTable.setPreferredScrollableViewportSize(new Dimension(700, 150));      pane.getViewport().add(resultTable);      parentPanel.add(pane, BorderLayout.CENTER);      this.add(parentPanel);    }    private DefaultTableModel initResultTableMode() {      DefaultTableModel tableModel = null;      Vector names = new Vector();      names.add(LangTransMeta.translate("DP_FIELD_DP_DETAIL_ID"));      Vector values = new Vector();      for (int i = 0; i < resultList.size(); i++) {        DpDetail dpDetail = (DpDetail) resultList.get(i);        Vector rowData = new Vector();        rowData.add(dpDetail.getDpDetailId());        values.add(rowData);      }      tableModel = new DefaultTableModel(values, names) {        public boolean isCellEditable(int row, int colum) {          return false;        }      };      return tableModel;    }  }}
package com.ufgov.zc.client.component.zc.dataexchange.model;import java.util.HashMap;import java.util.Map;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.DataExchangeRedo;import com.ufgov.zc.common.zc.publish.IDataExchangeServiceDelegate;public class ExchangeDataRedoOperator extends ABaseData {  private static final long serialVersionUID = 6954878394983768889L;  public transient IDataExchangeServiceDelegate dataExchangeServiceDelegate = (IDataExchangeServiceDelegate) ServiceFactory  .create(IDataExchangeServiceDelegate.class, "dataExchangeServiceDelegate");  /**   * 获得表头中文-属性对照表   */  public Map<String, String> getColumnHeadersMap() {    Map<String, String> map = new HashMap<String, String>();    map.put("名称", "recordName");    map.put("唯一标识", "recordID");    map.put("数据类别", "dataTypeName");    map.put("导出时间", "generateDate");    map.put("记录内容", "recordContent");    return map;  }  public Map<String, Map<String, AttachmentFile>> getAttachmentDataMap() {    return new HashMap<String, Map<String, AttachmentFile>>();  }  public int doExportData(ElementConditionDto dto, RequestMeta meta, String path) {    this.setDataList(dataExchangeServiceDelegate.getDataExchangeRedoList(dto, meta));    return this.getDataList().size();  }  public int doImportData(ElementConditionDto dto, RequestMeta meta, String path) {    for (int i = 0; i < this.getDataList().size(); i++) {      DataExchangeRedo redo = (DataExchangeRedo) this.getDataList();      dataExchangeServiceDelegate.saveDataExchangeRedo(redo, meta);    }    return this.getDataList().size();  }  public int doModifyDataStatus(ElementConditionDto dto, RequestMeta meta, String standby) {    return 0;  }}
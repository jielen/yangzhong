package com.ufgov.zc.client.component.zc.dataexchange.model;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import com.ufgov.zc.client.common.ServiceFactory;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.zc.model.DataExchangeLog;import com.ufgov.zc.common.zc.publish.IDataExchangeServiceDelegate;public class ExchangeDataLogModel extends ABaseData {  private static final long serialVersionUID = 6954878394983768889L;  public transient IDataExchangeServiceDelegate dataExchangeServiceDelegate = (IDataExchangeServiceDelegate) ServiceFactory  .create(IDataExchangeServiceDelegate.class, "dataExchangeServiceDelegate");  private transient List<DataExchangeLog> logList = new ArrayList<DataExchangeLog>();  //主要用来存储导入、导出时日志的直接存储  private List<DataExchangeLog> exportDataList = new ArrayList<DataExchangeLog>();  private List<DataExchangeLog> importDataList = new ArrayList<DataExchangeLog>();  public Map<String, String> getColumnHeadersMap() {    Map<String, String> map = new HashMap<String, String>();    map.put("数据类型ID", "dataTypeID");    map.put("数据类型名称", "dataTypeName");    map.put("数据所在数据库表", "recSrcTab");    map.put("数据原始ID", "recSrcID");    map.put("数据原始名称", "recSrcName");    //map.put("数据所属用户", "userID");    //map.put("记录产生阶段", "gentType");    map.put("记录产生时间", "optDateTime");    map.put("记录产生原因", "detailInfo");    map.put("异常内容", "exceptText");    map.put("操作状态", "recStatus");    return map;  }  public void getLogListFromDB(ElementConditionDto dto, RequestMeta meta) {    this.setLogList(dataExchangeServiceDelegate.getDataExchangeLogs(dto, meta));  }  public void saveDataToDB(List<DataExchangeLog> data, RequestMeta meta) {    for (int i = 0; i < data.size(); i++) {      dataExchangeServiceDelegate.save(data.get(i), meta);    }  }  public List<DataExchangeLog> getExportDataList() {    return exportDataList;  }  public void setExportDataList(List<DataExchangeLog> exportDataList) {    this.exportDataList = exportDataList;  }  public List<DataExchangeLog> getImportDataList() {    return importDataList;  }  public void setImportDataList(List<DataExchangeLog> importDataList) {    this.importDataList = importDataList;  }  public List getDataList() {    return this.logList;  }  public List<DataExchangeLog> getLogList() {    return logList;  }  public void setLogList(List<DataExchangeLog> logList) {    this.logList = logList;  }  public int doExportData(ElementConditionDto dto, RequestMeta meta, String saveRootPath) {    return 0;  }  public int doImportData(ElementConditionDto dto, RequestMeta meta, String readRootPath) {    return 0;  }  public int doModifyDataStatus(ElementConditionDto dto, RequestMeta meta, String standby) {    return 0;  }  public Map<String, Map<String, AttachmentFile>> getAttachmentDataMap() {    return null;  }}
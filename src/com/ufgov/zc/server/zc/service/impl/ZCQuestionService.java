package com.ufgov.zc.server.zc.service.impl;import java.math.BigDecimal;import java.util.List;import com.ufgov.zc.common.system.RequestMeta;import com.ufgov.zc.common.system.dto.ElementConditionDto;import com.ufgov.zc.common.system.exception.BusinessException;import com.ufgov.zc.common.system.model.AsWfDraft;import com.ufgov.zc.common.zc.model.ZcEbQuestionPack;import com.ufgov.zc.common.zc.model.ZcEbQuestionWithBLOBs;import com.ufgov.zc.server.system.dao.IWorkflowDao;import com.ufgov.zc.server.system.util.NumUtil;import com.ufgov.zc.server.system.workflow.WFEngineAdapter;import com.ufgov.zc.server.zc.dao.IZCQuestionDao;import com.ufgov.zc.server.zc.dao.ibatis.BaseDao;import com.ufgov.zc.server.zc.service.IZCQuestionService;/** * @author wuwb */public class ZCQuestionService implements IZCQuestionService {  private IZCQuestionDao izcQuestionDao;  private IWorkflowDao workflowDao;  private WFEngineAdapter wfEngineAdapter;  private BaseDao baseDao;  //zcEbProjService;  public IWorkflowDao getWorkflowDao() {    return workflowDao;  }  public void setWorkflowDao(IWorkflowDao workflowDao) {    this.workflowDao = workflowDao;  }  public WFEngineAdapter getWfEngineAdapter() {    return wfEngineAdapter;  }  public void setWfEngineAdapter(WFEngineAdapter wfEngineAdapter) {    this.wfEngineAdapter = wfEngineAdapter;  }  public BaseDao getBaseDao() {    return baseDao;  }  public void setBaseDao(BaseDao baseDao) {    this.baseDao = baseDao;  }  public IZCQuestionDao getIzcQuestionDao() {    return izcQuestionDao;  }  public void setIzcQuestionDao(IZCQuestionDao izcQuestionDao) {    this.izcQuestionDao = izcQuestionDao;  }  public List getMainDataLst(ElementConditionDto elementConditionDto, RequestMeta requestMeta) {    return izcQuestionDao.getMainDataLst(elementConditionDto);  }  public ZcEbQuestionWithBLOBs selectByPrimaryKey(String code, RequestMeta requestMeta) {    ZcEbQuestionWithBLOBs rtn = izcQuestionDao.selectByPrimaryKey(code);    rtn.setDbDigest(null);    rtn.setDbDigest(rtn.digest());    return rtn;  }  public ZcEbQuestionWithBLOBs saveFN(ZcEbQuestionWithBLOBs inData, RequestMeta requestMeta) throws BusinessException {    if (inData.getZyCode() == null) {      return insert(inData, requestMeta);    } else {      return update(inData, requestMeta);    }  }  private ZcEbQuestionWithBLOBs update(ZcEbQuestionWithBLOBs inData, RequestMeta requestMeta) {    izcQuestionDao.updateByPrimaryKeyWithBLOBs(inData);    return inData;  }  private ZcEbQuestionWithBLOBs insert(ZcEbQuestionWithBLOBs inData, RequestMeta requestMeta) {    String compoId = requestMeta.getCompoId();    String code = NumUtil.getInstance().getNo(compoId, "ZY_CODE", inData);    inData.setZyCode(code);    Long draftid = workflowDao.createDraftId();    inData.setProcessInstId(draftid);    for (int i = 0; i < inData.getPackLst().size(); i++) {      ZcEbQuestionPack qp = (ZcEbQuestionPack) inData.getPackLst().get(i);      qp.setZyCode(code);    }    izcQuestionDao.insert(inData);    AsWfDraft asWfDraft = new AsWfDraft();    asWfDraft.setCompoId(compoId);    asWfDraft.setWfDraftName(code);    asWfDraft.setUserId(requestMeta.getSvUserID());    asWfDraft.setMasterTabId(compoId);    asWfDraft.setWfDraftId(BigDecimal.valueOf(draftid.longValue()));    workflowDao.insertAsWfdraft(asWfDraft);    inData.setDbDigest(null);    inData.setDbDigest(inData.digest());    return inData;  }  public void deleteByPrimaryKeyFN(String code, RequestMeta requestMeta) throws BusinessException {    izcQuestionDao.deleteByPrimaryKey(code);  }  public ZcEbQuestionWithBLOBs unAuditFN(ZcEbQuestionWithBLOBs qx, RequestMeta requestMeta) throws BusinessException {    // TCJLODO Auto-generated method stub    wfEngineAdapter.rework(qx.getComment(), qx, requestMeta);    return qx;  }  public ZcEbQuestionWithBLOBs untreadFN(ZcEbQuestionWithBLOBs qx, RequestMeta requestMeta) throws BusinessException {    // TCJLODO Auto-generated method stub    wfEngineAdapter.untread(qx.getComment(), qx, requestMeta);    return qx;  }  public ZcEbQuestionWithBLOBs auditFN(ZcEbQuestionWithBLOBs qx, RequestMeta requestMeta) throws BusinessException {    // TCJLODO Auto-generated method stub    qx = saveFN(qx, requestMeta);    wfEngineAdapter.commit(qx.getComment(), qx, requestMeta);    return selectByPrimaryKey(qx.getZyCode(), requestMeta);  }  public ZcEbQuestionWithBLOBs newCommitFN(ZcEbQuestionWithBLOBs qx, RequestMeta requestMeta) throws BusinessException {    // TCJLODO Auto-generated method stub    wfEngineAdapter.newCommit(qx.getComment(), qx, requestMeta);    return selectByPrimaryKey(qx.getZyCode(), requestMeta);  }  public ZcEbQuestionWithBLOBs callbackFN(ZcEbQuestionWithBLOBs qx, RequestMeta requestMeta) throws BusinessException {    // TCJLODO Auto-generated method stub    wfEngineAdapter.callback(qx.getComment(), qx, requestMeta);    return qx;  }}